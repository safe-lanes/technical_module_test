Do not change anything except what is written below. Ask me first if anything is unclear.
Modify PMS — Change Requests (Phase 1.0 SAFE SHELL)
Scope (very important)

    DO NOT modify Components, Work Orders, Spares, Stores, Running Hours, or any existing data.

    This phase must not apply any changes to PMS. We are building a request log + basic workflow only.

    Reuse the existing Modify PMS → Change Requests screen and style.

A) Data (new tables only)

Create three new tables. Names can be snake_case; fields are required unless marked optional.

    change_request

    id (pk)

    vesselId

    category ∈ {components, work_orders, spares, stores}

    title (string 120)

    reason (text)

    status ∈ {draft, submitted, returned, approved, rejected} // no “live/apply” in this phase

    requestedByUserId

    submittedAt (nullable)

    reviewedByUserId (nullable)

    reviewedAt (nullable)

    createdAt, updatedAt

    change_request_attachment

    id (pk)

    changeRequestId (fk)

    filename, url

    uploadedByUserId

    uploadedAt

    change_request_comment

    id (pk)

    changeRequestId (fk)

    userId

    message (text)

    createdAt

NO other schema changes.
B) UI — keep current layout, add minimal flows
1) List page (the one already shown)

    Keep left categories: 1. Components, 2. Work orders, 3. Spares, 4. Stores.

    The table columns: Request Title, Requested By, Date (= createdAt), Status, View icon.

    “Search Status” box should filter on title + status (contains, case-insensitive).

    Row count footer (“3 of 3 requests”) stays.

2) New Change Request button

    Opens a modal (or new page) with fields:

        Category (dropdown: components/work orders/spares/stores)

        Vessel (existing vessel selector)

        Title (text)

        Reason / Business Justification (textarea)

        Attachments (multi-upload; store in change_request_attachment)

    Buttons:

        Save Draft → status=draft

        Submit → status=submitted, sets submittedAt=now, requestedByUserId=current

        Cancel (close, no changes)

    Validation: Title + Category + Vessel + Reason required for Submit. For Save Draft, Title required; others optional.

3) Detail / View screen (opens from eye icon)

Tabs (copy styling from existing app tabs):

    Summary (read-only): Title, Vessel, Category, Reason, Status, Created/Submitted, Requested By.

    Attachments: list with download links.

    Comments: simple thread (newest first); add comment at bottom.

4) Status actions (office only)

On the Summary tab, if user has office reviewer role:

    Buttons: Approve, Reject, Return for Clarification.

    Each action opens a tiny dialog forcing a comment (saved as a comment + sets reviewer and timestamps).

    Status transitions:

        submitted → approved / rejected / returned

        returned → submitted (only by requestor via Resubmit button that appears when status=returned)

    For this phase: Approving does nothing except change status. (No PMS changes!)

Requestor-only actions:

    Draft: Edit, Submit, Delete Draft (hard delete allowed for drafts only).

    Returned: Edit + Resubmit.

    Submitted/Approved/Rejected: read-only.

C) API (only for new module)

    POST /modify-pms/requests (create draft)

    PUT /modify-pms/requests/:id (edit draft/returned only)

    PUT /modify-pms/requests/:id/submit

    PUT /modify-pms/requests/:id/approve (office only; requires comment)

    PUT /modify-pms/requests/:id/reject (office only; requires comment)

    PUT /modify-pms/requests/:id/return (office only; requires comment)

    DELETE /modify-pms/requests/:id (allow only if status=draft)

    GET /modify-pms/requests?category=&status=&q=&vesselId= (list with filters)

    GET /modify-pms/requests/:id (detail with attachments + comments)

    POST /modify-pms/requests/:id/attachments

    POST /modify-pms/requests/:id/comments

Do not modify or call any PMS apply/renumber logic in this phase.
D) Permissions

    Ship roles: can create/edit own drafts, submit, edit when returned, add comments, view their requests.

    Office reviewer: list all, approve/reject/return, comment, view attachments.

    Auditor (read-only): list & view only.

E) Acceptance tests (must pass)

    Create draft → appears in list (status draft); can edit/delete.

    Submit → moves to submitted, fills SubmittedAt/RequestedBy; appears for office.

    Office Approve/Reject/Return require a comment; status updates and comment is visible in thread.

    Returned → requestor can edit + Resubmit to submitted.

    No changes happen anywhere in PMS data after approval (by design in this phase).

    UI style and layout match the existing screen; nothing else in the app changes.

If (and only if) all of Phase 1.0 passes, I’ll give Phase 1.1 next: add read-only “Proposed Change” fields (simple JSON diff capture) still without applying anything to PMS.