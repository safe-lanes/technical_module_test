Do not change anything except what is written below. If anything is unclear, ask first.
Hotfix: “Select Target Components” shows blank
Goal

Render the same component tree and same Section A preview used in the Components screen inside the “Select Target” overlay. The “Use this target” button stays disabled until a node is selected. No other screens or data must be modified.
A) Use the existing tree data provider

    Import/reuse the exact tree component + hook used on the Components page.

        Example (names will match your codebase):

            ComponentTree (left pane tree UI)

            useComponentsTree(vesselId) or the service that populates the Components screen

        Do not create a new API; reuse the same store/service the Components screen uses.

    The overlay must pass the correct vessel context:

        Get the current vesselId the same way the Components page does (route/store/context).

        Call the same provider: e.g. useComponentsTree(vesselId).

    Show proper states:

        If loading → show the same skeleton used on the Components screen.

        If error → show “Couldn’t load components.” with a Retry button.

        Only show “No components found” if the provider returns an actual empty array (and there is no error).

B) Left pane: actual tree + search

    Render ComponentTree with props:
    mode="select" (disable any create/edit/delete inside the overlay)
    onSelect(node) => setSelectedComponent(node)

    Wire the search input to the same filter function used on the Components page (do not implement a new filter; call the same search util so behavior matches).

C) Right pane: Section A (read-only) preview

    When a node is selected, fetch the same detail payload used by the Component Information panel on the main Components page.

        Prefer the same hook/service, e.g. getComponentSummary(componentId) or the selector your Components screen uses to render Section A.

        Do not fetch Sections B–H here.

    Display:

        Header: Name, Code, and full path (e.g., 6.1.1.2 Cylinder Liners)

        Section A — Component Information fields (read-only):

            Maker, Model, Serial No, Department, Component Category (not “Equipment Category”), Location, Commissioned Date, Critical (Yes/No), Class Item (Yes/No).

    While details load, show the same small skeleton used in the Components page.

D) Enable “Use this target” + return payload

    Keep the button disabled until selectedComponent is non-null and its Section A summary has loaded.

    On click, return to the parent form with:

{
  targetType: 'component',
  targetId: <componentId>,
  targetDisplay: {
    name: <componentName>,
    code: <componentCode>,          // e.g., "6.1.1.2"
    path: <fullPathString>          // e.g., "6 Machinery > 6.1 Diesel Engines > 6.1.1 Main Engine > 6.1.1.2 Cylinder Liners"
  },
  snapshotBeforeJson: {
    capturedAtUtc: <ISO>,
    vesselId: <vesselId>,
    displayPath: <fullPathString>,
    displayKey: <componentCode>,
    displayName: <componentName>,
    fields: {
      maker, model, serialNo, department, componentCategory,
      location, commissionedDate, critical, classItem
    }
  }
}

    Do not mutate any PMS data here.

E) Guard rails

    Do not change the Components screen itself, only reuse its components/services.

    Do not implement new endpoints. If absolutely necessary, mirror the existing calls the Components screen makes.

    Do not show edit controls inside the overlay.

F) Quick diagnostic checklist (if it’s still blank)

    Confirm vesselId is defined in the overlay (log it once; remove after).

    Open DevTools → Network: you should see the same requests the Components page makes (tree + summary).

    Verify the provider isn’t being blocked by a missing auth header/context in the overlay.

    Ensure the search box isn’t filtering everything out (clear the query on mount).

    Ensure CSS/container height allows the tree to render (no zero-height parent).

G) Acceptance

    Opening Select Target Components shows the real tree immediately (with loading skeleton first).

    Selecting any node shows Section A in the right pane (read-only).

    Use this target returns the payload + snapshot and populates the parent form’s Target card.

    No other page changes; no data mutated.