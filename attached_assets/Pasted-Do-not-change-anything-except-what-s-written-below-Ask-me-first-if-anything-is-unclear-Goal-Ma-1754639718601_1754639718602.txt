Do not change anything except what’s written below. Ask me first if anything is unclear.
Goal

Make the Add/Edit Component screen use the same tree and data as the Components screen, enable edit existing or add child under selected parent, auto-generate Component Code from the tree path, and load the A–H sections identical to the view screen with field add/delete enabled.
1) Left Pane – Tree (must match Components screen)

    Use the exact same tree component, datasource, labels, and numbering as the Components screen.

    Selection behavior:

        Click existing node → load that component into the right form (Edit mode).

        Navigate to desired parent, then click “Add Sub Component” → open form in Add mode with that parent preselected.

2) Add vs Edit flow

    Edit existing: selecting a node fills the form with that component’s saved data.

    Add child: when parent node P is selected and “Add Sub Component” is clicked:

        Pre-fill Parent Component with P.

        Auto-generate Component Code = P.path + "." + nextIntegerAtThatLevel (single-digit tokens, no leading zeros; allow 10, 11, … if needed).

        Do not allow manual editing of Component Code (read-only).

        Siblings are not renumbered. Only the new child gets the next number.

3) Component Code rules (apply in Add/Edit + save)

    Code must always equal the node’s dot-separated path shown in the left tree (e.g., 6.1.1, 1.1.1.2, 6.1.99).

    On move/re-parent (if supported), recompute the full path code to match the new position.

    On save, validate: code == computed path and is unique within the vessel. If not, block save with: “Component Code must match tree position.”

4) Right Pane – A–H form sections (customizable)

    Initial load: render the form with the same A–H sections and field order/labels as the read-only Component Information view:

        A. Component Information

        B. Running Hours & Condition Monitoring

        C. Work Orders

        D. Maintenance History

        E. Spares

        F. Drawings & Manuals

        G. Classification & Regulatory Data

        H. Requisitions

    Customization: enable add/delete fields inside any section and add/delete rows (data) where applicable.

        Keep existing add/delete UI/logic you built; just ensure it’s available here.

        Do not change styling, spacing, or colors.

    Persist the entered data exactly to the current models (no schema refactor).

5) Display specifics

    Component Code field in the form: read-only; auto-filled from the tree path.

    Show the code also in the view screen Section A (unchanged).

    Top filters, search, and “Save / Back / Add Sub Component” buttons: no change.

6) Safety

    If user clicks Add Sub Component with no parent selected, show a toast: “Select a parent in the tree to add a child component.”

    Do not alter any other screens, routes, styles, or data models.