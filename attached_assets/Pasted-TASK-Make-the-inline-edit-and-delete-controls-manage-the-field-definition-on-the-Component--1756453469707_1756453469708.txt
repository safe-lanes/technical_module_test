TASK: Make the inline edit (✎) and delete (×) controls manage the field definition on the Component Register – Add/Edit Component form

Where: PMS → Components → “Component Register – Add/Edit Component” modal (Sections A–H).
Goal: The small icons next to each label must edit/delete the field itself (definition), not the value in the input. If needed, show them only to users with form-config permissions (Admin / Modify PMS).

Behavior
1) ✎ Edit Field (edits the field definition)

Clicking ✎ opens a small “Edit Field” modal (or right-side drawer) to edit the field’s metadata:

Field Label (text)

Data Type (Text, Number, Date, Yes/No, Select, Multiline)

Required (Yes/No)

Placeholder / Help Text (optional)

Default Value (type-aware)

Unit (optional, text)

Validation (type-aware: min/max for number, regex mask, date constraints)

Options list (only when Data Type = Select; add/remove/reorder options)

On Save:

Update the form schema for this form version (do not overwrite historical versions).

Immediately re-render the field with the new label/type/etc.

Mark changed field visually:

While editing: show blue #52BAF3 border/state.

After saving a modified definition: label/value adopt #FF3B30 to indicate “changed in this version” (and/or when inside Modify PMS).

Auto-bump the form version (see “Versioning” below).

On Cancel:

Discard changes; return to the current definition.

2) × Delete Field (removes the field definition from the form)

Clicking × opens a confirm dialog:

“Delete this field from the Component Register form?
This won’t delete historical data; the field will be hidden for future use and entries. You can restore it from Admin → Forms (prior versions) or via Undo.”

If user confirms:

Remove the field from the current form schema (soft delete; mark as inactive/hidden).

Immediately remove the field block from the UI.

Show a temporary Undo snackbar/button for ~10s to restore.

Auto-bump the form version.

Locked fields (core system fields that must always exist, e.g., Component Name, Component Code, Component Category) must not be deletable:

Hide the × icon for locked fields or disable it with tooltip: “Locked field”.

✎ can still be available for changing label/help text where allowed (but not type).

Versioning (must integrate with Admin → Forms)

Every edit or delete of a field definition creates a new form version.

Store in DB:

form_id, version_no, version_date, changed_by, change_summary.

Full form schema JSON for that version (sections, fields, types, props).

The current version is what the Add/Edit Component modal renders.

In the Admin → Forms list, the Version No and Version Date must update accordingly.

Visual & UX details

Read-only vs edit state of the field value remains unchanged. The ✎/× we’re implementing are for field definition, not for entering data.

While the user is editing the field definition:

Highlight the field container with #52BAF3 (same edit color).

After a definition change (in current session), apply #FF3B30 to the field label (and value, if any) to indicate it’s changed in this version.

Icons are real buttons with:

aria-label="Edit field: Maker", aria-label="Delete field: Maker".

If user lacks permission (non-admin), hide both ✎ and × entirely.

Data/Schema model (suggested)