Do not change anything except what is written below. Ask me first if anything is unclear.
Scope

Apply to Work Orders (W.O) main screen (left sidebar → Work Orders), the unified WO form (Part A / Part B), and the Postpone modal. Keep UI styling and columns exactly as they are.
A) Row actions on the Work Orders list

    Row click: open the unified WO form for that template (start on Part A – Work Order Details; user can switch to Part B – Work Completion Record).

    Pencil icon: open Part A in edit template mode (same as now).

    Timer icon: open the Postpone Work Order modal (the one in the screenshot). On Confirm Postpone:

        Save Next Due Date (or Due Reading for RH-based) with the postponement.

        Save Reason, Authorized By, any attachments, and duration to the WO template’s audit trail.

        Set Status = Postponed (visible tag in the list) until the new due arrives. No change to approval state.

B) Save → Pending Approval workflow (execution record)

Goal: When the user fills the WO form (Part A + Part B) and saves the execution, it must move to Pending Approval and become read-only for the submitter.
1) Status model (do not rename other statuses)

Add/standardize:

    Draft (editing allowed; before submission)

    Pending Approval (locked to submitter)

    Approved (locked; final)

    Rejected (re-opens to Draft for the submitter with approver remarks)

    Postponed (for template scheduling, not an execution state)

2) Save behavior from the WO form

    When user completes Part B – Work Completion Record and clicks Save/Submit:

        Generate WO Execution ID = <YYYY>-<templateCode>-<NN> (NN = next per template per year).

        Persist all Part A (template snapshot) + Part B (completion data) into the execution record.

        Set execution Status = Pending Approval.

        Lock the execution for the submitter: Part A & B are read-only when reopened by the same user.

        Place the execution under the “Pending Approval” tab in the Work Orders list.

        Keep the template visible under All W.O with its usual next-due logic.

3) Tab logic (filters only; no UI changes)

    All W.O: shows templates with their current due state.

    Due / Overdue / Completed: apply to templates (as now).

    Pending Approval: shows executions with Status = Pending Approval (for all components). Use these columns: Component, WO Execution ID, WO Template Code, Job Title, Assigned To, Submitted Date, Status.

    Completed: also shows approved executions (see Section C).

    Important: Do not lose or overwrite any data when moving to Pending Approval. Execution records are separate from templates.

C) Approver flow (role-based)

    When an approver logs in and opens Pending Approval, each row can be Approved or Rejected (buttons or existing action pattern).

        Approve:

            Set execution Status = Approved.

            Write the execution into the component’s Section D – Maintenance History (if not already visible).

            Update the template’s Next Due:

                Calendar → Completion Date + Frequency

                Running Hours → Current Reading + Frequency

        Reject:

            Set execution Status = Rejected and add Approver Remarks (required).

            Return the execution to the submitter as Draft, editable again in Part B (Part A is still a snapshot unless they edit the template via pencil route).

    Only users with approver role can change Pending Approval items to Approved/Rejected. Submitters cannot edit items in Pending Approval.

D) Data bindings (no visual redesign)

    In the Work Orders list, keep columns as-is; for Work Order No show the WO Template Code (e.g., WO-6.1.1-OHRH1000).

    When listing Pending Approval, also show WO Execution ID (e.g., 2025-WO-6.1.1-OHRH1000-01).

    All previously created items with old W.O numbers: backfill templateCode and executionId on load if missing using our rules; persist after compute.

E) Routing consistency

    Add W.O (top-right) → unified WO form Part A (add template).

    Clock/complete action on a row → open Part B for new execution of that template.

    Row click → open Part A (template), with left-nav allowing switch to Part B.

F) Constraints

    Do not change styling, colors, column order, or non-mentioned screens.

    Do not refactor DB schema beyond adding/filling templateCode, executionId, status, approverRemarks, submittedDate if missing.

    Always preserve existing data.