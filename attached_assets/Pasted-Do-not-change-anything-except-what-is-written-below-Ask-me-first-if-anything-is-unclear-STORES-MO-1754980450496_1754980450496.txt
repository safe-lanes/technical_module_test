Do not change anything except what is written below. Ask me first if anything is unclear.
STORES MODULE — Add “History” tab + Excel export
0) Scope

    Applies to all four tabs: Stores, Lubes, Chemicals, Others.

    Copy/paste the same UI pattern used elsewhere in the app (tabs, table styling, filters). No redesign.

1) Add “History” tab (per section)

    For each of the four sections, add a sibling tab labeled History.

    UI: Copy the existing list/table look & feel (same header height, row styles, pagination, empty-state).

    Data source: Use an append-only ledger (if not present, read from existing history; otherwise add table stores_ledger).

        Minimum fields to display in the table:

            Date (local), Event (RECEIVE, CONSUME, ADJUST, TRANSFER_IN, TRANSFER_OUT, ARCHIVE)

            Item Name, Part Code

            UOM

            Qty Change (signed, in display UOM if available; show + for receive, − for consume)

            ROB After (base UOM)

            Place (for receive; blank otherwise)

            User (who performed)

            Remarks/Ref (PO/WO/notes)

    Sorting: default Date desc.

    Filters (copy same UI pattern already used):

        Date range (From/To) – evaluate in vessel local timezone

        Search (Item Name/Part Code)

        (Optional if already present) Event dropdown

    Realtime: After any Receive/Consume/Bulk/Adjust/Archive, append to History immediately and refresh the visible table (no full page reload).

    No behavior changes to the main Inventory tab.

If ledger table needed:

    Table: stores_ledger

        Fields: id, vesselId, section, itemId, partCode, itemName, uom, eventType, qtyChangeBase, qtyDisplay, uomDisplay, robAfterBase, dateLocal, tz, timestampUTC, place, ref, userId, remarks

        Indexes: (vesselId, section, dateLocal), (itemId, dateLocal)

2) Wire the Excel (sheet) icon to export current view

    The Excel icon on each tab (Inventory list and History) must export the current filtered dataset to an .xlsx file.

    Filename pattern:

        Inventory: stores_<section>_inventory_<YYYYMMDD_HHMM>.xlsx

        History: stores_<section>_history_<YYYYMMDD_HHMM>.xlsx

        Use server time for timestamp.

    Export columns (exactly as shown on screen, same order):

        Inventory tab: Item Name, Part Code, UOM, ROB, Min, Stock, Location, Component (if shown), Component Code (if shown)

        History tab: Date (local), Event, Item Name, Part Code, UOM, Qty Change, ROB After, Place, User, Remarks/Ref

    Respect current filters and search. Export the filtered set (not just current page).

3) Behaviors already implemented (do not change)

    Add/Edit item, Receive/Consume single actions, Bulk Update dialogs, Archive action.

    Stock logic: OK if ROB ≥ Min, Low if ROB < Min, N/A if Min blank/0.

    UOM dropdown (with “Other”), read-only UOM in bulk dialogs.

4) Validation & timezones

    History Date range filter uses vessel local time (show DD-MMM-YYYY HH:mm).

    Store timestampUTC + tz; display local.

    No future dates in receive/consume flows (unchanged).

5) Acceptance checks

    Each section shows two tabs: Inventory (existing) and History (new, same UI style).

    Posting a Receive or Consume immediately adds a row in History with correct sign (+/−) and updates ROB After.

    Date range and Search filter the History list; Excel icon exports exactly what’s shown.

    Inventory Excel icon exports the visible/filtered inventory list including UOM.

    No regressions to existing buttons, filters, pagination, or styling.

If any existing field or route names differ, keep the behavior identical and adapt bindings; do not alter unrelated screens or styles.