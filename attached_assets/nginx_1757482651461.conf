#user  nobody;
worker_processes  auto;
error_log  logs/error.log;
events {
    worker_connections  1024;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    client_max_body_size 500M;
    access_log  logs/access.log;
    sendfile        on;
    keepalive_timeout  200;

    gzip on;
    gzip_disable "msie6"; #Internet Explorer 
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    #this is hide server version 
    server_tokens off;
	merge_slashes off;
			proxy_connect_timeout 600s;
			proxy_read_timeout 600s;
			proxy_send_timeout 600s;
			client_body_timeout 600s;
			
			fastcgi_read_timeout 600s;

    # HTTPS server
    server {
        listen       443 ssl;
        server_name  dev.sl-sail.com;
		# ssl on;
        ssl_certificate C:\Certbot\live\dev.sl-sail.com\fullchain.pem;
        ssl_certificate_key C:\Certbot\live\dev.sl-sail.com\privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;
        ssl_ciphers  HIGH:!aNULL:!MD5;
		ssl_prefer_server_ciphers  on;
		add_header "Strict-Transport-Security" "max-age=31536000; includeSubDomains" always;
		add_header "X-Frame-Options" "SAMEORIGIN" always;
		add_header "X-Content-Type-Options" "nosniff" always;
		add_header "X-XSS-Protection" "1; mode=block" always;
		#please don't press enter  in this line or format this file 
		add_header Content-Security-Policy "default-src 'self'; script-src 'self' http://localhost:5000 'unsafe-inline' 'unsafe-eval' https://*.youtube.com https://maps.gstatic.com https://*.googleapis.com https://*.google-analytics.com https://cdnjs.cloudflare.com https://assets.zendesk.com https://cdn.jsdelivr.net https://connect.facebook.net https://www.googletagmanager.com https://code.jquery.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net; font-src 'self' data: https://fonts.gstatic.com https://cdn.jsdelivr.net; img-src 'self' data: https://*.google-analytics.com https://img.icons8.com https://www.google.co.in https://stats.g.doubleclick.net; frame-src 'self' https://*.youtube.com https://assets.zendesk.com https://*.facebook.com https://s-static.ak.facebook.com https://tautt.zendesk.com https://chatai.sl-sail.com https://td.doubleclick.net; object-src 'none'; connect-src 'self' wss://dev.sl-sail.com ws://dev.sl-sail.com https://dev.sl-sail.com https://uat.sl-sail.com https://img.icons8.com/wired/64/000000/cargo-ship.png https://analytics.google.com https://www.googletagmanager.com https://www.google.co.in https://stats.g.doubleclick.net https://www.google-analytics.com https://fonts.gstatic.com;" always;

		underscores_in_headers on;
		
		# ===============================================
				# TECHNICAL MODULE Frontend (Microfrontend)
				# ===============================================
				location /technical/ {
					proxy_pass http://localhost:5000/;
					proxy_set_header Host $host;
					proxy_set_header X-Real-IP $remote_addr;
					proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
					proxy_set_header X-Forwarded-Proto $scheme;
					
					# CORS Headers
					add_header Access-Control-Allow-Origin "*";
					add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
					add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";

					# Preflight OPTIONS request handling
					if ($request_method = OPTIONS) {
						add_header Access-Control-Allow-Origin "*";
						add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
						add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
						add_header Content-Length 0;
						add_header Content-Type text/plain;
						return 204;
					}
				}

				# ===============================================
				# TECHNICAL MODULE APIs (Dedicated endpoint)
				# ===============================================
				location /technical-api/ {
					proxy_pass http://localhost:5000/api/;
					proxy_set_header Host $host;
					proxy_set_header X-Real-IP $remote_addr;
					proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
					proxy_set_header X-Forwarded-Proto $scheme;

					# CORS headers for API calls
					add_header Access-Control-Allow-Origin "*";
					add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
					add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";

					# Handle preflight OPTIONS requests
					if ($request_method = OPTIONS) {
						add_header Access-Control-Allow-Origin "*";
						add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
						add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
						add_header Content-Length 0;
						add_header Content-Type text/plain;
						return 204;
					}
				}

				# =============================================================================
				# ENDPOINT MAPPING REFERENCE
				# =============================================================================

		
				# ===============================================
				# REACT Main app (Microfrontend)
				# ===============================================
			location /crewappraisal/ {
					proxy_pass http://localhost:5001/;
					proxy_set_header Host $host;
					proxy_set_header X-Real-IP $remote_addr;
					proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
					proxy_set_header X-Forwarded-Proto $scheme;
					
					 # CORS Headers
						add_header Access-Control-Allow-Origin "*";
						add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
						add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";

						# Preflight OPTIONS request handling
						if ($request_method = OPTIONS) {
							add_header Access-Control-Allow-Origin "*";
							add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
							add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
							add_header Content-Length 0;
							add_header Content-Type text/plain;
							return 204;
						}
				}
				
				# ===============================================
				# REACT APIs (crew, appraisals, etc.)
				# ===============================================
				location /crew-api/ {
					proxy_pass http://localhost:5001/api/;
					proxy_set_header Host $host;
					proxy_set_header X-Real-IP $remote_addr;
					proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
					proxy_set_header X-Forwarded-Proto $scheme;

					# CORS headers for API calls
					add_header Access-Control-Allow-Origin "*";
					add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
					add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";

					# Handle preflight OPTIONS requests
					if ($request_method = OPTIONS) {
						add_header Access-Control-Allow-Origin "*";
						add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
						add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
						add_header Content-Length 0;
						add_header Content-Type text/plain;
						return 204;
					}
				}

			# ===============================================
			# REACT FIGMA ASSETS (images, icons, etc.)
			# ===============================================
			location /figmaAssets/ {
				proxy_pass http://localhost:5001/figmaAssets/;
				proxy_set_header Host $host;
				proxy_set_header X-Real-IP $remote_addr;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_set_header X-Forwarded-Proto $scheme;

				# CORS headers for assets
				add_header Access-Control-Allow-Origin "*";
				add_header Access-Control-Allow-Methods "GET, OPTIONS";
				add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";

				# Handle preflight OPTIONS requests
				if ($request_method = OPTIONS) {
					add_header Access-Control-Allow-Origin "*";
					add_header Access-Control-Allow-Methods "GET, OPTIONS";
					add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
					add_header Content-Length 0;
					add_header Content-Type text/plain;
					return 204;
				}

				# Cache headers for better performance
				expires 30d;
				add_header Cache-Control "public, immutable";

				# Reduce log noise
				access_log off;
			}

	
			location /b/ {
            rewrite ^ $request_uri;
            rewrite ^/b/(.*) $1 break;
            return 400;
            set $extra_info $uri;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_pass http://127.0.0.1:3000/$uri;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header sec-ch-ua "";
            proxy_set_header sec-ch-ua-platform "";
            proxy_set_header sec-ch-ua-mobile "";
        }
        location /nginx_status {
            stub_status;
        }
			
		
          location /socket.io/ {
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $host;
                proxy_pass http://127.0.0.1:4008/socket.io/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
				proxy_ssl_verify off; 
            }
          location /socket/ {
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header Host $host;
              proxy_pass http://127.0.0.1:4008/;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";
			  proxy_ssl_verify off; 
              }
		location /sailexam/ {
			 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header Host $host;
              proxy_pass http://127.0.0.1:4012/;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";
			  proxy_ssl_verify off; 
			}
		location /vscan {
			 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header Host $host;
              proxy_pass  https://uat.sl-sail.com/api/scan/;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";
			  proxy_ssl_verify off; 
			}
			
		location / {
			root   C:\gitlab\sails-web-app\dist;
			index  index.html index.htm;
			try_files $uri /index.html;
		}
		#location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
		#	expires 2d;
		#}
    }
     server {
        listen 443 ssl;
        listen [::]:443 ssl;
        #server_name 54.179.10.81; # This block specifically handles HTTPS requests to the IP.
        ssl_certificate C:\Certbot\live\dev.sl-sail.com\fullchain.pem;
        ssl_certificate_key C:\Certbot\live\dev.sl-sail.com\privkey.pem;
        return 301 https://dev.sl-sail.com$request_uri; # Redirect to the domain
		}
		
}