{"version":3,"file":"changeRequestSchema.js","sourceRoot":"","sources":["changeRequestSchema.ts"],"names":[],"mappings":"","sourcesContent":["import { z } from \"zod\";\nimport { createInsertSchema } from \"drizzle-zod\";\n\n// Change Request interface and schema\nexport interface ChangeRequest {\n  id: number;\n  category: \"components\" | \"work-orders\" | \"spares\" | \"stores\";\n  requestTitle: string;\n  requestedBy: string;\n  requestDate: string;\n  status: \"Pending Approval\" | \"Approved\" | \"Rejected\";\n  originalData: Record<string, any>;\n  newData: Record<string, any>;\n  changedFields: string[];\n  comments?: string;\n  approvedBy?: string;\n  approvedDate?: string;\n  rejectionReason?: string;\n}\n\n// User roles for permission system\nexport type UserRole = \"requestor\" | \"approver\";\n\nexport interface User {\n  id: string;\n  name: string;\n  role: UserRole;\n  title?: string;\n}\n\n// Change log for audit trail\nexport interface ChangeLog {\n  id: number;\n  changeRequestId: number;\n  action: \"created\" | \"approved\" | \"rejected\";\n  performedBy: string;\n  performedDate: string;\n  oldValues: Record<string, any>;\n  newValues: Record<string, any>;\n  comments?: string;\n}\n\n// Form mode context\nexport interface FormModeContext {\n  isChangeRequestMode: boolean;\n  originalData?: Record<string, any>;\n  changedFields: Record<string, any>;\n  onFieldChange?: (fieldName: string, value: any) => void;\n}"]}