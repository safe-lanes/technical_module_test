{"version":3,"file":"schema.js","sourceRoot":"","sources":["schema.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { pgTable, text, integer, boolean, timestamp, decimal, index, json } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: integer(\"id\").primaryKey().generatedByDefaultAsIdentity(),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n\n// Running Hours Audit Table\nexport const runningHoursAudit = pgTable(\"running_hours_audit\", {\n  id: integer(\"id\").primaryKey().generatedByDefaultAsIdentity(),\n  vesselId: text(\"vessel_id\").notNull(),\n  componentId: text(\"component_id\").notNull(),\n  previousRH: decimal(\"previous_rh\", { precision: 10, scale: 2 }).notNull(),\n  newRH: decimal(\"new_rh\", { precision: 10, scale: 2 }).notNull(),\n  cumulativeRH: decimal(\"cumulative_rh\", { precision: 10, scale: 2 }).notNull(),\n  dateUpdatedLocal: text(\"date_updated_local\").notNull(), // DD-MMM-YYYY HH:mm\n  dateUpdatedTZ: text(\"date_updated_tz\").notNull(), // e.g., Asia/Kolkata\n  enteredAtUTC: timestamp(\"entered_at_utc\").notNull(),\n  userId: text(\"user_id\").notNull(),\n  source: text(\"source\").notNull(), // 'single' | 'bulk'\n  notes: text(\"notes\"),\n  meterReplaced: boolean(\"meter_replaced\").notNull().default(false),\n  oldMeterFinal: decimal(\"old_meter_final\", { precision: 10, scale: 2 }),\n  newMeterStart: decimal(\"new_meter_start\", { precision: 10, scale: 2 }),\n  version: integer(\"version\").notNull().default(1),\n}, (table) => ({\n  componentIdIdx: index(\"idx_component_entered\").on(table.componentId, table.enteredAtUTC),\n  componentDateIdx: index(\"idx_component_date\").on(table.componentId, table.dateUpdatedLocal),\n}));\n\nexport const insertRunningHoursAuditSchema = createInsertSchema(runningHoursAudit).omit({\n  id: true,\n});\n\nexport type InsertRunningHoursAudit = z.infer<typeof insertRunningHoursAuditSchema>;\nexport type RunningHoursAudit = typeof runningHoursAudit.$inferSelect;\n\n// Components Table (for storing current cumulative RH)\nexport const components = pgTable(\"components\", {\n  id: text(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  componentCode: text(\"component_code\"),\n  parentId: text(\"parent_id\"),\n  category: text(\"category\").notNull(),\n  currentCumulativeRH: decimal(\"current_cumulative_rh\", { precision: 10, scale: 2 }).notNull().default(\"0\"),\n  lastUpdated: text(\"last_updated\"),\n  vesselId: text(\"vessel_id\").notNull().default(\"V001\"),\n  // Additional fields for Component Information (Section A)\n  maker: text(\"maker\"),\n  model: text(\"model\"),\n  serialNo: text(\"serial_no\"),\n  deptCategory: text(\"dept_category\"),\n  componentCategory: text(\"component_category\"),\n  location: text(\"location\"),\n  commissionedDate: text(\"commissioned_date\"),\n  critical: boolean(\"critical\").default(false),\n  classItem: boolean(\"class_item\").default(false),\n});\n\nexport const insertComponentSchema = createInsertSchema(components).omit({});\n\nexport type InsertComponent = z.infer<typeof insertComponentSchema>;\nexport type Component = typeof components.$inferSelect;\n\n// Form Definitions Table\nexport const formDefinitions = pgTable(\"form_definitions\", {\n  id: integer(\"id\").primaryKey().generatedByDefaultAsIdentity(),\n  name: text(\"name\").notNull().unique(), // ADD_COMPONENT, WO_PLANNED, WO_UNPLANNED\n  subgroup: text(\"subgroup\"),\n});\n\nexport const insertFormDefinitionSchema = createInsertSchema(formDefinitions).omit({\n  id: true,\n});\n\nexport type InsertFormDefinition = z.infer<typeof insertFormDefinitionSchema>;\nexport type FormDefinition = typeof formDefinitions.$inferSelect;\n\n// Form Versions Table\nexport const formVersions = pgTable(\"form_versions\", {\n  id: integer(\"id\").primaryKey().generatedByDefaultAsIdentity(),\n  formId: integer(\"form_id\").notNull(),\n  versionNo: integer(\"version_no\").notNull(),\n  versionDate: timestamp(\"version_date\").notNull(),\n  status: text(\"status\").notNull(), // DRAFT, PUBLISHED, ARCHIVED\n  authorUserId: text(\"author_user_id\").notNull(),\n  changelog: text(\"changelog\"),\n  schemaJson: text(\"schema_json\").notNull(), // JSON string\n}, (table) => ({\n  formIdIdx: index(\"idx_form_id\").on(table.formId),\n  statusIdx: index(\"idx_status\").on(table.status),\n}));\n\nexport const insertFormVersionSchema = createInsertSchema(formVersions).omit({\n  id: true,\n});\n\nexport type InsertFormVersion = z.infer<typeof insertFormVersionSchema>;\nexport type FormVersion = typeof formVersions.$inferSelect;\n\n// Form Version Usage Table (Audit)\nexport const formVersionUsage = pgTable(\"form_version_usage\", {\n  id: integer(\"id\").primaryKey().generatedByDefaultAsIdentity(),\n  formVersionId: integer(\"form_version_id\").notNull(),\n  usedInModule: text(\"used_in_module\").notNull(),\n  usedAt: timestamp(\"used_at\").notNull(),\n});\n\nexport const insertFormVersionUsageSchema = createInsertSchema(formVersionUsage).omit({\n  id: true,\n});\n\nexport type InsertFormVersionUsage = z.infer<typeof insertFormVersionUsageSchema>;\nexport type FormVersionUsage = typeof formVersionUsage.$inferSelect;\n\n// Spares Table\nexport const spares = pgTable(\"spares\", {\n  id: integer(\"id\").primaryKey().generatedByDefaultAsIdentity(),\n  partCode: text(\"part_code\").notNull(),\n  partName: text(\"part_name\").notNull(),\n  componentId: text(\"component_id\").notNull(),\n  componentCode: text(\"component_code\"),\n  componentName: text(\"component_name\").notNull(),\n  componentSpareCode: text(\"component_spare_code\"), // Format: SP-<ComponentCode>-<NNN>\n  critical: text(\"critical\").notNull(), // 'Critical' | 'Non-Critical' | 'Yes' | 'No'\n  rob: integer(\"rob\").notNull().default(0), // Remaining on Board\n  min: integer(\"min\").notNull().default(0), // Minimum stock\n  location: text(\"location\"),\n  vesselId: text(\"vessel_id\").notNull().default(\"V001\"),\n  deleted: boolean(\"deleted\").notNull().default(false),\n}, (table) => ({\n  componentIdIdx: index(\"idx_spare_component\").on(table.componentId),\n  vesselIdIdx: index(\"idx_spare_vessel\").on(table.vesselId),\n  componentSpareCodeIdx: index(\"idx_spare_code\").on(table.vesselId, table.componentSpareCode),\n}));\n\nexport const insertSpareSchema = createInsertSchema(spares).omit({\n  id: true,\n  deleted: true,\n});\n\nexport type InsertSpare = z.infer<typeof insertSpareSchema>;\nexport type Spare = typeof spares.$inferSelect;\n\n// Spares History Table\nexport const sparesHistory = pgTable(\"spares_history\", {\n  id: integer(\"id\").primaryKey().generatedByDefaultAsIdentity(),\n  timestampUTC: timestamp(\"timestamp_utc\").notNull(),\n  vesselId: text(\"vessel_id\").notNull(),\n  spareId: integer(\"spare_id\").notNull(),\n  partCode: text(\"part_code\").notNull(),\n  partName: text(\"part_name\").notNull(),\n  componentId: text(\"component_id\").notNull(),\n  componentCode: text(\"component_code\"),\n  componentName: text(\"component_name\").notNull(),\n  componentSpareCode: text(\"component_spare_code\"), // Component Spare Code at time of event\n  eventType: text(\"event_type\").notNull(), // 'CONSUME' | 'RECEIVE' | 'ADJUST' | 'CREATE' | 'EDIT' | 'LINK_CREATED' | 'CODE_RENUMBERED'\n  qtyChange: integer(\"qty_change\").notNull(), // positive for receive, negative for consume\n  robAfter: integer(\"rob_after\").notNull(),\n  userId: text(\"user_id\").notNull(),\n  remarks: text(\"remarks\"),\n  reference: text(\"reference\"), // Work Order or PO reference\n  dateLocal: text(\"date_local\"), // Local date of transaction\n  tz: text(\"tz\"), // Timezone\n  place: text(\"place\"), // Port/Location for receive/consume\n}, (table) => ({\n  timestampIdx: index(\"idx_history_timestamp\").on(table.timestampUTC),\n  spareIdIdx: index(\"idx_history_spare\").on(table.spareId),\n  eventTypeIdx: index(\"idx_history_event\").on(table.eventType),\n}));\n\nexport const insertSpareHistorySchema = createInsertSchema(sparesHistory).omit({\n  id: true,\n});\n\nexport type InsertSpareHistory = z.infer<typeof insertSpareHistorySchema>;\nexport type SpareHistory = typeof sparesHistory.$inferSelect;\n\n// Stores Ledger Table (for Stores module history)\nexport const storesLedger = pgTable(\"stores_ledger\", {\n  id: integer(\"id\").primaryKey().generatedByDefaultAsIdentity(),\n  vesselId: text(\"vessel_id\").notNull(),\n  section: text(\"section\").notNull(), // 'stores' | 'lubes' | 'chemicals' | 'others'\n  itemId: integer(\"item_id\").notNull(),\n  partCode: text(\"part_code\").notNull(),\n  itemName: text(\"item_name\").notNull(),\n  uom: text(\"uom\"), // Base unit of measure\n  eventType: text(\"event_type\").notNull(), // 'RECEIVE' | 'CONSUME' | 'ADJUST' | 'TRANSFER_IN' | 'TRANSFER_OUT' | 'ARCHIVE'\n  qtyChangeBase: decimal(\"qty_change_base\", { precision: 10, scale: 2 }).notNull(), // Change in base UOM\n  qtyDisplay: decimal(\"qty_display\", { precision: 10, scale: 2 }).notNull(), // Change in display UOM\n  uomDisplay: text(\"uom_display\"), // Display UOM (could be different from base)\n  robAfterBase: decimal(\"rob_after_base\", { precision: 10, scale: 2 }).notNull(), // ROB after in base UOM\n  dateLocal: text(\"date_local\").notNull(), // DD-MMM-YYYY HH:mm\n  tz: text(\"tz\").notNull(), // Timezone\n  timestampUTC: timestamp(\"timestamp_utc\").notNull(),\n  place: text(\"place\"), // For receive events\n  ref: text(\"ref\"), // PO/WO reference\n  userId: text(\"user_id\").notNull(),\n  remarks: text(\"remarks\"),\n}, (table) => ({\n  vesselSectionDateIdx: index(\"idx_vessel_section_date\").on(table.vesselId, table.section, table.dateLocal),\n  itemDateIdx: index(\"idx_item_date\").on(table.itemId, table.dateLocal),\n}));\n\nexport const insertStoresLedgerSchema = createInsertSchema(storesLedger).omit({\n  id: true,\n});\n\nexport type InsertStoresLedger = z.infer<typeof insertStoresLedgerSchema>;\nexport type StoresLedger = typeof storesLedger.$inferSelect;\n\n// Change Request Tables for Modify PMS module\nexport const changeRequest = pgTable(\"change_request\", {\n  id: integer(\"id\").primaryKey().generatedByDefaultAsIdentity(),\n  vesselId: text(\"vessel_id\").notNull(),\n  category: text(\"category\").notNull(), // 'components' | 'work_orders' | 'spares' | 'stores'\n  title: text(\"title\").notNull(), // max 120 chars enforced in application\n  reason: text(\"reason\").notNull(),\n  targetType: text(\"target_type\"), // 'component' | 'work_order' | 'spare' | 'store'\n  targetId: text(\"target_id\"),\n  snapshotBeforeJson: json(\"snapshot_before_json\"),\n  proposedChangesJson: json(\"proposed_changes_json\"), // Array of change objects\n  movePreviewJson: json(\"move_preview_json\"), // Component move preview (nullable)\n  status: text(\"status\").notNull().default(\"draft\"), // 'draft' | 'submitted' | 'returned' | 'approved' | 'rejected'\n  requestedByUserId: text(\"requested_by_user_id\").notNull(),\n  submittedAt: timestamp(\"submitted_at\"),\n  reviewedByUserId: text(\"reviewed_by_user_id\"),\n  reviewedAt: timestamp(\"reviewed_at\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow().$onUpdateFn(() => new Date()),\n}, (table) => ({\n  vesselCategoryIdx: index(\"idx_vessel_category\").on(table.vesselId, table.category),\n  statusIdx: index(\"idx_status\").on(table.status),\n}));\n\nexport const insertChangeRequestSchema = createInsertSchema(changeRequest).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport type InsertChangeRequest = z.infer<typeof insertChangeRequestSchema>;\nexport type ChangeRequest = typeof changeRequest.$inferSelect;\n\n// Change Request Attachments\nexport const changeRequestAttachment = pgTable(\"change_request_attachment\", {\n  id: integer(\"id\").primaryKey().generatedByDefaultAsIdentity(),\n  changeRequestId: integer(\"change_request_id\").notNull(),\n  filename: text(\"filename\").notNull(),\n  url: text(\"url\").notNull(),\n  uploadedByUserId: text(\"uploaded_by_user_id\").notNull(),\n  uploadedAt: timestamp(\"uploaded_at\").notNull().defaultNow(),\n}, (table) => ({\n  changeRequestIdx: index(\"idx_change_request\").on(table.changeRequestId),\n}));\n\nexport const insertChangeRequestAttachmentSchema = createInsertSchema(changeRequestAttachment).omit({\n  id: true,\n  uploadedAt: true,\n});\n\nexport type InsertChangeRequestAttachment = z.infer<typeof insertChangeRequestAttachmentSchema>;\nexport type ChangeRequestAttachment = typeof changeRequestAttachment.$inferSelect;\n\n// Change Request Comments\nexport const changeRequestComment = pgTable(\"change_request_comment\", {\n  id: integer(\"id\").primaryKey().generatedByDefaultAsIdentity(),\n  changeRequestId: integer(\"change_request_id\").notNull(),\n  userId: text(\"user_id\").notNull(),\n  message: text(\"message\").notNull(),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  changeRequestIdx: index(\"idx_change_request_comment\").on(table.changeRequestId),\n}));\n\nexport const insertChangeRequestCommentSchema = createInsertSchema(changeRequestComment).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertChangeRequestComment = z.infer<typeof insertChangeRequestCommentSchema>;\nexport type ChangeRequestComment = typeof changeRequestComment.$inferSelect;\n\n// Alert Policy Table\nexport const alertPolicies = pgTable(\"alert_policies\", {\n  id: integer(\"id\").primaryKey().generatedByDefaultAsIdentity(),\n  alertType: text(\"alert_type\").notNull(), // 'maintenance_due' | 'running_hours' | 'critical_inventory' | 'certificate_expiration' | 'system_backup'\n  enabled: boolean(\"enabled\").notNull().default(true),\n  priority: text(\"priority\").notNull().default(\"medium\"), // 'low' | 'medium' | 'high'\n  emailEnabled: boolean(\"email_enabled\").notNull().default(false),\n  inAppEnabled: boolean(\"in_app_enabled\").notNull().default(true),\n  thresholds: text(\"thresholds\").notNull().default(\"{}\"), // JSON string for type-specific thresholds\n  scopeFilters: text(\"scope_filters\").notNull().default(\"{}\"), // JSON string for filters\n  recipients: text(\"recipients\").notNull().default(\"{}\"), // JSON string for recipient configuration\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n  createdBy: text(\"created_by\").notNull(),\n  updatedBy: text(\"updated_by\").notNull(),\n});\n\nexport const insertAlertPolicySchema = createInsertSchema(alertPolicies).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport type InsertAlertPolicy = z.infer<typeof insertAlertPolicySchema>;\nexport type AlertPolicy = typeof alertPolicies.$inferSelect;\n\n// Alert Events Table\nexport const alertEvents = pgTable(\"alert_events\", {\n  id: integer(\"id\").primaryKey().generatedByDefaultAsIdentity(),\n  policyId: integer(\"policy_id\").notNull(),\n  alertType: text(\"alert_type\").notNull(),\n  priority: text(\"priority\").notNull(),\n  objectType: text(\"object_type\"), // 'work_order' | 'component' | 'spare' | 'certificate' | 'system'\n  objectId: text(\"object_id\"),\n  vesselId: text(\"vessel_id\"),\n  dedupeKey: text(\"dedupe_key\").notNull(),\n  state: text(\"state\"), // 'due' | 'overdue' | 'low' | 'critical' | 'expired' | 'failed' etc\n  payload: text(\"payload\").notNull(), // JSON string with all event details\n  ackBy: text(\"ack_by\"),\n  ackAt: timestamp(\"ack_at\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  dedupeKeyIdx: index(\"idx_dedupe_key\").on(table.dedupeKey, table.createdAt),\n  policyIdx: index(\"idx_policy_events\").on(table.policyId, table.createdAt),\n}));\n\nexport const insertAlertEventSchema = createInsertSchema(alertEvents).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertAlertEvent = z.infer<typeof insertAlertEventSchema>;\nexport type AlertEvent = typeof alertEvents.$inferSelect;\n\n// Alert Deliveries Table\nexport const alertDeliveries = pgTable(\"alert_deliveries\", {\n  id: integer(\"id\").primaryKey().generatedByDefaultAsIdentity(),\n  eventId: integer(\"event_id\").notNull(),\n  channel: text(\"channel\").notNull(), // 'email' | 'in_app' | 'sms' | 'slack'\n  recipient: text(\"recipient\").notNull(), // email address, user ID, phone number, etc\n  status: text(\"status\").notNull().default(\"pending\"), // 'pending' | 'sent' | 'failed' | 'acknowledged'\n  errorMessage: text(\"error_message\"),\n  sentAt: timestamp(\"sent_at\"),\n  acknowledgedAt: timestamp(\"acknowledged_at\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  eventIdx: index(\"idx_event_deliveries\").on(table.eventId, table.channel),\n  recipientIdx: index(\"idx_recipient_deliveries\").on(table.recipient, table.status),\n}));\n\nexport const insertAlertDeliverySchema = createInsertSchema(alertDeliveries).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertAlertDelivery = z.infer<typeof insertAlertDeliverySchema>;\nexport type AlertDelivery = typeof alertDeliveries.$inferSelect;\n\n// Alert Configuration Table (for quiet hours and escalation)\nexport const alertConfig = pgTable(\"alert_config\", {\n  id: integer(\"id\").primaryKey().generatedByDefaultAsIdentity(),\n  vesselId: text(\"vessel_id\").notNull(),\n  quietHoursEnabled: boolean(\"quiet_hours_enabled\").notNull().default(false),\n  quietHoursStart: text(\"quiet_hours_start\"), // HH:mm format\n  quietHoursEnd: text(\"quiet_hours_end\"), // HH:mm format\n  escalationEnabled: boolean(\"escalation_enabled\").notNull().default(false),\n  escalationHours: integer(\"escalation_hours\").notNull().default(4),\n  escalationRecipients: text(\"escalation_recipients\").notNull().default(\"[]\"), // JSON array of recipients\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n  updatedBy: text(\"updated_by\").notNull(),\n});\n\nexport const insertAlertConfigSchema = createInsertSchema(alertConfig).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport type InsertAlertConfig = z.infer<typeof insertAlertConfigSchema>;\nexport type AlertConfig = typeof alertConfig.$inferSelect;\n"]}