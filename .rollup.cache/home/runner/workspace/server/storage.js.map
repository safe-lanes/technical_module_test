{"version":3,"file":"storage.js","sourceRoot":"","sources":["storage.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  users,\n  type User,\n  type InsertUser,\n  components,\n  type Component,\n  type InsertComponent,\n  runningHoursAudit,\n  type RunningHoursAudit,\n  type InsertRunningHoursAudit,\n  spares,\n  type Spare,\n  type InsertSpare,\n  sparesHistory,\n  type SpareHistory,\n  type InsertSpareHistory,\n  changeRequest,\n  type ChangeRequest,\n  type InsertChangeRequest,\n  changeRequestAttachment,\n  type ChangeRequestAttachment,\n  type InsertChangeRequestAttachment,\n  changeRequestComment,\n  type ChangeRequestComment,\n  type InsertChangeRequestComment,\n  alertPolicies,\n  type AlertPolicy,\n  type InsertAlertPolicy,\n  alertEvents,\n  type AlertEvent,\n  type InsertAlertEvent,\n  alertDeliveries,\n  type AlertDelivery,\n  type InsertAlertDelivery,\n  alertConfig,\n  type AlertConfig,\n  type InsertAlertConfig,\n  formDefinitions,\n  type FormDefinition,\n  type InsertFormDefinition,\n  formVersions,\n  type FormVersion,\n  type InsertFormVersion,\n  formVersionUsage,\n  type FormVersionUsage,\n  type InsertFormVersionUsage,\n} from '@shared/schema';\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: number): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n\n  // Running Hours methods\n  getComponents(vesselId: string): Promise<Component[]>;\n  getComponent(id: string): Promise<Component | undefined>;\n  updateComponent(id: string, data: Partial<Component>): Promise<Component>;\n  createRunningHoursAudit(\n    audit: InsertRunningHoursAudit\n  ): Promise<RunningHoursAudit>;\n  getRunningHoursAudits(\n    componentId: string,\n    limit?: number\n  ): Promise<RunningHoursAudit[]>;\n  getRunningHoursAuditsInDateRange(\n    componentId: string,\n    startDate: Date,\n    endDate: Date\n  ): Promise<RunningHoursAudit[]>;\n\n  // Spares methods\n  getSpares(vesselId: string): Promise<Spare[]>;\n  getSpare(id: number): Promise<Spare | undefined>;\n  createSpare(spare: InsertSpare): Promise<Spare>;\n  updateSpare(id: number, data: Partial<Spare>): Promise<Spare>;\n  deleteSpare(id: number): Promise<void>;\n  consumeSpare(\n    id: number,\n    quantity: number,\n    userId: string,\n    remarks?: string,\n    place?: string,\n    dateLocal?: string,\n    tz?: string\n  ): Promise<Spare>;\n  receiveSpare(\n    id: number,\n    quantity: number,\n    userId: string,\n    remarks?: string,\n    supplierPO?: string,\n    place?: string,\n    dateLocal?: string,\n    tz?: string\n  ): Promise<Spare>;\n  bulkUpdateSpares(\n    updates: Array<{\n      id: number;\n      consumed?: number;\n      received?: number;\n      receivedDate?: string;\n      receivedPlace?: string;\n    }>,\n    userId: string,\n    remarks?: string\n  ): Promise<Spare[]>;\n\n  // Spares History methods\n  getSpareHistory(vesselId: string): Promise<SpareHistory[]>;\n  getSpareHistoryBySpareId(spareId: number): Promise<SpareHistory[]>;\n  createSpareHistory(history: InsertSpareHistory): Promise<SpareHistory>;\n\n  // Work Orders methods\n  getWorkOrders(vesselId: string): Promise<any[]>;\n  createWorkOrder(workOrder: any): Promise<any>;\n  updateWorkOrder(workOrderId: string, data: any): Promise<any>;\n  deleteWorkOrder(workOrderId: string): Promise<void>;\n\n  // Change Request methods\n  getChangeRequests(filters?: {\n    category?: string;\n    status?: string;\n    q?: string;\n    vesselId?: string;\n  }): Promise<ChangeRequest[]>;\n  getChangeRequest(id: number): Promise<ChangeRequest | undefined>;\n  createChangeRequest(request: InsertChangeRequest): Promise<ChangeRequest>;\n  updateChangeRequest(\n    id: number,\n    data: Partial<ChangeRequest>\n  ): Promise<ChangeRequest>;\n  updateChangeRequestTarget(\n    id: number,\n    targetType: string | null,\n    targetId: string | null,\n    snapshotBeforeJson: any\n  ): Promise<ChangeRequest>;\n  updateChangeRequestProposed(\n    id: number,\n    proposedChangesJson: any,\n    movePreviewJson?: any\n  ): Promise<ChangeRequest>;\n  deleteChangeRequest(id: number): Promise<void>;\n  submitChangeRequest(id: number, userId: string): Promise<ChangeRequest>;\n  approveChangeRequest(\n    id: number,\n    reviewerId: string,\n    comment: string\n  ): Promise<ChangeRequest>;\n  rejectChangeRequest(\n    id: number,\n    reviewerId: string,\n    comment: string\n  ): Promise<ChangeRequest>;\n  returnChangeRequest(\n    id: number,\n    reviewerId: string,\n    comment: string\n  ): Promise<ChangeRequest>;\n\n  // Change Request Attachments\n  getChangeRequestAttachments(\n    changeRequestId: number\n  ): Promise<ChangeRequestAttachment[]>;\n  createChangeRequestAttachment(\n    attachment: InsertChangeRequestAttachment\n  ): Promise<ChangeRequestAttachment>;\n\n  // Change Request Comments\n  getChangeRequestComments(\n    changeRequestId: number\n  ): Promise<ChangeRequestComment[]>;\n  createChangeRequestComment(\n    comment: InsertChangeRequestComment\n  ): Promise<ChangeRequestComment>;\n\n  // Bulk Import methods\n  bulkCreateComponents(components: InsertComponent[]): Promise<Component[]>;\n  bulkUpdateComponents(\n    components: Array<{ id: string; data: Partial<Component> }>\n  ): Promise<Component[]>;\n  bulkUpsertComponents(\n    components: InsertComponent[]\n  ): Promise<{ created: number; updated: number }>;\n  bulkCreateSpares(spares: InsertSpare[]): Promise<Spare[]>;\n  bulkUpdateSparesByROB(\n    spares: Array<{ robId: string; data: Partial<Spare> }>\n  ): Promise<Spare[]>;\n  bulkUpsertSpares(\n    spares: InsertSpare[]\n  ): Promise<{ created: number; updated: number }>;\n  archiveComponentsByIds(ids: string[]): Promise<number>;\n  archiveSparesByIds(ids: number[]): Promise<number>;\n\n  // Alert methods\n  getAlertPolicies(): Promise<AlertPolicy[]>;\n  getAlertPolicy(id: number): Promise<AlertPolicy | undefined>;\n  createAlertPolicy(policy: InsertAlertPolicy): Promise<AlertPolicy>;\n  updateAlertPolicy(\n    id: number,\n    data: Partial<AlertPolicy>\n  ): Promise<AlertPolicy>;\n  deleteAlertPolicy(id: number): Promise<void>;\n\n  getAlertEvents(filters?: {\n    startDate?: Date;\n    endDate?: Date;\n    alertType?: string;\n    priority?: string;\n    status?: string;\n    vesselId?: string;\n  }): Promise<AlertEvent[]>;\n  getAlertEvent(id: number): Promise<AlertEvent | undefined>;\n  createAlertEvent(event: InsertAlertEvent): Promise<AlertEvent>;\n  acknowledgeAlertEvent(id: number, userId: string): Promise<AlertEvent>;\n\n  getAlertDeliveries(eventId: number): Promise<AlertDelivery[]>;\n  createAlertDelivery(delivery: InsertAlertDelivery): Promise<AlertDelivery>;\n  updateAlertDeliveryStatus(\n    id: number,\n    status: string,\n    errorMessage?: string\n  ): Promise<AlertDelivery>;\n\n  getAlertConfig(vesselId: string): Promise<AlertConfig | undefined>;\n  createOrUpdateAlertConfig(config: InsertAlertConfig): Promise<AlertConfig>;\n\n  // Store methods\n  getStoreItems(vesselId: string): Promise<any[]>;\n  createStoreTransaction(transaction: any): Promise<any>;\n  getStoreHistory(vesselId: string): Promise<any[]>;\n  updateStoreItem(\n    vesselId: string,\n    itemCode: string,\n    updates: any\n  ): Promise<any>;\n\n  // Form Definition methods\n  getFormDefinitions(): Promise<FormDefinition[]>;\n  getFormDefinition(id: number): Promise<FormDefinition | undefined>;\n  getFormDefinitionByName(name: string): Promise<FormDefinition | undefined>;\n  createFormDefinition(form: InsertFormDefinition): Promise<FormDefinition>;\n\n  // Form Version methods\n  getFormVersions(formId: number): Promise<FormVersion[]>;\n  getFormVersion(id: number): Promise<FormVersion | undefined>;\n  getLatestPublishedVersion(formId: number): Promise<FormVersion | undefined>;\n  getLatestPublishedVersionByName(\n    name: string\n  ): Promise<FormVersion | undefined>;\n  createFormVersion(version: InsertFormVersion): Promise<FormVersion>;\n  updateFormVersion(\n    id: number,\n    data: Partial<FormVersion>\n  ): Promise<FormVersion>;\n  publishFormVersion(\n    id: number,\n    userId: string,\n    changelog: string\n  ): Promise<FormVersion>;\n  discardFormVersion(id: number): Promise<void>;\n\n  // Form Version Usage methods\n  createFormVersionUsage(\n    usage: InsertFormVersionUsage\n  ): Promise<FormVersionUsage>;\n  getFormVersionUsage(formVersionId: number): Promise<FormVersionUsage[]>;\n\n  // Seed forms method\n  seedForms(): Promise<void>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<number, User>;\n  private currentUserId: number;\n  private components: Map<string, Component>;\n  private runningHoursAudits: RunningHoursAudit[];\n  private currentAuditId: number;\n  private spares: Map<number, Spare>;\n  private currentSpareId: number;\n  private sparesHistory: SpareHistory[];\n  private currentHistoryId: number;\n  private changeRequests: Map<number, ChangeRequest>;\n  private currentChangeRequestId: number;\n  private changeRequestAttachments: ChangeRequestAttachment[];\n  private currentAttachmentId: number;\n  private changeRequestComments: ChangeRequestComment[];\n  private currentCommentId: number;\n  private alertPolicies: Map<number, AlertPolicy>;\n  private currentAlertPolicyId: number;\n  private alertEvents: Map<number, AlertEvent>;\n  private currentAlertEventId: number;\n  private alertDeliveries: Map<number, AlertDelivery>;\n  private currentAlertDeliveryId: number;\n  private alertConfigs: Map<string, AlertConfig>;\n  private currentAlertConfigId: number;\n  private formDefinitions: Map<number, FormDefinition>;\n  private currentFormDefinitionId: number;\n  private formVersions: Map<number, FormVersion>;\n  private currentFormVersionId: number;\n  private formVersionUsages: FormVersionUsage[];\n  private currentFormUsageId: number;\n  private workOrders: Map<string, any>;\n  private currentWorkOrderId: number;\n\n  constructor() {\n    this.users = new Map();\n    this.currentUserId = 1;\n    this.components = new Map();\n    this.runningHoursAudits = [];\n    this.currentAuditId = 1;\n    this.spares = new Map();\n    this.currentSpareId = 1;\n    this.sparesHistory = [];\n    this.currentHistoryId = 1;\n    this.changeRequests = new Map();\n    this.currentChangeRequestId = 1;\n    this.changeRequestAttachments = [];\n    this.currentAttachmentId = 1;\n    this.changeRequestComments = [];\n    this.currentCommentId = 1;\n    this.alertPolicies = new Map();\n    this.currentAlertPolicyId = 1;\n    this.alertEvents = new Map();\n    this.currentAlertEventId = 1;\n    this.alertDeliveries = new Map();\n    this.currentAlertDeliveryId = 1;\n    this.alertConfigs = new Map();\n    this.currentAlertConfigId = 1;\n    this.formDefinitions = new Map();\n    this.currentFormDefinitionId = 1;\n    this.formVersions = new Map();\n    this.currentFormVersionId = 1;\n    this.formVersionUsages = [];\n    this.currentFormUsageId = 1;\n    this.workOrders = new Map();\n    this.currentWorkOrderId = 1;\n\n    // Initialize sample components and spares\n    this.initializeComponents();\n    this.initializeSpares();\n    this.initializeAlertPolicies();\n    this.initializeFormDefinitions();\n  }\n\n  private async initializeFormDefinitions() {\n    // Bootstrap form definitions with exact live schemas\n    const forms = [\n      { name: 'ADD_COMPONENT', subgroup: 'Component Register' },\n      { name: 'WO_PLANNED', subgroup: 'New Work Order (Planned)' },\n      { name: 'WO_UNPLANNED', subgroup: 'Unplanned Work Order' },\n    ];\n\n    for (const form of forms) {\n      const formDef = await this.createFormDefinition(form);\n\n      // Create initial published version with exact live schema\n      const schemaJson = this.getInitialFormSchema(form.name);\n      await this.createFormVersion({\n        formId: formDef.id,\n        versionNo: 1,\n        versionDate: new Date(),\n        status: 'PUBLISHED',\n        authorUserId: 'system',\n        changelog: 'Initial version from live form',\n        schemaJson: JSON.stringify(schemaJson),\n      });\n    }\n  }\n\n  private getInitialFormSchema(formName: string) {\n    // Return exact schema from current live forms\n    if (formName === 'ADD_COMPONENT') {\n      return {\n        title: 'Add Component Form',\n        sections: [\n          {\n            key: 'A',\n            title: 'A. Component Information',\n            layout: 'grid-4',\n            fields: [\n              { key: 'origin', label: 'Origin', type: 'text', required: false },\n              {\n                key: 'supplier',\n                label: 'Supplier',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'partNo',\n                label: 'Part No',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'createdOn',\n                label: 'Created On',\n                type: 'date',\n                required: false,\n              },\n              {\n                key: 'component',\n                label: 'Component',\n                type: 'text',\n                required: true,\n              },\n              {\n                key: 'maker',\n                label: 'Maker / Maker Designator',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'serialNo',\n                label: 'Serial No',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'installedDate',\n                label: 'Installed Date',\n                type: 'date',\n                required: false,\n              },\n              {\n                key: 'componentCode',\n                label: 'Component Code',\n                type: 'text',\n                required: false,\n              },\n              { key: 'type', label: 'Type', type: 'text', required: false },\n              {\n                key: 'blackoutComponent',\n                label: 'Blackout Component',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'modelSpecification',\n                label: 'Model Specification',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'warrantyInfo',\n                label: 'Warranty Info',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'warrantyDays',\n                label: 'Warranty Days',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'warrantyDate',\n                label: 'Warranty Date',\n                type: 'date',\n                required: false,\n              },\n              {\n                key: 'lastUsed',\n                label: 'Last Used',\n                type: 'text',\n                required: false,\n              },\n            ],\n          },\n          {\n            key: 'B',\n            title: 'B. Running Hours & Condition Monitoring Metrics',\n            layout: 'grid-3',\n            fields: [\n              {\n                key: 'runningHours',\n                label: 'Running Hours',\n                type: 'number',\n                required: false,\n              },\n              {\n                key: 'conditionMetrics',\n                label: 'Condition Monitoring Metrics',\n                type: 'repeater',\n                required: false,\n              },\n            ],\n          },\n          {\n            key: 'C',\n            title: 'C. Work Orders',\n            layout: 'grid-5',\n            fields: [\n              {\n                key: 'workBy',\n                label: 'Work By',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'jobTitle',\n                label: 'Job Title',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'assignedTo',\n                label: 'Assigned To',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'dueDate',\n                label: 'Due Date',\n                type: 'date',\n                required: false,\n              },\n              { key: 'status', label: 'Status', type: 'text', required: false },\n            ],\n          },\n          {\n            key: 'D',\n            title: 'D. Maintenance History',\n            layout: 'grid-4',\n            fields: [\n              {\n                key: 'workOrderNo',\n                label: 'Work Order No',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'performedBy',\n                label: 'Performed By',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'nextDueDate',\n                label: 'Next Due Date',\n                type: 'date',\n                required: false,\n              },\n              {\n                key: 'completionDate',\n                label: 'Completion Date',\n                type: 'date',\n                required: false,\n              },\n            ],\n          },\n          {\n            key: 'E',\n            title: 'E. Spares',\n            layout: 'grid-5',\n            fields: [\n              {\n                key: 'sparePart',\n                label: 'Spare Part',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'partName',\n                label: 'Part Name',\n                type: 'text',\n                required: false,\n              },\n              { key: 'qty', label: 'Qty', type: 'number', required: false },\n              {\n                key: 'critical',\n                label: 'Critical',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'location',\n                label: 'Location',\n                type: 'text',\n                required: false,\n              },\n            ],\n          },\n          {\n            key: 'F',\n            title: 'F. Drawings & Manuals',\n            layout: 'file-upload',\n            fields: [],\n          },\n          {\n            key: 'G',\n            title: 'G. Classification & Regulatory Data',\n            layout: 'grid-4',\n            fields: [\n              {\n                key: 'classificationSociety',\n                label: 'Classification Society',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'certificateNo',\n                label: 'Certificate No',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'lastClassDate',\n                label: 'Last Class Date',\n                type: 'date',\n                required: false,\n              },\n              {\n                key: 'nextClassDate',\n                label: 'Next Class Date',\n                type: 'date',\n                required: false,\n              },\n              {\n                key: 'classCode',\n                label: 'Class Code',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'classRemarks',\n                label: 'Class Remarks',\n                type: 'text',\n                required: false,\n              },\n            ],\n          },\n          {\n            key: 'H',\n            title: 'H. New Service Notes',\n            layout: 'grid-4',\n            fields: [\n              {\n                key: 'serviceNote',\n                label: 'Service Note',\n                type: 'text',\n                required: false,\n              },\n              {\n                key: 'noteDate',\n                label: 'Note Date',\n                type: 'date',\n                required: false,\n              },\n              {\n                key: 'nextNote',\n                label: 'Next Note',\n                type: 'date',\n                required: false,\n              },\n              {\n                key: 'noteLevel',\n                label: 'Note Level',\n                type: 'text',\n                required: false,\n              },\n            ],\n          },\n        ],\n      };\n    } else if (formName === 'WO_PLANNED') {\n      return {\n        title: 'Work Order Form (Planned)',\n        sections: [\n          {\n            key: 'partA',\n            title: 'Part A - Work Order Details',\n            layout: 'grid-3',\n            fields: [\n              {\n                key: 'woNumber',\n                label: 'WO Number',\n                type: 'text',\n                required: true,\n              },\n              {\n                key: 'component',\n                label: 'Component',\n                type: 'select',\n                required: true,\n              },\n              {\n                key: 'jobTitle',\n                label: 'Job Title',\n                type: 'text',\n                required: true,\n              },\n              {\n                key: 'workBy',\n                label: 'Work By',\n                type: 'select',\n                required: true,\n              },\n              {\n                key: 'assignedTo',\n                label: 'Assigned To',\n                type: 'select',\n                required: false,\n              },\n              {\n                key: 'priority',\n                label: 'Priority',\n                type: 'select',\n                required: true,\n              },\n              {\n                key: 'plannedDate',\n                label: 'Planned Date',\n                type: 'date',\n                required: true,\n              },\n              {\n                key: 'estimatedHours',\n                label: 'Estimated Hours',\n                type: 'number',\n                required: false,\n              },\n            ],\n          },\n          {\n            key: 'partB',\n            title: 'Part B - Job Description & Instructions',\n            layout: 'grid-1',\n            fields: [\n              {\n                key: 'description',\n                label: 'Description',\n                type: 'textarea',\n                required: true,\n              },\n              {\n                key: 'instructions',\n                label: 'Instructions',\n                type: 'textarea',\n                required: false,\n              },\n              {\n                key: 'safetyPrecautions',\n                label: 'Safety Precautions',\n                type: 'textarea',\n                required: false,\n              },\n              {\n                key: 'requiredSpares',\n                label: 'Required Spares',\n                type: 'repeater',\n                required: false,\n              },\n            ],\n          },\n        ],\n      };\n    } else if (formName === 'WO_UNPLANNED') {\n      return {\n        title: 'Work Order Form (Unplanned)',\n        sections: [\n          {\n            key: 'partA',\n            title: 'Part A - Breakdown Details',\n            layout: 'grid-3',\n            fields: [\n              {\n                key: 'woNumber',\n                label: 'WO Number',\n                type: 'text',\n                required: true,\n              },\n              {\n                key: 'component',\n                label: 'Component',\n                type: 'select',\n                required: true,\n              },\n              {\n                key: 'breakdownDate',\n                label: 'Breakdown Date',\n                type: 'datetime',\n                required: true,\n              },\n              {\n                key: 'reportedBy',\n                label: 'Reported By',\n                type: 'text',\n                required: true,\n              },\n              {\n                key: 'severity',\n                label: 'Severity',\n                type: 'select',\n                required: true,\n              },\n              {\n                key: 'impactOnOperation',\n                label: 'Impact on Operation',\n                type: 'select',\n                required: true,\n              },\n            ],\n          },\n          {\n            key: 'partB',\n            title: 'Part B - Corrective Action',\n            layout: 'grid-1',\n            fields: [\n              {\n                key: 'failureDescription',\n                label: 'Failure Description',\n                type: 'textarea',\n                required: true,\n              },\n              {\n                key: 'rootCause',\n                label: 'Root Cause',\n                type: 'textarea',\n                required: false,\n              },\n              {\n                key: 'correctiveAction',\n                label: 'Corrective Action',\n                type: 'textarea',\n                required: true,\n              },\n              {\n                key: 'preventiveAction',\n                label: 'Preventive Action',\n                type: 'textarea',\n                required: false,\n              },\n              {\n                key: 'actualSpares',\n                label: 'Actual Spares Used',\n                type: 'repeater',\n                required: false,\n              },\n            ],\n          },\n        ],\n      };\n    }\n    return {};\n  }\n\n  private initializeComponents() {\n    // Create hierarchical component structure for MV Test Vessel\n    const sampleComponents: Component[] = [\n      // Top level - Ship groups\n      {\n        id: '1',\n        name: 'Ship General',\n        componentCode: '1',\n        parentId: null,\n        vesselId: 'MV Test Vessel',\n        category: 'Ship General',\n        currentCumulativeRH: '0',\n        lastUpdated: '02-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n      {\n        id: '2',\n        name: 'Hull',\n        componentCode: '2',\n        parentId: null,\n        vesselId: 'MV Test Vessel',\n        category: 'Hull',\n        currentCumulativeRH: '0',\n        lastUpdated: '02-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n      {\n        id: '3',\n        name: 'Equipment for Cargo',\n        componentCode: '3',\n        parentId: null,\n        vesselId: 'MV Test Vessel',\n        category: 'Equipment for Cargo',\n        currentCumulativeRH: '0',\n        lastUpdated: '02-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n      {\n        id: '4',\n        name: \"Ship's Equipment\",\n        componentCode: '4',\n        parentId: null,\n        vesselId: 'MV Test Vessel',\n        category: \"Ship's Equipment\",\n        currentCumulativeRH: '0',\n        lastUpdated: '02-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n      {\n        id: '5',\n        name: 'Equipment for Crew & Passengers',\n        componentCode: '5',\n        parentId: null,\n        vesselId: 'MV Test Vessel',\n        category: 'Equipment for Crew & Passengers',\n        currentCumulativeRH: '0',\n        lastUpdated: '02-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n      {\n        id: '6',\n        name: 'Machinery Main Components',\n        componentCode: '6',\n        parentId: null,\n        vesselId: 'MV Test Vessel',\n        category: 'Machinery Main Components',\n        currentCumulativeRH: '0',\n        lastUpdated: '02-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n      {\n        id: '7',\n        name: 'Systems for Machinery Main Components',\n        componentCode: '7',\n        parentId: null,\n        vesselId: 'MV Test Vessel',\n        category: 'Systems for Machinery Main Components',\n        currentCumulativeRH: '0',\n        lastUpdated: '02-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n      {\n        id: '8',\n        name: 'Ship Common Systems',\n        componentCode: '8',\n        parentId: null,\n        vesselId: 'MV Test Vessel',\n        category: 'Ship Common Systems',\n        currentCumulativeRH: '0',\n        lastUpdated: '02-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n\n      // Level 2 - Under Ship General\n      {\n        id: '1.1',\n        name: 'Fresh Water System',\n        componentCode: '1.1',\n        parentId: '1',\n        vesselId: 'MV Test Vessel',\n        category: 'Ship General',\n        currentCumulativeRH: '0',\n        lastUpdated: '02-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n      {\n        id: '1.2',\n        name: 'Sewage Treatment System',\n        componentCode: '1.2',\n        parentId: '1',\n        vesselId: 'MV Test Vessel',\n        category: 'Ship General',\n        currentCumulativeRH: '0',\n        lastUpdated: '02-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n      {\n        id: '1.3',\n        name: 'HVAC – Accommodation',\n        componentCode: '1.3',\n        parentId: '1',\n        vesselId: 'MV Test Vessel',\n        category: 'Ship General',\n        currentCumulativeRH: '0',\n        lastUpdated: '02-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n\n      // Level 3 - Under Fresh Water System\n      {\n        id: '1.1.1',\n        name: 'Hydrophore Unit',\n        componentCode: '1.1.1',\n        parentId: '1.1',\n        vesselId: 'MV Test Vessel',\n        category: 'Ship General',\n        currentCumulativeRH: '0',\n        lastUpdated: '02-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n      {\n        id: '1.1.2',\n        name: 'Potable Water Maker',\n        componentCode: '1.1.2',\n        parentId: '1.1',\n        vesselId: 'MV Test Vessel',\n        category: 'Ship General',\n        currentCumulativeRH: '0',\n        lastUpdated: '02-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n      {\n        id: '1.1.3',\n        name: 'UV Sterilizer',\n        componentCode: '1.1.3',\n        parentId: '1.1',\n        vesselId: 'MV Test Vessel',\n        category: 'Ship General',\n        currentCumulativeRH: '0',\n        lastUpdated: '02-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n\n      // Level 4 - Under Hydrophore Unit\n      {\n        id: '1.1.1.1',\n        name: 'Pressure Vessel',\n        componentCode: '1.1.1.1',\n        parentId: '1.1.1',\n        vesselId: 'MV Test Vessel',\n        category: 'Ship General',\n        currentCumulativeRH: '0',\n        lastUpdated: '02-Jun-2025',\n        maker: 'ACME Marine',\n        model: 'PV-2000',\n        serialNo: 'PV2024001',\n        deptCategory: 'Engineering',\n        componentCategory: 'Ship General',\n        location: 'Engine Room',\n        commissionedDate: '01-Jan-2020',\n        critical: true,\n        classItem: false,\n      },\n      {\n        id: '1.1.1.2',\n        name: 'Feed Pump',\n        componentCode: '1.1.1.2',\n        parentId: '1.1.1',\n        vesselId: 'MV Test Vessel',\n        category: 'Ship General',\n        currentCumulativeRH: '12450',\n        lastUpdated: '02-Jun-2025',\n        maker: 'Grundfos',\n        model: 'CR32-4',\n        serialNo: 'GF2024002',\n        deptCategory: 'Engineering',\n        componentCategory: 'Ship General',\n        location: 'Engine Room',\n        commissionedDate: '01-Jan-2020',\n        critical: true,\n        classItem: true,\n      },\n      {\n        id: '1.1.1.3',\n        name: 'Pressure Switch',\n        componentCode: '1.1.1.3',\n        parentId: '1.1.1',\n        vesselId: 'MV Test Vessel',\n        category: 'Ship General',\n        currentCumulativeRH: '0',\n        lastUpdated: '02-Jun-2025',\n        maker: 'Danfoss',\n        model: 'KP35',\n        serialNo: 'DF2024003',\n        deptCategory: 'Engineering',\n        componentCategory: 'Ship General',\n        location: 'Engine Room',\n        commissionedDate: '01-Jan-2020',\n        critical: false,\n        classItem: false,\n      },\n\n      // Level 2 - Under Machinery Main Components\n      {\n        id: '6.1',\n        name: 'Diesel Engines',\n        componentCode: '6.1',\n        parentId: '6',\n        vesselId: 'MV Test Vessel',\n        category: 'Machinery Main Components',\n        currentCumulativeRH: '0',\n        lastUpdated: '02-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n      {\n        id: '6.2',\n        name: 'Turbines',\n        componentCode: '6.2',\n        parentId: '6',\n        vesselId: 'MV Test Vessel',\n        category: 'Machinery Main Components',\n        currentCumulativeRH: '0',\n        lastUpdated: '02-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n\n      // Level 3 - Under Diesel Engines\n      {\n        id: '6.1.1',\n        name: 'Main Engine',\n        componentCode: '6.1.1',\n        parentId: '6.1',\n        vesselId: 'MV Test Vessel',\n        category: 'Machinery Main Components',\n        currentCumulativeRH: '12580',\n        lastUpdated: '30-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n      {\n        id: '6.1.2',\n        name: 'Auxiliary Engine #1',\n        componentCode: '6.1.2',\n        parentId: '6.1',\n        vesselId: 'MV Test Vessel',\n        category: 'Machinery Main Components',\n        currentCumulativeRH: '15670',\n        lastUpdated: '09-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n      {\n        id: '6.1.3',\n        name: 'Auxiliary Engine #2',\n        componentCode: '6.1.3',\n        parentId: '6.1',\n        vesselId: 'MV Test Vessel',\n        category: 'Machinery Main Components',\n        currentCumulativeRH: '14980',\n        lastUpdated: '16-Jun-2025',\n        maker: null,\n        model: null,\n        serialNo: null,\n        deptCategory: null,\n        componentCategory: null,\n        location: null,\n        commissionedDate: null,\n        critical: false,\n        classItem: false,\n      },\n\n      // Level 4 - Under Main Engine\n      {\n        id: '6.1.1.1',\n        name: 'Crankshaft',\n        componentCode: '6.1.1.1',\n        parentId: '6.1.1',\n        vesselId: 'MV Test Vessel',\n        category: 'Machinery Main Components',\n        currentCumulativeRH: '12580',\n        lastUpdated: '30-Jun-2025',\n        maker: 'MAN B&W',\n        model: '6S60MC-C',\n        serialNo: 'MB2020001',\n        deptCategory: 'Engineering',\n        componentCategory: 'Machinery Main Components',\n        location: 'Engine Room',\n        commissionedDate: '01-Jan-2020',\n        critical: true,\n        classItem: true,\n      },\n      {\n        id: '6.1.1.2',\n        name: 'Cylinder Liners',\n        componentCode: '6.1.1.2',\n        parentId: '6.1.1',\n        vesselId: 'MV Test Vessel',\n        category: 'Machinery Main Components',\n        currentCumulativeRH: '12580',\n        lastUpdated: '30-Jun-2025',\n        maker: 'MAN B&W',\n        model: 'CL-600',\n        serialNo: 'MB2020002',\n        deptCategory: 'Engineering',\n        componentCategory: 'Machinery Main Components',\n        location: 'Engine Room',\n        commissionedDate: '01-Jan-2020',\n        critical: true,\n        classItem: true,\n      },\n      {\n        id: '6.1.1.3',\n        name: 'Piston & Piston Rod',\n        componentCode: '6.1.1.3',\n        parentId: '6.1.1',\n        vesselId: 'MV Test Vessel',\n        category: 'Machinery Main Components',\n        currentCumulativeRH: '12580',\n        lastUpdated: '30-Jun-2025',\n        maker: 'MAN B&W',\n        model: 'PR-600',\n        serialNo: 'MB2020003',\n        deptCategory: 'Engineering',\n        componentCategory: 'Machinery Main Components',\n        location: 'Engine Room',\n        commissionedDate: '01-Jan-2020',\n        critical: true,\n        classItem: true,\n      },\n      {\n        id: '6.1.1.4',\n        name: 'Connecting Rod',\n        componentCode: '6.1.1.4',\n        parentId: '6.1.1',\n        vesselId: 'MV Test Vessel',\n        category: 'Machinery Main Components',\n        currentCumulativeRH: '12580',\n        lastUpdated: '30-Jun-2025',\n        maker: 'MAN B&W',\n        model: 'CR-600',\n        serialNo: 'MB2020004',\n        deptCategory: 'Engineering',\n        componentCategory: 'Machinery Main Components',\n        location: 'Engine Room',\n        commissionedDate: '01-Jan-2020',\n        critical: true,\n        classItem: false,\n      },\n      {\n        id: '6.1.1.5',\n        name: 'Camshaft',\n        componentCode: '6.1.1.5',\n        parentId: '6.1.1',\n        vesselId: 'MV Test Vessel',\n        category: 'Machinery Main Components',\n        currentCumulativeRH: '12580',\n        lastUpdated: '30-Jun-2025',\n        maker: 'MAN B&W',\n        model: 'CS-600',\n        serialNo: 'MB2020005',\n        deptCategory: 'Engineering',\n        componentCategory: 'Machinery Main Components',\n        location: 'Engine Room',\n        commissionedDate: '01-Jan-2020',\n        critical: true,\n        classItem: false,\n      },\n    ];\n\n    sampleComponents.forEach(comp => this.components.set(comp.id, comp));\n  }\n\n  async getUser(id: number): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      user => user.username === username\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = this.currentUserId++;\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  // Running Hours methods\n  async getComponents(vesselId: string): Promise<Component[]> {\n    return Array.from(this.components.values()).filter(\n      c => c.vesselId === vesselId\n    );\n  }\n\n  async getComponent(id: string): Promise<Component | undefined> {\n    return this.components.get(id);\n  }\n\n  async updateComponent(\n    id: string,\n    data: Partial<Component>\n  ): Promise<Component> {\n    const component = this.components.get(id);\n    if (!component) {\n      throw new Error(`Component ${id} not found`);\n    }\n    const updated = { ...component, ...data };\n    this.components.set(id, updated);\n    return updated;\n  }\n\n  async createRunningHoursAudit(\n    audit: InsertRunningHoursAudit\n  ): Promise<RunningHoursAudit> {\n    const id = this.currentAuditId++;\n    const fullAudit: RunningHoursAudit = {\n      ...audit,\n      id,\n      previousRH: audit.previousRH.toString(),\n      newRH: audit.newRH.toString(),\n      cumulativeRH: audit.cumulativeRH.toString(),\n      oldMeterFinal: audit.oldMeterFinal?.toString() || null,\n      newMeterStart: audit.newMeterStart?.toString() || null,\n      enteredAtUTC: audit.enteredAtUTC || new Date(),\n      notes: audit.notes || null,\n      version: audit.version || 1,\n    };\n    this.runningHoursAudits.push(fullAudit);\n    return fullAudit;\n  }\n\n  async getRunningHoursAudits(\n    componentId: string,\n    limit?: number\n  ): Promise<RunningHoursAudit[]> {\n    const audits = this.runningHoursAudits\n      .filter(a => a.componentId === componentId)\n      .sort((a, b) => b.enteredAtUTC.getTime() - a.enteredAtUTC.getTime());\n\n    return limit ? audits.slice(0, limit) : audits;\n  }\n\n  async getRunningHoursAuditsInDateRange(\n    componentId: string,\n    startDate: Date,\n    endDate: Date\n  ): Promise<RunningHoursAudit[]> {\n    return this.runningHoursAudits.filter(a => {\n      if (a.componentId !== componentId) return false;\n      const auditDate = new Date(a.dateUpdatedLocal);\n      return auditDate >= startDate && auditDate <= endDate;\n    });\n  }\n\n  // Generate Component Spare Code\n  private generateComponentSpareCode(\n    vesselId: string,\n    componentCode: string\n  ): string {\n    // Get all existing spares for this component in this vessel\n    const existingSpares = Array.from(this.spares.values())\n      .filter(\n        s =>\n          s.vesselId === vesselId &&\n          s.componentCode === componentCode &&\n          s.componentSpareCode\n      )\n      .map(s => s.componentSpareCode);\n\n    // Extract existing sequence numbers for this component\n    const prefix = `SP-${componentCode}-`;\n    const existingNumbers = existingSpares\n      .filter(code => code?.startsWith(prefix))\n      .map(code => {\n        const parts = code!.split('-');\n        const nnn = parts[parts.length - 1];\n        return parseInt(nnn, 10);\n      })\n      .filter(n => !isNaN(n));\n\n    // Find the next available number\n    const nextNumber =\n      existingNumbers.length > 0 ? Math.max(...existingNumbers) + 1 : 1;\n\n    // Format with zero padding\n    const nnn = String(nextNumber).padStart(3, '0');\n    return `${prefix}${nnn}`;\n  }\n\n  private initializeSpares() {\n    const sampleSpares: Spare[] = [\n      {\n        id: 1,\n        partCode: 'SP-ME-001',\n        partName: 'Fuel Injector',\n        componentId: '6.1',\n        componentCode: '6.1',\n        componentName: 'Main Engine',\n        componentSpareCode: 'SP-6.1-001',\n        critical: 'Critical',\n        rob: 2,\n        min: 1,\n        location: 'Store Room A',\n        vesselId: 'V001',\n        deleted: false,\n      },\n      {\n        id: 2,\n        partCode: 'SP-ME-002',\n        partName: 'Cylinder Head Gasket',\n        componentId: '6.1.1',\n        componentCode: '6.1.1',\n        componentName: 'Cylinder Head',\n        componentSpareCode: 'SP-6.1.1-001',\n        critical: 'No',\n        rob: 2,\n        min: 1,\n        location: 'Store Room B',\n        vesselId: 'V001',\n        deleted: false,\n      },\n      {\n        id: 3,\n        partCode: 'SP-ME-003',\n        partName: 'Piston Ring Set',\n        componentId: '6.1',\n        componentCode: '6.1',\n        componentName: 'Main Engine',\n        componentSpareCode: 'SP-6.1-002',\n        critical: 'No',\n        rob: 3,\n        min: 1,\n        location: 'Store Room B',\n        vesselId: 'V001',\n        deleted: false,\n      },\n      {\n        id: 4,\n        partCode: 'SP-ME-004',\n        partName: 'Main Bearing',\n        componentId: '6.1.2',\n        componentCode: '6.1.2',\n        componentName: 'Main Bearings',\n        componentSpareCode: 'SP-6.1.2-001',\n        critical: 'Critical',\n        rob: 4,\n        min: 2,\n        location: 'Store Room C',\n        vesselId: 'V001',\n        deleted: false,\n      },\n      {\n        id: 5,\n        partCode: 'SP-COOL-001',\n        partName: 'Cooling Pump Seal',\n        componentId: '7.3',\n        componentCode: '7.3',\n        componentName: 'Cooling Water System',\n        componentSpareCode: 'SP-7.3-001',\n        critical: 'Critical',\n        rob: 4,\n        min: 2,\n        location: 'Store Room D',\n        vesselId: 'V001',\n        deleted: false,\n      },\n      {\n        id: 6,\n        partCode: 'SP-CC-001',\n        partName: 'Cylinder Cover Assembly',\n        componentId: '6.1.1.1',\n        componentCode: '6.1.1.1',\n        componentName: 'Valve Seats',\n        componentSpareCode: 'SP-6.1.1.1-001',\n        critical: 'Critical',\n        rob: 2,\n        min: 1,\n        location: 'Store Room A',\n        vesselId: 'V001',\n        deleted: false,\n      },\n      {\n        id: 7,\n        partCode: 'SP-CC-002',\n        partName: 'Inlet Valve',\n        componentId: '6.1.1.1',\n        componentCode: '6.1.1.1',\n        componentName: 'Valve Seats',\n        componentSpareCode: 'SP-6.1.1.1-002',\n        critical: 'Critical',\n        rob: 4,\n        min: 2,\n        location: 'Store Room A',\n        vesselId: 'V001',\n        deleted: false,\n      },\n      {\n        id: 8,\n        partCode: 'SP-CC-003',\n        partName: 'Exhaust Valve',\n        componentId: '6.1.1.1',\n        componentCode: '6.1.1.1',\n        componentName: 'Valve Seats',\n        componentSpareCode: 'SP-6.1.1.1-003',\n        critical: 'Critical',\n        rob: 4,\n        min: 2,\n        location: 'Store Room A',\n        vesselId: 'V001',\n        deleted: false,\n      },\n      {\n        id: 9,\n        partCode: 'SP-CC-004',\n        partName: 'Valve Spring',\n        componentId: '6.1.1.2',\n        componentCode: '6.1.1.2',\n        componentName: 'Injector Sleeve',\n        componentSpareCode: 'SP-6.1.1.2-001',\n        critical: 'No',\n        rob: 8,\n        min: 4,\n        location: 'Store Room B',\n        vesselId: 'V001',\n        deleted: false,\n      },\n      {\n        id: 10,\n        partCode: 'SP-CC-005',\n        partName: 'Valve Guide',\n        componentId: '6.1.1.3',\n        componentCode: '6.1.1.3',\n        componentName: 'Rocker Arm',\n        componentSpareCode: 'SP-6.1.1.3-001',\n        critical: 'No',\n        rob: 1,\n        min: 2,\n        location: 'Store Room B',\n        vesselId: 'V001',\n        deleted: false,\n      },\n    ];\n\n    sampleSpares.forEach(spare => this.spares.set(spare.id, spare));\n    this.currentSpareId = 11;\n  }\n\n  // Spares methods\n  async getSpares(vesselId: string): Promise<Spare[]> {\n    return Array.from(this.spares.values()).filter(\n      s => s.vesselId === vesselId && !s.deleted\n    );\n  }\n\n  async getSpare(id: number): Promise<Spare | undefined> {\n    const spare = this.spares.get(id);\n    return spare && !spare.deleted ? spare : undefined;\n  }\n\n  async createSpare(spare: InsertSpare): Promise<Spare> {\n    const id = this.currentSpareId++;\n\n    // Generate component spare code if not provided\n    const componentSpareCode =\n      spare.componentSpareCode ||\n      (spare.componentCode\n        ? this.generateComponentSpareCode(\n            spare.vesselId || 'V001',\n            spare.componentCode\n          )\n        : null);\n\n    const newSpare: Spare = {\n      ...spare,\n      id,\n      vesselId: spare.vesselId || 'V001',\n      componentCode: spare.componentCode || null,\n      location: spare.location || null,\n      componentSpareCode,\n      rob: spare.rob || 0,\n      min: spare.min || 0,\n      deleted: false,\n    };\n    this.spares.set(id, newSpare);\n\n    // Create history entry\n    await this.createSpareHistory({\n      timestampUTC: new Date(),\n      vesselId: spare.vesselId || 'V001',\n      spareId: id,\n      partCode: spare.partCode,\n      partName: spare.partName,\n      componentId: spare.componentId,\n      componentCode: spare.componentCode || null,\n      componentName: spare.componentName,\n      componentSpareCode,\n      eventType: 'LINK_CREATED',\n      qtyChange: spare.rob || 0,\n      robAfter: spare.rob || 0,\n      userId: 'system',\n      remarks: 'Initial creation',\n      reference: null,\n    });\n\n    return newSpare;\n  }\n\n  async updateSpare(id: number, data: Partial<Spare>): Promise<Spare> {\n    const spare = this.spares.get(id);\n    if (!spare || spare.deleted) {\n      throw new Error(`Spare ${id} not found`);\n    }\n    const updated = { ...spare, ...data };\n    this.spares.set(id, updated);\n\n    // Create history entry if ROB changed\n    if (data.rob !== undefined && data.rob !== spare.rob) {\n      await this.createSpareHistory({\n        timestampUTC: new Date(),\n        vesselId: spare.vesselId,\n        spareId: id,\n        partCode: spare.partCode,\n        partName: spare.partName,\n        componentId: spare.componentId,\n        componentCode: spare.componentCode || null,\n        componentName: spare.componentName,\n        componentSpareCode: spare.componentSpareCode || null,\n        eventType: 'EDIT',\n        qtyChange: data.rob - spare.rob,\n        robAfter: data.rob,\n        userId: 'system',\n        remarks: 'Updated via edit',\n        reference: null,\n      });\n    }\n\n    return updated;\n  }\n\n  async deleteSpare(id: number): Promise<void> {\n    const spare = this.spares.get(id);\n    if (spare) {\n      spare.deleted = true;\n      this.spares.set(id, spare);\n    }\n  }\n\n  async consumeSpare(\n    id: number,\n    quantity: number,\n    userId: string,\n    remarks?: string,\n    place?: string,\n    dateLocal?: string,\n    tz?: string\n  ): Promise<Spare> {\n    const spare = await this.getSpare(id);\n    if (!spare) {\n      throw new Error(`Spare ${id} not found`);\n    }\n\n    if (spare.rob < quantity) {\n      throw new Error('Insufficient stock');\n    }\n\n    spare.rob -= quantity;\n    this.spares.set(id, spare);\n\n    // Create history entry\n    await this.createSpareHistory({\n      timestampUTC: new Date(),\n      vesselId: spare.vesselId,\n      spareId: id,\n      partCode: spare.partCode,\n      partName: spare.partName,\n      componentId: spare.componentId,\n      componentCode: spare.componentCode || null,\n      componentName: spare.componentName,\n      componentSpareCode: spare.componentSpareCode || null,\n      eventType: 'CONSUME',\n      qtyChange: -quantity,\n      robAfter: spare.rob,\n      userId,\n      remarks: remarks || null,\n      reference: place || null,\n      dateLocal: dateLocal || null,\n      tz: tz || null,\n    });\n\n    return spare;\n  }\n\n  async receiveSpare(\n    id: number,\n    quantity: number,\n    userId: string,\n    remarks?: string,\n    supplierPO?: string,\n    place?: string,\n    dateLocal?: string,\n    tz?: string\n  ): Promise<Spare> {\n    const spare = await this.getSpare(id);\n    if (!spare) {\n      throw new Error(`Spare ${id} not found`);\n    }\n\n    spare.rob += quantity;\n    this.spares.set(id, spare);\n\n    // Create history entry\n    await this.createSpareHistory({\n      timestampUTC: new Date(),\n      vesselId: spare.vesselId,\n      spareId: id,\n      partCode: spare.partCode,\n      partName: spare.partName,\n      componentId: spare.componentId,\n      componentCode: spare.componentCode || null,\n      componentName: spare.componentName,\n      componentSpareCode: spare.componentSpareCode || null,\n      eventType: 'RECEIVE',\n      qtyChange: quantity,\n      robAfter: spare.rob,\n      userId,\n      remarks: remarks || null,\n      reference: supplierPO || null,\n      place: place || null,\n      dateLocal: dateLocal || null,\n      tz: tz || null,\n    });\n\n    return spare;\n  }\n\n  async bulkUpdateSpares(\n    updates: Array<{\n      id: number;\n      consumed?: number;\n      received?: number;\n      receivedDate?: string;\n      receivedPlace?: string;\n    }>,\n    userId: string,\n    remarks?: string\n  ): Promise<Spare[]> {\n    const updatedSpares: Spare[] = [];\n\n    for (const update of updates) {\n      const spare = await this.getSpare(update.id);\n      if (!spare) continue;\n\n      let netChange = 0;\n      if (update.consumed) {\n        if (spare.rob < update.consumed) {\n          throw new Error(`Insufficient stock for ${spare.partCode}`);\n        }\n        netChange -= update.consumed;\n      }\n      if (update.received) {\n        netChange += update.received;\n      }\n\n      if (netChange !== 0) {\n        spare.rob += netChange;\n        this.spares.set(update.id, spare);\n\n        // Create history entry\n        await this.createSpareHistory({\n          timestampUTC: new Date(),\n          vesselId: spare.vesselId,\n          spareId: update.id,\n          partCode: spare.partCode,\n          partName: spare.partName,\n          componentId: spare.componentId,\n          componentCode: spare.componentCode || null,\n          componentName: spare.componentName,\n          componentSpareCode: spare.componentSpareCode || null,\n          eventType: 'ADJUST',\n          qtyChange: netChange,\n          robAfter: spare.rob,\n          userId,\n          remarks: remarks || 'Bulk update',\n          reference: null,\n          dateLocal: update.receivedDate || null,\n          place: update.receivedPlace || null,\n          tz: update.receivedDate\n            ? Intl.DateTimeFormat().resolvedOptions().timeZone\n            : null,\n        });\n\n        updatedSpares.push(spare);\n      }\n    }\n\n    return updatedSpares;\n  }\n\n  // Spares History methods\n  async getSpareHistory(vesselId: string): Promise<SpareHistory[]> {\n    return this.sparesHistory\n      .filter(h => h.vesselId === vesselId)\n      .sort((a, b) => b.timestampUTC.getTime() - a.timestampUTC.getTime());\n  }\n\n  async getSpareHistoryBySpareId(spareId: number): Promise<SpareHistory[]> {\n    return this.sparesHistory\n      .filter(h => h.spareId === spareId)\n      .sort((a, b) => b.timestampUTC.getTime() - a.timestampUTC.getTime());\n  }\n\n  async createSpareHistory(history: InsertSpareHistory): Promise<SpareHistory> {\n    const id = this.currentHistoryId++;\n    const fullHistory: SpareHistory = { ...history, id };\n    this.sparesHistory.push(fullHistory);\n    return fullHistory;\n  }\n\n  // Change Request methods\n  async getChangeRequests(filters?: {\n    category?: string;\n    status?: string;\n    q?: string;\n    vesselId?: string;\n  }): Promise<ChangeRequest[]> {\n    let requests = Array.from(this.changeRequests.values());\n\n    if (filters) {\n      if (filters.category) {\n        requests = requests.filter(r => r.category === filters.category);\n      }\n      if (filters.status) {\n        requests = requests.filter(r => r.status === filters.status);\n      }\n      if (filters.vesselId) {\n        requests = requests.filter(r => r.vesselId === filters.vesselId);\n      }\n      if (filters.q) {\n        const search = filters.q.toLowerCase();\n        requests = requests.filter(\n          r =>\n            r.title.toLowerCase().includes(search) ||\n            r.status.toLowerCase().includes(search)\n        );\n      }\n    }\n\n    return requests.sort(\n      (a, b) => b.createdAt.getTime() - a.createdAt.getTime()\n    );\n  }\n\n  async getChangeRequest(id: number): Promise<ChangeRequest | undefined> {\n    return this.changeRequests.get(id);\n  }\n\n  async createChangeRequest(\n    request: InsertChangeRequest\n  ): Promise<ChangeRequest> {\n    const id = this.currentChangeRequestId++;\n    const now = new Date();\n    const fullRequest: ChangeRequest = {\n      ...request,\n      id,\n      status: request.status || 'draft',\n      targetType: request.targetType || null,\n      targetId: request.targetId || null,\n      snapshotBeforeJson: request.snapshotBeforeJson || null,\n      proposedChangesJson: request.proposedChangesJson || null,\n      movePreviewJson: request.movePreviewJson || null,\n      submittedAt: request.submittedAt || null,\n      reviewedByUserId: request.reviewedByUserId || null,\n      reviewedAt: request.reviewedAt || null,\n      createdAt: now,\n      updatedAt: now,\n    };\n    this.changeRequests.set(id, fullRequest);\n    return fullRequest;\n  }\n\n  async updateChangeRequest(\n    id: number,\n    data: Partial<ChangeRequest>\n  ): Promise<ChangeRequest> {\n    const request = this.changeRequests.get(id);\n    if (!request) throw new Error('Change request not found');\n\n    const updated = {\n      ...request,\n      ...data,\n      updatedAt: new Date(),\n    };\n    this.changeRequests.set(id, updated);\n    return updated;\n  }\n\n  async updateChangeRequestTarget(\n    id: number,\n    targetType: string | null,\n    targetId: string | null,\n    snapshotBeforeJson: any\n  ): Promise<ChangeRequest> {\n    const request = this.changeRequests.get(id);\n    if (!request) throw new Error('Change request not found');\n\n    if (request.status !== 'draft' && request.status !== 'returned') {\n      throw new Error('Can only update target for draft or returned requests');\n    }\n\n    const updated = {\n      ...request,\n      targetType,\n      targetId,\n      snapshotBeforeJson,\n      updatedAt: new Date(),\n    };\n    this.changeRequests.set(id, updated);\n    return updated;\n  }\n\n  async updateChangeRequestProposed(\n    id: number,\n    proposedChangesJson: any,\n    movePreviewJson?: any\n  ): Promise<ChangeRequest> {\n    const request = this.changeRequests.get(id);\n    if (!request) throw new Error('Change request not found');\n\n    if (request.status !== 'draft' && request.status !== 'returned') {\n      throw new Error(\n        'Can only update proposed changes for draft or returned requests'\n      );\n    }\n\n    const updated = {\n      ...request,\n      proposedChangesJson,\n      movePreviewJson: movePreviewJson || null,\n      updatedAt: new Date(),\n    };\n    this.changeRequests.set(id, updated);\n    return updated;\n  }\n\n  async deleteChangeRequest(id: number): Promise<void> {\n    const request = this.changeRequests.get(id);\n    if (!request) throw new Error('Change request not found');\n    if (request.status !== 'draft') {\n      throw new Error('Only draft requests can be deleted');\n    }\n    this.changeRequests.delete(id);\n  }\n\n  async submitChangeRequest(\n    id: number,\n    userId: string\n  ): Promise<ChangeRequest> {\n    const request = this.changeRequests.get(id);\n    if (!request) throw new Error('Change request not found');\n\n    const now = new Date();\n    const updated = {\n      ...request,\n      status: 'submitted' as const,\n      submittedAt: now,\n      requestedByUserId: userId,\n      updatedAt: now,\n    };\n    this.changeRequests.set(id, updated);\n    return updated;\n  }\n\n  async approveChangeRequest(\n    id: number,\n    reviewerId: string,\n    comment: string\n  ): Promise<ChangeRequest> {\n    const request = this.changeRequests.get(id);\n    if (!request) throw new Error('Change request not found');\n    if (request.status !== 'submitted') {\n      throw new Error('Only submitted requests can be approved');\n    }\n\n    // Add comment\n    await this.createChangeRequestComment({\n      changeRequestId: id,\n      userId: reviewerId,\n      message: `APPROVED: ${comment}`,\n    });\n\n    const now = new Date();\n    const updated = {\n      ...request,\n      status: 'approved' as const,\n      reviewedByUserId: reviewerId,\n      reviewedAt: now,\n      updatedAt: now,\n    };\n    this.changeRequests.set(id, updated);\n    return updated;\n  }\n\n  async rejectChangeRequest(\n    id: number,\n    reviewerId: string,\n    comment: string\n  ): Promise<ChangeRequest> {\n    const request = this.changeRequests.get(id);\n    if (!request) throw new Error('Change request not found');\n    if (request.status !== 'submitted') {\n      throw new Error('Only submitted requests can be rejected');\n    }\n\n    // Add comment\n    await this.createChangeRequestComment({\n      changeRequestId: id,\n      userId: reviewerId,\n      message: `REJECTED: ${comment}`,\n    });\n\n    const now = new Date();\n    const updated = {\n      ...request,\n      status: 'rejected' as const,\n      reviewedByUserId: reviewerId,\n      reviewedAt: now,\n      updatedAt: now,\n    };\n    this.changeRequests.set(id, updated);\n    return updated;\n  }\n\n  async returnChangeRequest(\n    id: number,\n    reviewerId: string,\n    comment: string\n  ): Promise<ChangeRequest> {\n    const request = this.changeRequests.get(id);\n    if (!request) throw new Error('Change request not found');\n    if (request.status !== 'submitted') {\n      throw new Error('Only submitted requests can be returned');\n    }\n\n    // Add comment\n    await this.createChangeRequestComment({\n      changeRequestId: id,\n      userId: reviewerId,\n      message: `RETURNED FOR CLARIFICATION: ${comment}`,\n    });\n\n    const now = new Date();\n    const updated = {\n      ...request,\n      status: 'returned' as const,\n      reviewedByUserId: reviewerId,\n      reviewedAt: now,\n      updatedAt: now,\n    };\n    this.changeRequests.set(id, updated);\n    return updated;\n  }\n\n  // Change Request Attachments\n  async getChangeRequestAttachments(\n    changeRequestId: number\n  ): Promise<ChangeRequestAttachment[]> {\n    return this.changeRequestAttachments.filter(\n      a => a.changeRequestId === changeRequestId\n    );\n  }\n\n  async createChangeRequestAttachment(\n    attachment: InsertChangeRequestAttachment\n  ): Promise<ChangeRequestAttachment> {\n    const id = this.currentAttachmentId++;\n    const fullAttachment: ChangeRequestAttachment = {\n      ...attachment,\n      id,\n      uploadedAt: new Date(),\n    };\n    this.changeRequestAttachments.push(fullAttachment);\n    return fullAttachment;\n  }\n\n  // Change Request Comments\n  async getChangeRequestComments(\n    changeRequestId: number\n  ): Promise<ChangeRequestComment[]> {\n    return this.changeRequestComments\n      .filter(c => c.changeRequestId === changeRequestId)\n      .sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());\n  }\n\n  async createChangeRequestComment(\n    comment: InsertChangeRequestComment\n  ): Promise<ChangeRequestComment> {\n    const id = this.currentCommentId++;\n    const fullComment: ChangeRequestComment = {\n      ...comment,\n      id,\n      createdAt: new Date(),\n    };\n    this.changeRequestComments.push(fullComment);\n    return fullComment;\n  }\n\n  // Bulk Import methods\n  async bulkCreateComponents(\n    components: InsertComponent[]\n  ): Promise<Component[]> {\n    const created: Component[] = [];\n    for (const comp of components) {\n      const newComp: Component = {\n        ...comp,\n        id: comp.id || String(Date.now() + Math.random()),\n        vesselId: comp.vesselId || 'V001',\n        currentCumulativeRH: comp.currentCumulativeRH || '0',\n        lastUpdated: comp.lastUpdated || new Date().toISOString().split('T')[0],\n      };\n      this.components.set(newComp.id, newComp);\n      created.push(newComp);\n    }\n    return created;\n  }\n\n  async bulkUpdateComponents(\n    updates: Array<{ id: string; data: Partial<Component> }>\n  ): Promise<Component[]> {\n    const updated: Component[] = [];\n    for (const { id, data } of updates) {\n      const existing = this.components.get(id);\n      if (existing) {\n        const updatedComp = { ...existing, ...data };\n        this.components.set(id, updatedComp);\n        updated.push(updatedComp);\n      }\n    }\n    return updated;\n  }\n\n  async bulkUpsertComponents(\n    components: InsertComponent[]\n  ): Promise<{ created: number; updated: number }> {\n    let created = 0;\n    let updated = 0;\n\n    for (const comp of components) {\n      const id = comp.id || comp.componentCode;\n      if (!id) continue;\n\n      if (this.components.has(id)) {\n        const existing = this.components.get(id)!;\n        this.components.set(id, { ...existing, ...comp });\n        updated++;\n      } else {\n        const newComp: Component = {\n          ...comp,\n          id,\n          currentCumulativeRH: comp.currentCumulativeRH || '0',\n          lastUpdated:\n            comp.lastUpdated || new Date().toISOString().split('T')[0],\n        };\n        this.components.set(id, newComp);\n        created++;\n      }\n    }\n\n    return { created, updated };\n  }\n\n  async bulkCreateSpares(spares: InsertSpare[]): Promise<Spare[]> {\n    const created: Spare[] = [];\n    for (const spare of spares) {\n      const id = this.currentSpareId++;\n      const newSpare: Spare = {\n        ...spare,\n        id,\n        robStock: spare.robStock || 0,\n        consumed: spare.consumed || 0,\n        received: spare.received || 0,\n        status: spare.status || 'active',\n        minStock: spare.minStock || 0,\n        stockStatus: this.calculateStockStatus(\n          spare.robStock || 0,\n          spare.minStock || 0\n        ),\n        issuedWithUnit: spare.issuedWithUnit || 0,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      };\n      this.spares.set(id, newSpare);\n      created.push(newSpare);\n    }\n    return created;\n  }\n\n  async bulkUpdateSparesByROB(\n    updates: Array<{ robId: string; data: Partial<Spare> }>\n  ): Promise<Spare[]> {\n    const updated: Spare[] = [];\n    for (const { robId, data } of updates) {\n      // Find spare by robId\n      const existingEntry = Array.from(this.spares.entries()).find(\n        ([_, spare]) => spare.robId === robId\n      );\n      if (existingEntry) {\n        const [id, existing] = existingEntry;\n        const updatedSpare = { ...existing, ...data, updatedAt: new Date() };\n        this.spares.set(id, updatedSpare);\n        updated.push(updatedSpare);\n      }\n    }\n    return updated;\n  }\n\n  async bulkUpsertSpares(\n    spares: InsertSpare[]\n  ): Promise<{ created: number; updated: number }> {\n    let created = 0;\n    let updated = 0;\n\n    for (const spare of spares) {\n      // Try to find existing spare by robId\n      const existingEntry = Array.from(this.spares.entries()).find(\n        ([_, s]) => s.robId === spare.robId\n      );\n\n      if (existingEntry) {\n        const [id, existing] = existingEntry;\n        const updatedSpare = {\n          ...existing,\n          ...spare,\n          stockStatus: this.calculateStockStatus(\n            spare.robStock || existing.robStock,\n            spare.minStock || existing.minStock\n          ),\n          updatedAt: new Date(),\n        };\n        this.spares.set(id, updatedSpare);\n        updated++;\n      } else {\n        const id = this.currentSpareId++;\n        const newSpare: Spare = {\n          ...spare,\n          id,\n          robStock: spare.robStock || 0,\n          consumed: spare.consumed || 0,\n          received: spare.received || 0,\n          status: spare.status || 'active',\n          minStock: spare.minStock || 0,\n          stockStatus: this.calculateStockStatus(\n            spare.robStock || 0,\n            spare.minStock || 0\n          ),\n          issuedWithUnit: spare.issuedWithUnit || 0,\n          createdAt: new Date(),\n          updatedAt: new Date(),\n        };\n        this.spares.set(id, newSpare);\n        created++;\n      }\n    }\n\n    return { created, updated };\n  }\n\n  async archiveComponentsByIds(ids: string[]): Promise<number> {\n    let archived = 0;\n    for (const id of ids) {\n      if (this.components.has(id)) {\n        const comp = this.components.get(id)!;\n        this.components.set(id, { ...comp, status: 'archived' });\n        archived++;\n      }\n    }\n    return archived;\n  }\n\n  async archiveSparesByIds(ids: number[]): Promise<number> {\n    let archived = 0;\n    for (const id of ids) {\n      if (this.spares.has(id)) {\n        const spare = this.spares.get(id)!;\n        this.spares.set(id, { ...spare, status: 'archived' });\n        archived++;\n      }\n    }\n    return archived;\n  }\n\n  private calculateStockStatus(robStock: number, minStock: number): string {\n    if (robStock === 0) return 'Out of Stock';\n    if (robStock < minStock) return 'Minimum';\n    if (robStock < minStock * 1.5) return 'Low';\n    return 'OK';\n  }\n\n  private initializeAlertPolicies() {\n    // Initialize default alert policies\n    const defaultPolicies = [\n      {\n        alertType: 'maintenance_due',\n        enabled: true,\n        priority: 'medium',\n        emailEnabled: false,\n        inAppEnabled: true,\n        thresholds: JSON.stringify({\n          daysBeforeDue: 7,\n          includePendingApproval: false,\n          onlyCritical: false,\n        }),\n        scopeFilters: JSON.stringify({}),\n        recipients: JSON.stringify({\n          roles: ['Chief Engineer', '2nd Engineer'],\n          users: [],\n        }),\n        createdBy: 'system',\n        updatedBy: 'system',\n      },\n      {\n        alertType: 'critical_inventory',\n        enabled: true,\n        priority: 'high',\n        emailEnabled: true,\n        inAppEnabled: true,\n        thresholds: JSON.stringify({\n          bufferQty: 0,\n          includeNonCritical: false,\n        }),\n        scopeFilters: JSON.stringify({}),\n        recipients: JSON.stringify({\n          roles: ['Chief Engineer', 'Tech Superintendent'],\n          users: [],\n        }),\n        createdBy: 'system',\n        updatedBy: 'system',\n      },\n      {\n        alertType: 'running_hours',\n        enabled: true,\n        priority: 'medium',\n        emailEnabled: false,\n        inAppEnabled: true,\n        thresholds: JSON.stringify({\n          hoursBeforeService: 100,\n          utilizationSpikePercent: null,\n        }),\n        scopeFilters: JSON.stringify({}),\n        recipients: JSON.stringify({\n          roles: ['Chief Engineer'],\n          users: [],\n        }),\n        createdBy: 'system',\n        updatedBy: 'system',\n      },\n      {\n        alertType: 'certificate_expiration',\n        enabled: true,\n        priority: 'high',\n        emailEnabled: true,\n        inAppEnabled: true,\n        thresholds: JSON.stringify({\n          daysBeforeExpiry: 30,\n          types: ['Class Certificates', 'Flag', 'Insurance'],\n        }),\n        scopeFilters: JSON.stringify({}),\n        recipients: JSON.stringify({\n          roles: ['Tech Superintendent', 'Office'],\n          users: [],\n        }),\n        createdBy: 'system',\n        updatedBy: 'system',\n      },\n      {\n        alertType: 'system_backup',\n        enabled: true,\n        priority: 'low',\n        emailEnabled: false,\n        inAppEnabled: true,\n        thresholds: JSON.stringify({\n          requireDailySuccess: true,\n          maxAgeHours: 26,\n        }),\n        scopeFilters: JSON.stringify({}),\n        recipients: JSON.stringify({\n          roles: ['Tech Superintendent'],\n          users: [],\n        }),\n        createdBy: 'system',\n        updatedBy: 'system',\n      },\n    ];\n\n    defaultPolicies.forEach((policy, index) => {\n      const newPolicy: AlertPolicy = {\n        id: index + 1,\n        ...policy,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      };\n      this.alertPolicies.set(newPolicy.id, newPolicy);\n      this.currentAlertPolicyId = index + 2;\n    });\n  }\n\n  // Alert Policy methods\n  async getAlertPolicies(): Promise<AlertPolicy[]> {\n    return Array.from(this.alertPolicies.values());\n  }\n\n  async getAlertPolicy(id: number): Promise<AlertPolicy | undefined> {\n    return this.alertPolicies.get(id);\n  }\n\n  async createAlertPolicy(policy: InsertAlertPolicy): Promise<AlertPolicy> {\n    const newPolicy: AlertPolicy = {\n      id: this.currentAlertPolicyId++,\n      ...policy,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n    this.alertPolicies.set(newPolicy.id, newPolicy);\n    return newPolicy;\n  }\n\n  async updateAlertPolicy(\n    id: number,\n    data: Partial<AlertPolicy>\n  ): Promise<AlertPolicy> {\n    const policy = this.alertPolicies.get(id);\n    if (!policy) {\n      throw new Error(`Alert policy ${id} not found`);\n    }\n    const updated = {\n      ...policy,\n      ...data,\n      updatedAt: new Date(),\n    };\n    this.alertPolicies.set(id, updated);\n    return updated;\n  }\n\n  async deleteAlertPolicy(id: number): Promise<void> {\n    this.alertPolicies.delete(id);\n  }\n\n  // Alert Event methods\n  async getAlertEvents(filters?: {\n    startDate?: Date;\n    endDate?: Date;\n    alertType?: string;\n    priority?: string;\n    status?: string;\n    vesselId?: string;\n  }): Promise<AlertEvent[]> {\n    let events = Array.from(this.alertEvents.values());\n\n    if (filters) {\n      if (filters.startDate) {\n        events = events.filter(e => e.createdAt >= filters.startDate!);\n      }\n      if (filters.endDate) {\n        events = events.filter(e => e.createdAt <= filters.endDate!);\n      }\n      if (filters.alertType) {\n        events = events.filter(e => e.alertType === filters.alertType);\n      }\n      if (filters.priority) {\n        events = events.filter(e => e.priority === filters.priority);\n      }\n      if (filters.vesselId) {\n        events = events.filter(e => e.vesselId === filters.vesselId);\n      }\n    }\n\n    return events.sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());\n  }\n\n  async getAlertEvent(id: number): Promise<AlertEvent | undefined> {\n    return this.alertEvents.get(id);\n  }\n\n  async createAlertEvent(event: InsertAlertEvent): Promise<AlertEvent> {\n    const newEvent: AlertEvent = {\n      id: this.currentAlertEventId++,\n      ...event,\n      createdAt: new Date(),\n    };\n    this.alertEvents.set(newEvent.id, newEvent);\n    return newEvent;\n  }\n\n  async acknowledgeAlertEvent(id: number, userId: string): Promise<AlertEvent> {\n    const event = this.alertEvents.get(id);\n    if (!event) {\n      throw new Error(`Alert event ${id} not found`);\n    }\n    const updated = {\n      ...event,\n      ackBy: userId,\n      ackAt: new Date(),\n    };\n    this.alertEvents.set(id, updated);\n    return updated;\n  }\n\n  // Alert Delivery methods\n  async getAlertDeliveries(eventId: number): Promise<AlertDelivery[]> {\n    return Array.from(this.alertDeliveries.values()).filter(\n      d => d.eventId === eventId\n    );\n  }\n\n  async createAlertDelivery(\n    delivery: InsertAlertDelivery\n  ): Promise<AlertDelivery> {\n    const newDelivery: AlertDelivery = {\n      id: this.currentAlertDeliveryId++,\n      ...delivery,\n      createdAt: new Date(),\n    };\n    this.alertDeliveries.set(newDelivery.id, newDelivery);\n    return newDelivery;\n  }\n\n  async updateAlertDeliveryStatus(\n    id: number,\n    status: string,\n    errorMessage?: string\n  ): Promise<AlertDelivery> {\n    const delivery = this.alertDeliveries.get(id);\n    if (!delivery) {\n      throw new Error(`Alert delivery ${id} not found`);\n    }\n    const updated = {\n      ...delivery,\n      status,\n      errorMessage,\n      sentAt: status === 'sent' ? new Date() : delivery.sentAt,\n      acknowledgedAt:\n        status === 'acknowledged' ? new Date() : delivery.acknowledgedAt,\n    };\n    this.alertDeliveries.set(id, updated);\n    return updated;\n  }\n\n  // Alert Config methods\n  async getAlertConfig(vesselId: string): Promise<AlertConfig | undefined> {\n    return this.alertConfigs.get(vesselId);\n  }\n\n  async createOrUpdateAlertConfig(\n    config: InsertAlertConfig\n  ): Promise<AlertConfig> {\n    const existing = this.alertConfigs.get(config.vesselId);\n\n    if (existing) {\n      const updated = {\n        ...existing,\n        ...config,\n        updatedAt: new Date(),\n      };\n      this.alertConfigs.set(config.vesselId, updated);\n      return updated;\n    } else {\n      const newConfig: AlertConfig = {\n        id: this.currentAlertConfigId++,\n        ...config,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      };\n      this.alertConfigs.set(config.vesselId, newConfig);\n      return newConfig;\n    }\n  }\n\n  // Form Definition methods\n  async getFormDefinitions(): Promise<FormDefinition[]> {\n    return Array.from(this.formDefinitions.values());\n  }\n\n  async getFormDefinition(id: number): Promise<FormDefinition | undefined> {\n    return this.formDefinitions.get(id);\n  }\n\n  async getFormDefinitionByName(\n    name: string\n  ): Promise<FormDefinition | undefined> {\n    return Array.from(this.formDefinitions.values()).find(f => f.name === name);\n  }\n\n  async createFormDefinition(\n    form: InsertFormDefinition\n  ): Promise<FormDefinition> {\n    const newForm: FormDefinition = {\n      id: this.currentFormDefinitionId++,\n      ...form,\n    };\n    this.formDefinitions.set(newForm.id, newForm);\n    return newForm;\n  }\n\n  // Form Version methods\n  async getFormVersions(formId: number): Promise<FormVersion[]> {\n    return Array.from(this.formVersions.values())\n      .filter(v => v.formId === formId)\n      .sort((a, b) => b.versionNo - a.versionNo);\n  }\n\n  async getFormVersion(id: number): Promise<FormVersion | undefined> {\n    return this.formVersions.get(id);\n  }\n\n  async getLatestPublishedVersion(\n    formId: number\n  ): Promise<FormVersion | undefined> {\n    const versions = await this.getFormVersions(formId);\n    return versions.find(v => v.status === 'PUBLISHED');\n  }\n\n  async getLatestPublishedVersionByName(\n    name: string\n  ): Promise<FormVersion | undefined> {\n    const form = await this.getFormDefinitionByName(name);\n    if (!form) return undefined;\n    return this.getLatestPublishedVersion(form.id);\n  }\n\n  async createFormVersion(version: InsertFormVersion): Promise<FormVersion> {\n    const newVersion: FormVersion = {\n      id: this.currentFormVersionId++,\n      ...version,\n      versionDate: version.versionDate || new Date(),\n    };\n    this.formVersions.set(newVersion.id, newVersion);\n    return newVersion;\n  }\n\n  async updateFormVersion(\n    id: number,\n    data: Partial<FormVersion>\n  ): Promise<FormVersion> {\n    const version = this.formVersions.get(id);\n    if (!version) throw new Error('Form version not found');\n\n    if (version.status !== 'DRAFT') {\n      throw new Error('Can only update draft versions');\n    }\n\n    const updated = { ...version, ...data };\n    this.formVersions.set(id, updated);\n    return updated;\n  }\n\n  async publishFormVersion(\n    id: number,\n    userId: string,\n    changelog: string\n  ): Promise<FormVersion> {\n    const version = this.formVersions.get(id);\n    if (!version) throw new Error('Form version not found');\n\n    if (version.status !== 'DRAFT') {\n      throw new Error('Can only publish draft versions');\n    }\n\n    // Archive current published version\n    const currentPublished = await this.getLatestPublishedVersion(\n      version.formId\n    );\n    if (currentPublished) {\n      this.formVersions.set(currentPublished.id, {\n        ...currentPublished,\n        status: 'ARCHIVED',\n      });\n    }\n\n    // Publish new version\n    const published = {\n      ...version,\n      status: 'PUBLISHED' as const,\n      authorUserId: userId,\n      changelog,\n      versionDate: new Date(),\n    };\n    this.formVersions.set(id, published);\n    return published;\n  }\n\n  async discardFormVersion(id: number): Promise<void> {\n    const version = this.formVersions.get(id);\n    if (!version) throw new Error('Form version not found');\n\n    if (version.status !== 'DRAFT') {\n      throw new Error('Can only discard draft versions');\n    }\n\n    this.formVersions.delete(id);\n  }\n\n  // Form Version Usage methods\n  async createFormVersionUsage(\n    usage: InsertFormVersionUsage\n  ): Promise<FormVersionUsage> {\n    const newUsage: FormVersionUsage = {\n      id: this.currentFormUsageId++,\n      ...usage,\n      usedAt: usage.usedAt || new Date(),\n    };\n    this.formVersionUsages.push(newUsage);\n    return newUsage;\n  }\n\n  async getFormVersionUsage(\n    formVersionId: number\n  ): Promise<FormVersionUsage[]> {\n    return this.formVersionUsages.filter(\n      u => u.formVersionId === formVersionId\n    );\n  }\n\n  // Work Orders methods\n  async getWorkOrders(vesselId: string): Promise<any[]> {\n    return Array.from(this.workOrders.values()).filter(\n      wo => wo.vesselId === vesselId\n    );\n  }\n\n  async createWorkOrder(workOrder: any): Promise<any> {\n    const id = workOrder.id || `wo-${this.currentWorkOrderId++}`;\n    const newWorkOrder = {\n      ...workOrder,\n      id,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n    this.workOrders.set(id, newWorkOrder);\n    return newWorkOrder;\n  }\n\n  async updateWorkOrder(workOrderId: string, data: any): Promise<any> {\n    const existingWorkOrder = this.workOrders.get(workOrderId);\n    if (!existingWorkOrder) {\n      throw new Error(`Work order with id ${workOrderId} not found`);\n    }\n\n    const updatedWorkOrder = {\n      ...existingWorkOrder,\n      ...data,\n      updatedAt: new Date(),\n    };\n    this.workOrders.set(workOrderId, updatedWorkOrder);\n    return updatedWorkOrder;\n  }\n\n  async deleteWorkOrder(workOrderId: string): Promise<void> {\n    if (!this.workOrders.delete(workOrderId)) {\n      throw new Error(`Work order with id ${workOrderId} not found`);\n    }\n  }\n\n  // Seed forms method\n  async seedForms(): Promise<void> {\n    // Check if forms already exist\n    if (this.formDefinitions.size > 0) {\n      return; // Already seeded\n    }\n\n    // Re-initialize forms\n    await this.initializeFormDefinitions();\n  }\n}\n\n// Export MySQL database storage from database.ts\nexport { storage } from './database';\n"]}