{"version":3,"file":"migration_001_initial_tables.js","sourceRoot":"","sources":["migration_001_initial_tables.ts"],"names":[],"mappings":";AAGA,IAAM,SAAS,GAAc;IAC3B,EAAE,EAAE,KAAK;IACT,IAAI,EAAE,wBAAwB;IAExB,EAAE;;;gBACN,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;gBACzD,+DAA+D;gBAC/D,0DAA0D;gBAC1D,OAAO,CAAC,GAAG,CAAC,2DAA2D,CAAC,CAAC;;;;KAC1E;IAEK,IAAI;;;gBACR,OAAO,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC;gBAC7D,mEAAmE;gBACnE,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;;;;KACpD;CACF,CAAC;AAEF,eAAe,SAAS,CAAC","sourcesContent":["import { Migration } from \"./migrationRunner\";\nimport { sql } from \"drizzle-orm\";\n\nconst migration: Migration = {\n  id: \"001\",\n  name: \"Initial table creation\",\n  \n  async up() {\n    console.log(\"Migration 001: Creating initial tables...\");\n    // This migration is handled by Drizzle's automatic schema sync\n    // In production, you would use proper SQL migrations here\n    console.log(\"✓ Initial tables migration completed (handled by Drizzle)\");\n  },\n\n  async down() {\n    console.log(\"Migration 001: Rolling back initial tables...\");\n    // In production, you would drop tables in reverse dependency order\n    console.log(\"✓ Initial tables rollback completed\");\n  }\n};\n\nexport default migration;"]}