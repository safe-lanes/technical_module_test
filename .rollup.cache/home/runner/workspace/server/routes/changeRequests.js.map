{"version":3,"file":"changeRequests.js","sourceRoot":"","sources":["changeRequests.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AACjC,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAExB,OAAO,EAAE,yBAAyB,EAAE,gCAAgC,EAAE,mCAAmC,EAAE,MAAM,gBAAgB,CAAC;AAElI,MAAM,CAAC,OAAO,UAAU,0BAA0B,CAAC,OAAiB;IAApE,iBAgNC;IA/MC,IAAM,MAAM,GAAG,MAAM,EAAE,CAAC;IAE1B,yCAAyC;IACzC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,UAAO,GAAG,EAAE,GAAG;;;;;;oBAErB,KAA8C,GAAG,CAAC,KAAK,EAArD,QAAQ,cAAA,EAAE,oBAAM,EAAE,wBAAQ,EAAE,8BAAW,CAAe;oBAE/C,qBAAM,OAAO,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,QAAkB,EAAE,CAAC,EAAA;;oBAA5E,QAAQ,GAAG,SAAiE;oBAEhF,gBAAgB;oBAChB,IAAI,QAAM,EAAE,CAAC;wBACX,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,KAAK,QAAM,EAAnB,CAAmB,CAAC,CAAC;oBACvD,CAAC;oBACD,IAAI,UAAQ,EAAE,CAAC;wBACb,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,KAAK,UAAQ,EAAvB,CAAuB,CAAC,CAAC;oBAC3D,CAAC;oBACD,IAAI,aAAW,EAAE,CAAC;wBAChB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,iBAAiB,KAAK,aAAW,EAAnC,CAAmC,CAAC,CAAC;oBACvE,CAAC;oBAED,4BAA4B;oBAC5B,QAAQ,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,OAAO,EAAE,EAA7C,CAA6C,CAAC,CAAC;oBAEvE,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;;oBAEnB,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,OAAK,CAAC,CAAC;oBACxD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,iCAAiC,EAAE,CAAC,CAAC;;;;;SAEtE,CAAC,CAAC;IAEH,sCAAsC;IACtC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,UAAO,GAAG,EAAE,GAAG;;;;;;oBAExB,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBACnB,qBAAM,OAAO,CAAC,gBAAgB,CAAC,EAAE,CAAC,EAAA;;oBAA5C,OAAO,GAAG,SAAkC;oBAElD,IAAI,CAAC,OAAO,EAAE,CAAC;wBACb,sBAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,0BAA0B,EAAE,CAAC,EAAC;oBACrE,CAAC;oBAED,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;;;oBAElB,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,OAAK,CAAC,CAAC;oBACvD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gCAAgC,EAAE,CAAC,CAAC;;;;;SAErE,CAAC,CAAC;IAEH,8BAA8B;IAC9B,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAO,GAAG,EAAE,GAAG;;;;;;oBAEtB,aAAa,GAAG,yBAAyB,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAG1D,WAAW,yBACZ,aAAa,KAChB,QAAQ,EAAE,aAAa,CAAC,QAAQ,IAAI,MAAM,EAC1C,MAAM,EAAE,aAAa,CAAC,MAAM,IAAI,OAAgB,EAChD,iBAAiB,EAAE,aAAa,CAAC,iBAAiB,IAAI,QAAQ,GAC/D,CAAC;oBAEiB,qBAAM,OAAO,CAAC,mBAAmB,CAAC,WAAW,CAAC,EAAA;;oBAA3D,UAAU,GAAG,SAA8C;oBACjE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;;;oBAEjC,IAAI,OAAK,YAAY,CAAC,CAAC,QAAQ,EAAE,CAAC;wBAChC,sBAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,OAAO,EAAE,OAAK,CAAC,MAAM,EAAE,CAAC,EAAC;oBACrF,CAAC;oBACD,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,OAAK,CAAC,CAAC;oBACvD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,iCAAiC,EAAE,CAAC,CAAC;;;;;SAEtE,CAAC,CAAC;IAEH,+BAA+B;IAC/B,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,UAAO,GAAG,EAAE,GAAG;;;;;;oBAEjC,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBAC7B,KAA+C,GAAG,CAAC,IAAI,EAArD,oBAAM,EAAE,gBAAgB,sBAAA,EAAE,cAAc,oBAAA,CAAc;oBAE9D,IAAI,CAAC,CAAC,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,QAAQ,CAAC,QAAM,CAAC,EAAE,CAAC;wBACjF,sBAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,EAAC;oBAC3D,CAAC;oBAEsB,qBAAM,OAAO,CAAC,mBAAmB,CAAC,EAAE,EAAE;4BAC3D,MAAM,UAAA;4BACN,gBAAgB,kBAAA;4BAChB,UAAU,EAAE,IAAI,IAAI,EAAE;yBACvB,CAAC,EAAA;;oBAJI,cAAc,GAAG,SAIrB;oBACF,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;;;;oBAEzB,OAAO,CAAC,KAAK,CAAC,uCAAuC,EAAE,OAAK,CAAC,CAAC;oBAC9D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,wCAAwC,EAAE,CAAC,CAAC;;;;;SAE7E,CAAC,CAAC;IAEH,oCAAoC;IACpC,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,UAAO,GAAG,EAAE,GAAG;;;;;;oBAEjC,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBAC/B,qBAAM,OAAO,CAAC,wBAAwB,CAAC,eAAe,CAAC,EAAA;;oBAAlE,QAAQ,GAAG,SAAuD;oBACxE,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;;oBAEnB,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,OAAK,CAAC,CAAC;oBACjD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,0BAA0B,EAAE,CAAC,CAAC;;;;;SAE/D,CAAC,CAAC;IAEH,gCAAgC;IAChC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,UAAO,GAAG,EAAE,GAAG;;;;;;oBAElC,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBAC1C,WAAW,yBACZ,GAAG,CAAC,IAAI,KACX,eAAe,iBAAA,GAChB,CAAC;oBAEI,aAAa,GAAG,gCAAgC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;oBACvD,qBAAM,OAAO,CAAC,0BAA0B,CAAC,aAAa,CAAC,EAAA;;oBAApE,UAAU,GAAG,SAAuD;oBAC1E,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;;;oBAEjC,IAAI,OAAK,YAAY,CAAC,CAAC,QAAQ,EAAE,CAAC;wBAChC,sBAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,OAAO,EAAE,OAAK,CAAC,MAAM,EAAE,CAAC,EAAC;oBACrF,CAAC;oBACD,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,OAAK,CAAC,CAAC;oBAChD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,0BAA0B,EAAE,CAAC,CAAC;;;;;SAE/D,CAAC,CAAC;IAEH,uCAAuC;IACvC,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,UAAO,GAAG,EAAE,GAAG;;;;;;oBAEpC,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBAC5B,qBAAM,OAAO,CAAC,2BAA2B,CAAC,eAAe,CAAC,EAAA;;oBAAxE,WAAW,GAAG,SAA0D;oBAC9E,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;;;oBAEtB,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,OAAK,CAAC,CAAC;oBACpD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,6BAA6B,EAAE,CAAC,CAAC;;;;;SAElE,CAAC,CAAC;IAEH,mCAAmC;IACnC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,UAAO,GAAG,EAAE,GAAG;;;;;;oBAErC,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBAC1C,cAAc,yBACf,GAAG,CAAC,IAAI,KACX,eAAe,iBAAA,GAChB,CAAC;oBAEI,aAAa,GAAG,mCAAmC,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;oBAC1D,qBAAM,OAAO,CAAC,6BAA6B,CAAC,aAAa,CAAC,EAAA;;oBAA1E,aAAa,GAAG,SAA0D;oBAChF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;;;;oBAEpC,IAAI,OAAK,YAAY,CAAC,CAAC,QAAQ,EAAE,CAAC;wBAChC,sBAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,OAAO,EAAE,OAAK,CAAC,MAAM,EAAE,CAAC,EAAC;oBACrF,CAAC;oBACD,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,OAAK,CAAC,CAAC;oBACnD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,6BAA6B,EAAE,CAAC,CAAC;;;;;SAElE,CAAC,CAAC;IAEH,2BAA2B;IAC3B,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,UAAO,GAAG,EAAE,GAAG;;;;;;oBAEhC,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBAC7B,KAA0B,GAAG,CAAC,IAAI,EAAhC,OAAO,aAAA,EAAE,UAAU,gBAAA,CAAc;oBAEzC,IAAI,CAAC,OAAO,EAAE,CAAC;wBACb,sBAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,kCAAkC,EAAE,CAAC,EAAC;oBAC7E,CAAC;oBAEe,qBAAM,OAAO,CAAC,oBAAoB,CAChD,EAAE,EACF,UAAU,IAAI,UAAU,EACxB,OAAO,CACR,EAAA;;oBAJK,OAAO,GAAG,SAIf;oBACD,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;;;oBAElB,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,OAAK,CAAC,CAAC;oBACxD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAK,CAAC,OAAO,IAAI,kCAAkC,EAAE,CAAC,CAAC;;;;;SAExF,CAAC,CAAC;IAEH,4BAA4B;IAC5B,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,UAAO,GAAG,EAAE,GAAG;;;;;;oBAE/B,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBAC7B,KAA0B,GAAG,CAAC,IAAI,EAAhC,OAAO,aAAA,EAAE,UAAU,gBAAA,CAAc;oBAEzC,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,EAAE,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;oBAEvE,IAAI,CAAC,OAAO,EAAE,CAAC;wBACb,sBAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,mCAAmC,EAAE,CAAC,EAAC;oBAC9E,CAAC;oBAEe,qBAAM,OAAO,CAAC,mBAAmB,CAC/C,EAAE,EACF,UAAU,IAAI,UAAU,EACxB,OAAO,CACR,EAAA;;oBAJK,OAAO,GAAG,SAIf;oBACD,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,OAAO,CAAC,CAAC;oBACvD,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;;;oBAElB,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,QAAK,CAAC,CAAC;oBACxD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAK,CAAC,OAAO,IAAI,iCAAiC,EAAE,CAAC,CAAC;;;;;SAEvF,CAAC,CAAC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["import { Router } from \"express\";\nimport { z } from \"zod\";\nimport type { IStorage } from \"../storage\";\nimport { insertChangeRequestSchema, insertChangeRequestCommentSchema, insertChangeRequestAttachmentSchema } from \"@shared/schema\";\n\nexport default function createChangeRequestsRouter(storage: IStorage) {\n  const router = Router();\n\n// Get all change requests with filtering\nrouter.get(\"/\", async (req, res) => {\n  try {\n    const { vesselId, status, category, requestedBy } = req.query;\n    \n    let requests = await storage.getChangeRequests({ vesselId: vesselId as string });\n    \n    // Apply filters\n    if (status) {\n      requests = requests.filter(r => r.status === status);\n    }\n    if (category) {\n      requests = requests.filter(r => r.category === category);\n    }\n    if (requestedBy) {\n      requests = requests.filter(r => r.requestedByUserId === requestedBy);\n    }\n    \n    // Sort by most recent first\n    requests.sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());\n    \n    res.json(requests);\n  } catch (error) {\n    console.error(\"Error fetching change requests:\", error);\n    res.status(500).json({ error: \"Failed to fetch change requests\" });\n  }\n});\n\n// Get a specific change request by ID\nrouter.get(\"/:id\", async (req, res) => {\n  try {\n    const id = parseInt(req.params.id);\n    const request = await storage.getChangeRequest(id);\n    \n    if (!request) {\n      return res.status(404).json({ error: \"Change request not found\" });\n    }\n    \n    res.json(request);\n  } catch (error) {\n    console.error(\"Error fetching change request:\", error);\n    res.status(500).json({ error: \"Failed to fetch change request\" });\n  }\n});\n\n// Create a new change request\nrouter.post(\"/\", async (req, res) => {\n  try {\n    const validatedData = insertChangeRequestSchema.parse(req.body);\n    \n    // Add default values\n    const requestData = {\n      ...validatedData,\n      vesselId: validatedData.vesselId || 'V001',\n      status: validatedData.status || 'draft' as const,\n      requestedByUserId: validatedData.requestedByUserId || 'system'\n    };\n    \n    const newRequest = await storage.createChangeRequest(requestData);\n    res.status(201).json(newRequest);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({ error: \"Validation failed\", details: error.errors });\n    }\n    console.error(\"Error creating change request:\", error);\n    res.status(500).json({ error: \"Failed to create change request\" });\n  }\n});\n\n// Update change request status\nrouter.patch(\"/:id/status\", async (req, res) => {\n  try {\n    const id = parseInt(req.params.id);\n    const { status, reviewedByUserId, reviewComments } = req.body;\n    \n    if (!['draft', 'submitted', 'returned', 'approved', 'rejected'].includes(status)) {\n      return res.status(400).json({ error: \"Invalid status\" });\n    }\n    \n    const updatedRequest = await storage.updateChangeRequest(id, { \n      status, \n      reviewedByUserId, \n      reviewedAt: new Date()\n    });\n    res.json(updatedRequest);\n  } catch (error) {\n    console.error(\"Error updating change request status:\", error);\n    res.status(500).json({ error: \"Failed to update change request status\" });\n  }\n});\n\n// Get comments for a change request\nrouter.get(\"/:id/comments\", async (req, res) => {\n  try {\n    const changeRequestId = parseInt(req.params.id);\n    const comments = await storage.getChangeRequestComments(changeRequestId);\n    res.json(comments);\n  } catch (error) {\n    console.error(\"Error fetching comments:\", error);\n    res.status(500).json({ error: \"Failed to fetch comments\" });\n  }\n});\n\n// Add comment to change request\nrouter.post(\"/:id/comments\", async (req, res) => {\n  try {\n    const changeRequestId = parseInt(req.params.id);\n    const commentData = {\n      ...req.body,\n      changeRequestId\n    };\n    \n    const validatedData = insertChangeRequestCommentSchema.parse(commentData);\n    const newComment = await storage.createChangeRequestComment(validatedData);\n    res.status(201).json(newComment);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({ error: \"Validation failed\", details: error.errors });\n    }\n    console.error(\"Error creating comment:\", error);\n    res.status(500).json({ error: \"Failed to create comment\" });\n  }\n});\n\n// Get attachments for a change request\nrouter.get(\"/:id/attachments\", async (req, res) => {\n  try {\n    const changeRequestId = parseInt(req.params.id);\n    const attachments = await storage.getChangeRequestAttachments(changeRequestId);\n    res.json(attachments);\n  } catch (error) {\n    console.error(\"Error fetching attachments:\", error);\n    res.status(500).json({ error: \"Failed to fetch attachments\" });\n  }\n});\n\n// Add attachment to change request\nrouter.post(\"/:id/attachments\", async (req, res) => {\n  try {\n    const changeRequestId = parseInt(req.params.id);\n    const attachmentData = {\n      ...req.body,\n      changeRequestId\n    };\n    \n    const validatedData = insertChangeRequestAttachmentSchema.parse(attachmentData);\n    const newAttachment = await storage.createChangeRequestAttachment(validatedData);\n    res.status(201).json(newAttachment);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({ error: \"Validation failed\", details: error.errors });\n    }\n    console.error(\"Error creating attachment:\", error);\n    res.status(500).json({ error: \"Failed to create attachment\" });\n  }\n});\n\n// Approve a change request\nrouter.put(\"/:id/approve\", async (req, res) => {\n  try {\n    const id = parseInt(req.params.id);\n    const { comment, reviewerId } = req.body;\n    \n    if (!comment) {\n      return res.status(400).json({ error: \"Comment is required for approval\" });\n    }\n    \n    const updated = await storage.approveChangeRequest(\n      id, \n      reviewerId || 'reviewer', \n      comment\n    );\n    res.json(updated);\n  } catch (error: any) {\n    console.error('Error approving change request:', error);\n    res.status(500).json({ error: error.message || 'Failed to approve change request' });\n  }\n});\n\n// Reject a change request  \nrouter.put(\"/:id/reject\", async (req, res) => {\n  try {\n    const id = parseInt(req.params.id);\n    const { comment, reviewerId } = req.body;\n    \n    console.log('Rejecting change request:', id, 'with comment:', comment);\n    \n    if (!comment) {\n      return res.status(400).json({ error: \"Comment is required for rejection\" });\n    }\n    \n    const updated = await storage.rejectChangeRequest(\n      id, \n      reviewerId || 'reviewer', \n      comment\n    );\n    console.log('Successfully rejected request:', updated);\n    res.json(updated);\n  } catch (error: any) {\n    console.error('Error rejecting change request:', error);\n    res.status(500).json({ error: error.message || 'Failed to reject change request' });\n  }\n});\n\n  return router;\n}"]}