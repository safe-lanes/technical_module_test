{"version":3,"file":"errorHandler.js","sourceRoot":"","sources":["errorHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport { ZodError } from 'zod';\nimport { AppError, DatabaseError, ValidationError } from '../utils/errors';\nimport { logger } from './logger';\n\nexport interface ErrorResponse {\n  success: false;\n  error: {\n    message: string;\n    code?: string;\n    status: number;\n    details?: any;\n    stack?: string;\n  };\n}\n\nconst isDevelopment = process.env.NODE_ENV === 'development';\n\n// Async error wrapper for route handlers\nexport const asyncHandler = (fn: Function) => {\n  return (req: Request, res: Response, next: NextFunction) => {\n    Promise.resolve(fn(req, res, next)).catch(next);\n  };\n};\n\n// Global error handler middleware\nexport const globalErrorHandler = (\n  err: Error,\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  let error = err;\n\n  // Log the error\n  const errorLog = {\n    message: error.message,\n    stack: error.stack,\n    url: req.originalUrl,\n    method: req.method,\n    ip: req.ip,\n    userAgent: req.get('User-Agent'),\n    timestamp: new Date().toISOString(),\n  };\n\n  if (error instanceof AppError && error.isOperational) {\n    logger.warn('Operational Error', errorLog);\n  } else {\n    logger.error('System Error', errorLog);\n  }\n\n  // Handle different error types\n  if (error instanceof ZodError) {\n    const validationErrors = error.errors.map(err => ({\n      field: err.path.join('.'),\n      message: err.message,\n      code: err.code,\n    }));\n\n    error = new ValidationError('Validation failed');\n    (error as any).details = validationErrors;\n  }\n\n  // Handle database errors\n  if (error.name === 'ER_DUP_ENTRY' || error.message.includes('duplicate')) {\n    error = new DatabaseError('Duplicate entry found');\n  }\n\n  if (\n    error.name === 'ER_NO_REFERENCED_ROW' ||\n    error.message.includes('foreign key')\n  ) {\n    error = new DatabaseError('Referenced record not found');\n  }\n\n  // Default to 500 server error\n  if (!(error instanceof AppError)) {\n    error = new AppError('Something went wrong', 500, false);\n  }\n\n  const appError = error as AppError;\n  const statusCode = appError.statusCode || 500;\n\n  const errorResponse: ErrorResponse = {\n    success: false,\n    error: {\n      message: appError.message,\n      code: appError.code,\n      status: statusCode,\n      ...(isDevelopment && { stack: appError.stack }),\n      ...((appError as any).details && { details: (appError as any).details }),\n    },\n  };\n\n  res.status(statusCode).json(errorResponse);\n};\n\n// 404 handler for unmatched routes\nexport const notFoundHandler = (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  const error = new AppError(`Route ${req.originalUrl} not found`, 404);\n  next(error);\n};\n"]}