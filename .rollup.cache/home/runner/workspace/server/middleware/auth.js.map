{"version":3,"file":"auth.js","sourceRoot":"","sources":["auth.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport jwt from 'jsonwebtoken';\nimport { AuthenticationError, AuthorizationError } from '../utils/errors';\nimport { JWTPayload, Permission, UserRole } from '../../shared/types/auth';\nimport { logger } from './logger';\n\nconst JWT_SECRET = process.env.JWT_SECRET || 'maritime-pms-dev-secret-key';\nconst JWT_EXPIRES_IN = process.env.JWT_EXPIRES_IN || '24h';\n\n// Extend Express Request to include user\ndeclare global {\n  namespace Express {\n    interface Request {\n      user?: JWTPayload;\n    }\n  }\n}\n\n// Mock user data for development\nconst mockUsers = new Map([\n  ['admin', {\n    id: 'user-admin',\n    username: 'admin',\n    role: UserRole.ADMIN,\n    permissions: Object.values(Permission),\n    vesselId: 'MV Test Vessel'\n  }],\n  ['master', {\n    id: 'user-master',\n    username: 'master',\n    role: UserRole.MASTER,\n    permissions: [\n      Permission.COMPONENTS_READ,\n      Permission.COMPONENTS_WRITE,\n      Permission.WORK_ORDERS_READ,\n      Permission.WORK_ORDERS_WRITE,\n      Permission.WORK_ORDERS_APPROVE,\n      Permission.SPARES_READ,\n      Permission.SPARES_WRITE,\n      Permission.SPARES_CONSUME,\n      Permission.RUNNING_HOURS_READ,\n      Permission.RUNNING_HOURS_WRITE,\n      Permission.REPORTS_READ,\n      Permission.REPORTS_GENERATE,\n      Permission.CHANGE_REQUESTS_READ,\n      Permission.CHANGE_REQUESTS_WRITE,\n      Permission.CHANGE_REQUESTS_APPROVE\n    ],\n    vesselId: 'MV Test Vessel'\n  }],\n  ['officer', {\n    id: 'user-officer',\n    username: 'officer',\n    role: UserRole.OFFICER,\n    permissions: [\n      Permission.COMPONENTS_READ,\n      Permission.WORK_ORDERS_READ,\n      Permission.WORK_ORDERS_WRITE,\n      Permission.SPARES_READ,\n      Permission.SPARES_WRITE,\n      Permission.RUNNING_HOURS_READ,\n      Permission.RUNNING_HOURS_WRITE,\n      Permission.REPORTS_READ,\n      Permission.CHANGE_REQUESTS_READ,\n      Permission.CHANGE_REQUESTS_WRITE\n    ],\n    vesselId: 'MV Test Vessel'\n  }]\n]);\n\nexport const generateToken = (payload: Omit<JWTPayload, 'iat' | 'exp'>): string => {\n  return jwt.sign(payload, JWT_SECRET, { expiresIn: JWT_EXPIRES_IN });\n};\n\nexport const verifyToken = (token: string): JWTPayload => {\n  try {\n    return jwt.verify(token, JWT_SECRET) as JWTPayload;\n  } catch (error) {\n    throw new AuthenticationError('Invalid or expired token');\n  }\n};\n\n// Mock authentication function\nexport const authenticateUser = async (username: string, password: string) => {\n  // In production, this would verify against database\n  if (!mockUsers.has(username)) {\n    throw new AuthenticationError('Invalid credentials');\n  }\n\n  // Mock password check (in production, use proper password hashing)\n  if (password !== 'password123') {\n    throw new AuthenticationError('Invalid credentials');\n  }\n\n  const user = mockUsers.get(username)!;\n  const token = generateToken({\n    userId: user.id,\n    username: user.username,\n    role: user.role,\n    permissions: user.permissions,\n    vesselId: user.vesselId\n  });\n\n  return {\n    user: {\n      ...user,\n      token,\n      refreshToken: generateToken({ userId: user.id, username: user.username, role: user.role, permissions: [], vesselId: user.vesselId })\n    },\n    token\n  };\n};\n\n// Authentication middleware\nexport const requireAuth = (req: Request, res: Response, next: NextFunction) => {\n  try {\n    const authHeader = req.headers.authorization;\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      throw new AuthenticationError('No valid authorization header found');\n    }\n\n    const token = authHeader.substring(7);\n    const payload = verifyToken(token);\n    \n    req.user = payload;\n    \n    logger.info('User authenticated', {\n      userId: payload.userId,\n      username: payload.username,\n      role: payload.role\n    });\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n};\n\n// Authorization middleware factory\nexport const requirePermission = (...requiredPermissions: Permission[]) => {\n  return (req: Request, res: Response, next: NextFunction) => {\n    if (!req.user) {\n      return next(new AuthenticationError('User not authenticated'));\n    }\n\n    const hasPermission = requiredPermissions.every(permission =>\n      req.user!.permissions.includes(permission)\n    );\n\n    if (!hasPermission) {\n      return next(new AuthorizationError('Insufficient permissions'));\n    }\n\n    next();\n  };\n};\n\n// Role-based authorization\nexport const requireRole = (...allowedRoles: UserRole[]) => {\n  return (req: Request, res: Response, next: NextFunction) => {\n    if (!req.user) {\n      return next(new AuthenticationError('User not authenticated'));\n    }\n\n    if (!allowedRoles.includes(req.user.role)) {\n      return next(new AuthorizationError(`Role ${req.user.role} not authorized`));\n    }\n\n    next();\n  };\n};\n\n// Optional authentication (doesn't fail if no token)\nexport const optionalAuth = (req: Request, res: Response, next: NextFunction) => {\n  try {\n    const authHeader = req.headers.authorization;\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      const token = authHeader.substring(7);\n      req.user = verifyToken(token);\n    }\n    next();\n  } catch (error) {\n    // Ignore authentication errors for optional auth\n    next();\n  }\n};"]}