{"version":3,"file":"use-toast.js","sourceRoot":"","sources":["use-toast.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"]}