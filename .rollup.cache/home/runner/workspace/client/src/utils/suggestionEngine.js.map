{"version":3,"file":"suggestionEngine.js","sourceRoot":"","sources":["suggestionEngine.ts"],"names":[],"mappings":"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","sourcesContent":["// Smart Suggestions Engine for Work Order Form\n// Generates context-aware suggestions based on work order details\n\nexport interface WorkOrderContext {\n  jobTitle?: string;\n  component?: string;\n  componentCategory?: string;\n  maintenanceType?: string;\n  frequency?: string;\n  performedBy?: string;\n  assignedTo?: string;\n  teamSize?: string;\n  startDateTime?: string;\n  completionDateTime?: string;\n}\n\nexport interface SuggestionTemplate {\n  id: string;\n  category: string;\n  maintenanceType?: string;\n  componentCategory?: string;\n  keywords?: string[];\n  template: string;\n  priority: number;\n}\n\n// Template Bank - predefined templates with token placeholders\nconst TEMPLATE_BANK: SuggestionTemplate[] = [\n  // Generic / Any\n  {\n    id: \"generic-1\",\n    category: \"generic\",\n    template: \"{{jobTitle}} carried out on {{component}}; function tested and found satisfactory.\",\n    priority: 5\n  },\n  {\n    id: \"generic-2\", \n    category: \"generic\",\n    template: \"Routine maintenance performed as per PMS; equipment restored to normal.\",\n    priority: 4\n  },\n  {\n    id: \"generic-3\",\n    category: \"generic\", \n    template: \"Post-work trials completed; performance observed satisfactory.\",\n    priority: 3\n  },\n  {\n    id: \"generic-4\",\n    category: \"generic\",\n    template: \"Work completed on {{component}}; system tested and operational.\",\n    priority: 4\n  },\n  \n  // Running Hours\n  {\n    id: \"rh-1\",\n    category: \"running_hours\",\n    maintenanceType: \"Running Hours\",\n    template: \"Scheduled RH maintenance completed at {{frequency}} hrs; checks done as per instruction; no abnormalities noted.\",\n    priority: 8\n  },\n  {\n    id: \"rh-2\",\n    category: \"running_hours\", \n    maintenanceType: \"Running Hours\",\n    template: \"{{frequency}} hour maintenance executed on {{component}}; operational parameters within limits.\",\n    priority: 7\n  },\n  \n  // Calendar\n  {\n    id: \"cal-1\",\n    category: \"calendar\",\n    maintenanceType: \"Calendar\",\n    template: \"Calendar-based maintenance executed; visual/functional tests satisfactory.\",\n    priority: 7\n  },\n  {\n    id: \"cal-2\",\n    category: \"calendar\",\n    maintenanceType: \"Calendar\", \n    template: \"Scheduled maintenance carried out as per calendar; {{component}} operating normally.\",\n    priority: 6\n  },\n  \n  // Safety / Alarms\n  {\n    id: \"alarm-1\",\n    category: \"safety\",\n    keywords: [\"alarm\", \"safety\", \"emergency\", \"warning\"],\n    template: \"Alarm system tested as per checklist; all alarms functional; results satisfactory.\",\n    priority: 8\n  },\n  {\n    id: \"alarm-2\",\n    category: \"safety\",\n    keywords: [\"alarm\", \"safety\", \"emergency\", \"warning\"],\n    template: \"Safety checks performed on {{component}}; all safety devices operational.\",\n    priority: 7\n  },\n  \n  // Lubrication\n  {\n    id: \"lub-1\",\n    category: \"lubrication\",\n    keywords: [\"lubrication\", \"grease\", \"oil\", \"bearing\", \"lube\"],\n    template: \"Lubrication/greasing carried out at specified points; parameters within normal limits.\",\n    priority: 8\n  },\n  {\n    id: \"lub-2\",\n    category: \"lubrication\",\n    keywords: [\"lubrication\", \"grease\", \"oil\", \"bearing\", \"lube\"],\n    template: \"{{component}} lubricated as per schedule; oil levels checked and topped up.\",\n    priority: 7\n  },\n  \n  // Electrical\n  {\n    id: \"elec-1\",\n    category: \"electrical\",\n    keywords: [\"electrical\", \"motor\", \"generator\", \"panel\", \"cable\", \"switch\"],\n    template: \"Electrical checks performed on {{component}}; insulation/continuity within acceptable range.\",\n    priority: 8\n  },\n  {\n    id: \"elec-2\",\n    category: \"electrical\",\n    keywords: [\"electrical\", \"motor\", \"generator\", \"panel\", \"cable\", \"switch\"],\n    template: \"Electrical connections inspected; voltage/current readings normal; no loose connections found.\",\n    priority: 7\n  },\n  \n  // Pumps/Rotating Equipment\n  {\n    id: \"pump-1\",\n    category: \"rotating\",\n    keywords: [\"pump\", \"compressor\", \"fan\", \"blower\", \"rotating\"],\n    template: \"Operational checks done on {{component}}; vibration/temperature within limits; no leaks observed.\",\n    priority: 8\n  },\n  {\n    id: \"pump-2\",\n    category: \"rotating\",\n    keywords: [\"pump\", \"compressor\", \"fan\", \"blower\", \"rotating\"],\n    template: \"{{component}} performance tested; flow/pressure parameters satisfactory.\",\n    priority: 7\n  },\n  \n  // Valves\n  {\n    id: \"valve-1\",\n    category: \"valve\",\n    keywords: [\"valve\", \"actuator\", \"control\"],\n    template: \"{{component}} operation tested; opening/closing smooth; no leakage observed.\",\n    priority: 8\n  },\n  \n  // Filters\n  {\n    id: \"filter-1\",\n    category: \"filter\",\n    keywords: [\"filter\", \"strainer\", \"separator\"],\n    template: \"{{component}} inspected/cleaned; differential pressure normal; no blockages found.\",\n    priority: 8\n  }\n];\n\n// Token replacement function\nfunction replaceTokens(template: string, context: WorkOrderContext): string {\n  let result = template;\n  \n  // Replace all tokens with context values\n  const tokens = {\n    '{{component}}': context.component || '',\n    '{{componentCategory}}': context.componentCategory || '',\n    '{{jobTitle}}': context.jobTitle || '',\n    '{{maintenanceType}}': context.maintenanceType || '',\n    '{{frequency}}': context.frequency || '',\n    '{{performedBy}}': context.performedBy || '',\n    '{{assignedTo}}': context.assignedTo || '',\n    '{{teamSize}}': context.teamSize || '',\n    '{{startDateTime}}': context.startDateTime || '',\n    '{{completionDateTime}}': context.completionDateTime || ''\n  };\n  \n  // Replace tokens\n  Object.entries(tokens).forEach(([token, value]) => {\n    result = result.replace(new RegExp(token.replace(/[{}]/g, '\\\\$&'), 'g'), value);\n  });\n  \n  // Clean up empty phrases (graceful degradation)\n  // Remove phrases like \"at  hrs\" when frequency is missing\n  result = result.replace(/\\s+at\\s+hrs/g, '');\n  result = result.replace(/\\s+on\\s+;/g, ';');\n  result = result.replace(/;\\s*;/g, ';');\n  result = result.replace(/\\s{2,}/g, ' ');\n  result = result.trim();\n  \n  return result;\n}\n\n// Keyword matching scoring\nfunction calculateKeywordScore(template: SuggestionTemplate, context: WorkOrderContext): number {\n  let score = 0;\n  \n  if (!template.keywords) return 0;\n  \n  const searchText = [\n    context.jobTitle,\n    context.component,\n    context.componentCategory\n  ].filter(Boolean).join(' ').toLowerCase();\n  \n  template.keywords.forEach(keyword => {\n    if (searchText.includes(keyword.toLowerCase())) {\n      score += 2;\n    }\n  });\n  \n  return score;\n}\n\n// Main suggestion generation function\nexport function generateSuggestions(context: WorkOrderContext): string[] {\n  const suggestions: { text: string; score: number }[] = [];\n  \n  // Process each template\n  TEMPLATE_BANK.forEach(template => {\n    let score = template.priority;\n    \n    // Boost score for maintenance type match\n    if (template.maintenanceType && context.maintenanceType === template.maintenanceType) {\n      score += 10;\n    }\n    \n    // Boost score for keyword matches\n    score += calculateKeywordScore(template, context);\n    \n    // Only include if score is meaningful\n    if (score > 2) {\n      const processedText = replaceTokens(template.template, context);\n      \n      // Only add if text is meaningful (not mostly empty after token replacement)\n      if (processedText.length > 20) {\n        suggestions.push({\n          text: processedText,\n          score: score\n        });\n      }\n    }\n  });\n  \n  // Sort by score (highest first) and return top 5\n  return suggestions\n    .sort((a, b) => b.score - a.score)\n    .slice(0, 5)\n    .map(s => s.text);\n}\n\n// Extract context from work order form data\nexport function extractContextFromWorkOrder(workOrder: any, executionData: any): WorkOrderContext {\n  return {\n    jobTitle: workOrder?.job_title || workOrder?.jobTitle,\n    component: workOrder?.component_name || workOrder?.componentName,\n    componentCategory: workOrder?.component_category || workOrder?.componentCategory,\n    maintenanceType: workOrder?.maintenance_basis || workOrder?.maintenanceBasis,\n    frequency: workOrder?.frequency_value?.toString() || workOrder?.frequencyValue?.toString(),\n    performedBy: executionData?.performedBy,\n    assignedTo: executionData?.assignedTo,\n    teamSize: executionData?.noOfPersons,\n    startDateTime: executionData?.startDateTime,\n    completionDateTime: executionData?.completionDateTime\n  };\n}"]}