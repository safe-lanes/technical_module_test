{"version":3,"file":"formEditorGenerator.js","sourceRoot":"","sources":["formEditorGenerator.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AA8BxB,4BAA4B;AAC5B,MAAM,CAAC,IAAM,aAAa,GAAiC;IACzD,qBAAqB,EAAE;QACrB,IAAI,EAAE,qBAAqB;QAC3B,QAAQ,EAAE;YACR;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,uBAAuB;gBAC9B,WAAW,EAAE,0CAA0C;gBACvD,MAAM,EAAE;oBACN;wBACE,EAAE,EAAE,eAAe;wBACnB,IAAI,EAAE,MAAM;wBACZ,KAAK,EAAE,gBAAgB;wBACvB,WAAW,EAAE,iBAAiB;wBAC9B,QAAQ,EAAE,IAAI;wBACd,YAAY,EAAE,KAAK;wBACnB,OAAO,EAAE,IAAI;qBACd;oBACD;wBACE,EAAE,EAAE,aAAa;wBACjB,IAAI,EAAE,QAAQ;wBACd,KAAK,EAAE,cAAc;wBACrB,QAAQ,EAAE,IAAI;wBACd,OAAO,EAAE,CAAC,eAAe,EAAE,gBAAgB,EAAE,eAAe,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,gBAAgB,CAAC;wBACpH,YAAY,EAAE,IAAI;wBAClB,OAAO,EAAE,IAAI;qBACd;oBACD;wBACE,EAAE,EAAE,cAAc;wBAClB,IAAI,EAAE,QAAQ;wBACd,KAAK,EAAE,eAAe;wBACtB,QAAQ,EAAE,IAAI;wBACd,OAAO,EAAE,CAAC,gBAAgB,EAAE,eAAe,EAAE,QAAQ,EAAE,iBAAiB,EAAE,gBAAgB,CAAC;wBAC3F,YAAY,EAAE,IAAI;wBAClB,OAAO,EAAE,IAAI;qBACd;oBACD;wBACE,EAAE,EAAE,QAAQ;wBACZ,IAAI,EAAE,QAAQ;wBACd,KAAK,EAAE,gBAAgB;wBACvB,QAAQ,EAAE,IAAI;wBACd,OAAO,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,eAAe,CAAC;wBACzE,YAAY,EAAE,KAAK;wBACnB,OAAO,EAAE,IAAI;qBACd;oBACD;wBACE,EAAE,EAAE,UAAU;wBACd,IAAI,EAAE,MAAM;wBACZ,KAAK,EAAE,0BAA0B;wBACjC,QAAQ,EAAE,IAAI;wBACd,YAAY,EAAE,KAAK;wBACnB,OAAO,EAAE,IAAI;qBACd;iBACF;aACF;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,0BAA0B;gBACjC,WAAW,EAAE,kDAAkD;gBAC/D,MAAM,EAAE;oBACN;wBACE,EAAE,EAAE,gBAAgB;wBACpB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,+BAA+B;wBACtC,QAAQ,EAAE,IAAI;wBACd,YAAY,EAAE,IAAI;wBAClB,OAAO,EAAE,IAAI;qBACd;oBACD;wBACE,EAAE,EAAE,YAAY;wBAChB,IAAI,EAAE,UAAU;wBAChB,KAAK,EAAE,qBAAqB;wBAC5B,WAAW,EAAE,iCAAiC;wBAC9C,QAAQ,EAAE,IAAI;wBACd,YAAY,EAAE,KAAK;wBACnB,OAAO,EAAE,IAAI;qBACd;oBACD;wBACE,EAAE,EAAE,mBAAmB;wBACvB,IAAI,EAAE,QAAQ;wBACd,KAAK,EAAE,4BAA4B;wBACnC,QAAQ,EAAE,IAAI;wBACd,OAAO,EAAE,CAAC,cAAc,EAAE,cAAc,EAAE,SAAS,EAAE,iBAAiB,EAAE,sBAAsB,CAAC;wBAC/F,YAAY,EAAE,IAAI;wBAClB,OAAO,EAAE,IAAI;qBACd;iBACF;aACF;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,2BAA2B;gBAClC,WAAW,EAAE,2CAA2C;gBACxD,MAAM,EAAE;oBACN;wBACE,EAAE,EAAE,gBAAgB;wBACpB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,0BAA0B;wBACjC,QAAQ,EAAE,IAAI;wBACd,OAAO,EAAE,CAAC,sBAAsB,EAAE,aAAa,EAAE,iBAAiB,CAAC;wBACnE,YAAY,EAAE,KAAK;wBACnB,OAAO,EAAE,IAAI;qBACd;oBACD;wBACE,EAAE,EAAE,UAAU;wBACd,IAAI,EAAE,UAAU;wBAChB,KAAK,EAAE,qBAAqB;wBAC5B,WAAW,EAAE,gCAAgC;wBAC7C,QAAQ,EAAE,KAAK;wBACf,YAAY,EAAE,KAAK;wBACnB,OAAO,EAAE,IAAI;qBACd;oBACD;wBACE,EAAE,EAAE,cAAc;wBAClB,IAAI,EAAE,MAAM;wBACZ,KAAK,EAAE,eAAe;wBACtB,QAAQ,EAAE,IAAI;wBACd,YAAY,EAAE,KAAK;wBACnB,OAAO,EAAE,IAAI;qBACd;oBACD;wBACE,EAAE,EAAE,cAAc;wBAClB,IAAI,EAAE,MAAM;wBACZ,KAAK,EAAE,eAAe;wBACtB,QAAQ,EAAE,IAAI;wBACd,YAAY,EAAE,KAAK;wBACnB,OAAO,EAAE,IAAI;qBACd;iBACF;aACF;SACF;QACD,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC;YACf,aAAa,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,4BAA4B,CAAC;YAC9D,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,0BAA0B,CAAC;YAC1D,YAAY,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,2BAA2B,CAAC;YAC5D,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,oBAAoB,CAAC;YAC/C,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,uBAAuB,CAAC;YACpD,cAAc,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;gBAC/B,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE;gBACd,aAAa,EAAE,CAAC,CAAC,MAAM,EAAE;gBACzB,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE;gBACrB,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE;gBACtB,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE;aACnB,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;YACf,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,wBAAwB,CAAC;YACvD,iBAAiB,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,gCAAgC,CAAC;YACtE,cAAc,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,4BAA4B,CAAC;YAC/D,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;YAC/B,YAAY,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,2BAA2B,CAAC;YAC5D,YAAY,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,2BAA2B,CAAC;SAC7D,CAAC;KACH;IAED,oBAAoB,EAAE;QACpB,IAAI,EAAE,oBAAoB;QAC1B,QAAQ,EAAE;YACR;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,kBAAkB;gBACzB,WAAW,EAAE,mCAAmC;gBAChD,MAAM,EAAE;oBACN;wBACE,EAAE,EAAE,cAAc;wBAClB,IAAI,EAAE,MAAM;wBACZ,KAAK,EAAE,sBAAsB;wBAC7B,QAAQ,EAAE,IAAI;wBACd,YAAY,EAAE,KAAK;wBACnB,OAAO,EAAE,IAAI;qBACd;oBACD;wBACE,EAAE,EAAE,kBAAkB;wBACtB,IAAI,EAAE,MAAM;wBACZ,KAAK,EAAE,mBAAmB;wBAC1B,QAAQ,EAAE,IAAI;wBACd,YAAY,EAAE,KAAK;wBACnB,OAAO,EAAE,IAAI;qBACd;oBACD;wBACE,EAAE,EAAE,cAAc;wBAClB,IAAI,EAAE,QAAQ;wBACd,KAAK,EAAE,eAAe;wBACtB,QAAQ,EAAE,IAAI;wBACd,OAAO,EAAE,CAAC,MAAM,EAAE,kBAAkB,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,CAAC;wBAC1E,YAAY,EAAE,IAAI;wBAClB,OAAO,EAAE,IAAI;qBACd;oBACD;wBACE,EAAE,EAAE,WAAW;wBACf,IAAI,EAAE,MAAM;wBACZ,KAAK,EAAE,YAAY;wBACnB,QAAQ,EAAE,IAAI;wBACd,YAAY,EAAE,KAAK;wBACnB,OAAO,EAAE,IAAI;qBACd;oBACD;wBACE,EAAE,EAAE,SAAS;wBACb,IAAI,EAAE,MAAM;wBACZ,KAAK,EAAE,UAAU;wBACjB,QAAQ,EAAE,IAAI;wBACd,YAAY,EAAE,KAAK;wBACnB,OAAO,EAAE,IAAI;qBACd;iBACF;aACF;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,yBAAyB;gBAChC,WAAW,EAAE,kCAAkC;gBAC/C,MAAM,EAAE;oBACN;wBACE,EAAE,EAAE,cAAc;wBAClB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,uBAAuB;wBAC9B,QAAQ,EAAE,IAAI;wBACd,YAAY,EAAE,IAAI;wBAClB,OAAO,EAAE,IAAI;qBACd;iBACF;aACF;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,kBAAkB;gBACzB,WAAW,EAAE,qCAAqC;gBAClD,MAAM,EAAE;oBACN;wBACE,EAAE,EAAE,kBAAkB;wBACtB,IAAI,EAAE,QAAQ;wBACd,KAAK,EAAE,mBAAmB;wBAC1B,QAAQ,EAAE,IAAI;wBACd,OAAO,EAAE,CAAC,WAAW,EAAE,aAAa,EAAE,QAAQ,EAAE,WAAW,CAAC;wBAC5D,YAAY,EAAE,IAAI;wBAClB,OAAO,EAAE,IAAI;qBACd;oBACD;wBACE,EAAE,EAAE,mBAAmB;wBACvB,IAAI,EAAE,UAAU;wBAChB,KAAK,EAAE,oBAAoB;wBAC3B,QAAQ,EAAE,KAAK;wBACf,YAAY,EAAE,KAAK;wBACnB,OAAO,EAAE,IAAI;qBACd;oBACD;wBACE,EAAE,EAAE,SAAS;wBACb,IAAI,EAAE,UAAU;wBAChB,KAAK,EAAE,kBAAkB;wBACzB,WAAW,EAAE,yBAAyB;wBACtC,QAAQ,EAAE,KAAK;wBACf,YAAY,EAAE,KAAK;wBACnB,OAAO,EAAE,IAAI;qBACd;iBACF;aACF;SACF;QACD,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC;YACf,YAAY,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,2BAA2B,CAAC;YAC5D,gBAAgB,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,+BAA+B,CAAC;YACpE,YAAY,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,2BAA2B,CAAC;YAC5D,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,wBAAwB,CAAC;YACtD,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,sBAAsB,CAAC;YAClD,YAAY,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;gBAC7B,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE;gBACd,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE;gBAChB,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE;gBAChB,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE;aACnB,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;YACf,gBAAgB,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,+BAA+B,CAAC;YACpE,iBAAiB,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;YAC7C,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;SAC/B,CAAC;KACH;CACF,CAAC;AAEF,6CAA6C;AAC7C,MAAM,CAAC,IAAM,kBAAkB,GAAG,UAAC,QAAgB;IACjD,IAAM,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;IACzC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACd,MAAM,IAAI,KAAK,CAAC,uCAAgC,QAAQ,CAAE,CAAC,CAAC;IAC9D,CAAC;IAED,OAAO,4xBAgBD,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,sBAAY,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,uBAEjF,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,mCAAyB,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,mCAE5E,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,gJAOzB,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,8BAAoB,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,yPAS3D,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,gDAChC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,8IAM5B,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,mIAQnC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,OAAO,IAAI,OAAA,CAAC;QAClE,EAAE,EAAE,OAAO,CAAC,EAAE;QACd,KAAK,EAAE,OAAO,CAAC,KAAK;QACpB,MAAM,EAAE,KAAK;KACd,CAAC,EAJiE,CAIjE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,wFAGO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,unHAwFZ,QAAQ,u+FA6E3D,CAAC;AACF,CAAC,CAAC;AAEF,yCAAyC;AACzC,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAAC,QAAgB;IAC/C,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC;QAC7B,OAAO,CAAC,KAAK,CAAC,uCAAgC,QAAQ,CAAE,CAAC,CAAC;QAC1D,OAAO;IACT,CAAC;IAED,OAAO,CAAC,GAAG,CAAC,oCAA6B,QAAQ,CAAE,CAAC,CAAC;IAErD,0CAA0C;IAC1C,IAAM,UAAU,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;IAEhD,yDAAyD;IACzD,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,UAAU,CAAC,CAAC;AAC9D,CAAC,CAAC","sourcesContent":["\nimport { z } from \"zod\";\n\n// Base form section interface\nexport interface FormSection {\n  id: string;\n  title: string;\n  description?: string;\n  fields: FormField[];\n}\n\n// Form field interface\nexport interface FormField {\n  id: string;\n  type: 'text' | 'select' | 'textarea' | 'date' | 'number' | 'checkbox' | 'radio' | 'table';\n  label: string;\n  placeholder?: string;\n  required?: boolean;\n  options?: string[];\n  validation?: z.ZodSchema;\n  configurable?: boolean;\n  visible?: boolean;\n}\n\n// Form template interface\nexport interface FormTemplate {\n  name: string;\n  sections: FormSection[];\n  schema: z.ZodSchema;\n}\n\n// Predefined form templates\nexport const formTemplates: Record<string, FormTemplate> = {\n  'Crew Promotion Form': {\n    name: 'Crew Promotion Form',\n    sections: [\n      {\n        id: 'A',\n        title: 'Candidate Information',\n        description: 'Enter details of the promotion candidate',\n        fields: [\n          {\n            id: 'candidateName',\n            type: 'text',\n            label: 'Candidate Name',\n            placeholder: 'Enter full name',\n            required: true,\n            configurable: false,\n            visible: true\n          },\n          {\n            id: 'currentRank',\n            type: 'select',\n            label: 'Current Rank',\n            required: true,\n            options: ['Third Officer', 'Second Officer', 'Chief Officer', 'Third Engineer', 'Second Engineer', 'Chief Engineer'],\n            configurable: true,\n            visible: true\n          },\n          {\n            id: 'proposedRank',\n            type: 'select',\n            label: 'Proposed Rank',\n            required: true,\n            options: ['Second Officer', 'Chief Officer', 'Master', 'Second Engineer', 'Chief Engineer'],\n            configurable: true,\n            visible: true\n          },\n          {\n            id: 'vessel',\n            type: 'select',\n            label: 'Current Vessel',\n            required: true,\n            options: ['MT Sail One', 'MT Sail Two', 'MT Sail Three', 'MV Sail Seven'],\n            configurable: false,\n            visible: true\n          },\n          {\n            id: 'joinDate',\n            type: 'date',\n            label: 'Date Joined Current Rank',\n            required: true,\n            configurable: false,\n            visible: true\n          }\n        ]\n      },\n      {\n        id: 'B',\n        title: 'Qualification Assessment',\n        description: 'Evaluate candidate qualifications and experience',\n        fields: [\n          {\n            id: 'qualifications',\n            type: 'table',\n            label: 'Qualifications & Certificates',\n            required: true,\n            configurable: true,\n            visible: true\n          },\n          {\n            id: 'experience',\n            type: 'textarea',\n            label: 'Relevant Experience',\n            placeholder: 'Describe relevant experience...',\n            required: true,\n            configurable: false,\n            visible: true\n          },\n          {\n            id: 'performanceRating',\n            type: 'select',\n            label: 'Overall Performance Rating',\n            required: true,\n            options: ['5- Excellent', '4- Very Good', '3- Good', '2- Satisfactory', '1- Needs Improvement'],\n            configurable: true,\n            visible: true\n          }\n        ]\n      },\n      {\n        id: 'C',\n        title: 'Recommendation & Approval',\n        description: 'Final recommendation and approval details',\n        fields: [\n          {\n            id: 'recommendation',\n            type: 'radio',\n            label: 'Promotion Recommendation',\n            required: true,\n            options: ['Strongly Recommended', 'Recommended', 'Not Recommended'],\n            configurable: false,\n            visible: true\n          },\n          {\n            id: 'comments',\n            type: 'textarea',\n            label: 'Additional Comments',\n            placeholder: 'Add any additional comments...',\n            required: false,\n            configurable: false,\n            visible: true\n          },\n          {\n            id: 'approverName',\n            type: 'text',\n            label: 'Approver Name',\n            required: true,\n            configurable: false,\n            visible: true\n          },\n          {\n            id: 'approvalDate',\n            type: 'date',\n            label: 'Approval Date',\n            required: true,\n            configurable: false,\n            visible: true\n          }\n        ]\n      }\n    ],\n    schema: z.object({\n      candidateName: z.string().min(1, \"Candidate name is required\"),\n      currentRank: z.string().min(1, \"Current rank is required\"),\n      proposedRank: z.string().min(1, \"Proposed rank is required\"),\n      vessel: z.string().min(1, \"Vessel is required\"),\n      joinDate: z.string().min(1, \"Join date is required\"),\n      qualifications: z.array(z.object({\n        id: z.string(),\n        qualification: z.string(),\n        issueDate: z.string(),\n        expiryDate: z.string(),\n        status: z.string()\n      })).default([]),\n      experience: z.string().min(1, \"Experience is required\"),\n      performanceRating: z.string().min(1, \"Performance rating is required\"),\n      recommendation: z.string().min(1, \"Recommendation is required\"),\n      comments: z.string().optional(),\n      approverName: z.string().min(1, \"Approver name is required\"),\n      approvalDate: z.string().min(1, \"Approval date is required\")\n    })\n  },\n\n  'Crew Training Form': {\n    name: 'Crew Training Form',\n    sections: [\n      {\n        id: 'A',\n        title: 'Training Details',\n        description: 'Enter training course information',\n        fields: [\n          {\n            id: 'trainingName',\n            type: 'text',\n            label: 'Training Course Name',\n            required: true,\n            configurable: false,\n            visible: true\n          },\n          {\n            id: 'trainingProvider',\n            type: 'text',\n            label: 'Training Provider',\n            required: true,\n            configurable: false,\n            visible: true\n          },\n          {\n            id: 'trainingType',\n            type: 'select',\n            label: 'Training Type',\n            required: true,\n            options: ['STCW', 'Company Specific', 'Technical', 'Safety', 'Management'],\n            configurable: true,\n            visible: true\n          },\n          {\n            id: 'startDate',\n            type: 'date',\n            label: 'Start Date',\n            required: true,\n            configurable: false,\n            visible: true\n          },\n          {\n            id: 'endDate',\n            type: 'date',\n            label: 'End Date',\n            required: true,\n            configurable: false,\n            visible: true\n          }\n        ]\n      },\n      {\n        id: 'B',\n        title: 'Participant Information',\n        description: 'Details of training participants',\n        fields: [\n          {\n            id: 'participants',\n            type: 'table',\n            label: 'Training Participants',\n            required: true,\n            configurable: true,\n            visible: true\n          }\n        ]\n      },\n      {\n        id: 'C',\n        title: 'Training Results',\n        description: 'Training outcomes and certification',\n        fields: [\n          {\n            id: 'completionStatus',\n            type: 'select',\n            label: 'Completion Status',\n            required: true,\n            options: ['Completed', 'In Progress', 'Failed', 'Cancelled'],\n            configurable: true,\n            visible: true\n          },\n          {\n            id: 'certificateIssued',\n            type: 'checkbox',\n            label: 'Certificate Issued',\n            required: false,\n            configurable: false,\n            visible: true\n          },\n          {\n            id: 'remarks',\n            type: 'textarea',\n            label: 'Training Remarks',\n            placeholder: 'Add training remarks...',\n            required: false,\n            configurable: false,\n            visible: true\n          }\n        ]\n      }\n    ],\n    schema: z.object({\n      trainingName: z.string().min(1, \"Training name is required\"),\n      trainingProvider: z.string().min(1, \"Training provider is required\"),\n      trainingType: z.string().min(1, \"Training type is required\"),\n      startDate: z.string().min(1, \"Start date is required\"),\n      endDate: z.string().min(1, \"End date is required\"),\n      participants: z.array(z.object({\n        id: z.string(),\n        name: z.string(),\n        rank: z.string(),\n        result: z.string()\n      })).default([]),\n      completionStatus: z.string().min(1, \"Completion status is required\"),\n      certificateIssued: z.boolean().default(false),\n      remarks: z.string().optional()\n    })\n  }\n};\n\n// Function to generate form editor component\nexport const generateFormEditor = (formName: string): string => {\n  const template = formTemplates[formName];\n  if (!template) {\n    throw new Error(`Form template not found for: ${formName}`);\n  }\n\n  return `\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { ArrowLeft, Save, Settings } from \"lucide-react\";\nimport { Form } from \"@shared/schema\";\nimport { sailDesignSystem } from \"@/config/sailDesignSystem\";\n\nconst ${formName.replace(/\\s+/g, '')}Schema = ${JSON.stringify(template.schema, null, 2)};\n\ntype ${formName.replace(/\\s+/g, '')}Data = z.infer<typeof ${formName.replace(/\\s+/g, '')}Schema>;\n\ninterface ${formName.replace(/\\s+/g, '')}EditorProps {\n  form: Form;\n  rankGroupName?: string;\n  onClose: () => void;\n  onSave: (data: any) => void;\n}\n\nexport const ${formName.replace(/\\s+/g, '')}Editor: React.FC<${formName.replace(/\\s+/g, '')}EditorProps> = ({ \n  form, \n  rankGroupName, \n  onClose, \n  onSave \n}) => {\n  const [activeSection, setActiveSection] = useState(\"A\");\n  const [isConfigMode, setIsConfigMode] = useState(false);\n\n  const formMethods = useForm<${formName.replace(/\\s+/g, '')}Data>({\n    resolver: zodResolver(${formName.replace(/\\s+/g, '')}Schema),\n    defaultValues: {\n      // Add default values based on template fields\n    },\n  });\n\n  const onSubmit = (data: ${formName.replace(/\\s+/g, '')}Data) => {\n    onSave({\n      ...data,\n      formId: form.id,\n    });\n    onClose();\n  };\n\n  const sections = ${JSON.stringify(template.sections.map(section => ({\n    id: section.id,\n    title: section.title,\n    active: false\n  })), null, 2)};\n\n  const renderSection = (sectionId: string) => {\n    const section = ${JSON.stringify(template.sections, null, 2)}.find(s => s.id === sectionId);\n    if (!section) return null;\n\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"pb-4 mb-6\">\n          <h3 className=\"text-xl font-semibold mb-2\" style={{ color: sailDesignSystem.colors.primary }}>\n            Part {section.id}: {section.title}\n          </h3>\n          {section.description && (\n            <div style={{ color: sailDesignSystem.colors.primary }} className=\"text-sm\">\n              {section.description}\n            </div>\n          )}\n          <div className=\"w-full h-0.5 mt-2\" style={{ backgroundColor: sailDesignSystem.colors.primary }}></div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {section.fields.map((field) => (\n            <div key={field.id} className=\"space-y-2\">\n              <Label htmlFor={field.id} className=\"text-sm\">{field.label}</Label>\n              {field.type === 'text' && (\n                <Input\n                  id={field.id}\n                  placeholder={field.placeholder}\n                  {...formMethods.register(field.id)}\n                  className=\"text-sm\"\n                />\n              )}\n              {field.type === 'select' && (\n                <Select\n                  value={formMethods.watch(field.id) || \"\"}\n                  onValueChange={(value) => formMethods.setValue(field.id, value)}\n                >\n                  <SelectTrigger className=\"text-sm\">\n                    <SelectValue placeholder=\"Select option\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {field.options?.map((option, index) => (\n                      <SelectItem key={index} value={option.toLowerCase().replace(/\\s+/g, '-')}>\n                        {option}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              )}\n              {field.type === 'textarea' && (\n                <Textarea\n                  id={field.id}\n                  placeholder={field.placeholder}\n                  {...formMethods.register(field.id)}\n                  rows={3}\n                />\n              )}\n              {field.type === 'date' && (\n                <Input\n                  id={field.id}\n                  type=\"date\"\n                  {...formMethods.register(field.id)}\n                  className=\"text-sm\"\n                />\n              )}\n              {field.type === 'checkbox' && (\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    id={field.id}\n                    checked={formMethods.watch(field.id) || false}\n                    onCheckedChange={(checked) => formMethods.setValue(field.id, checked)}\n                  />\n                  <Label htmlFor={field.id}>{field.label}</Label>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-lg w-full max-w-[95vw] h-[calc(100vh-2rem)] flex flex-col\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b\">\n          <div className=\"flex items-center gap-3\">\n            <Button variant=\"ghost\" size=\"icon\" onClick={onClose} className=\"h-8 w-8\">\n              <ArrowLeft className=\"h-4 w-4\" />\n            </Button>\n            <h2 className=\"text-lg font-semibold\">${formName} - {rankGroupName || \"Rank Group\"}</h2>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Button\n              variant={isConfigMode ? \"default\" : \"outline\"}\n              onClick={() => setIsConfigMode(!isConfigMode)}\n              className=\"flex items-center gap-2\"\n              size=\"sm\"\n            >\n              <Settings className=\"h-4 w-4\" />\n              {isConfigMode ? \"Exit Config\" : \"Configure Fields\"}\n            </Button>\n            <Button \n              onClick={formMethods.handleSubmit(onSubmit)}\n              className=\"flex items-center gap-2\"\n              size=\"sm\"\n            >\n              <Save className=\"h-4 w-4\" />\n              Save Draft\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"flex flex-1 overflow-hidden\">\n          {/* Left Sidebar */}\n          <div className=\"w-72 overflow-y-auto bg-gray-50 border-r\">\n            <div className=\"p-6\">\n              <nav className=\"space-y-1\">\n                {sections.map((section, index) => {\n                  const isActive = activeSection === section.id;\n                  \n                  return (\n                    <div key={section.id} className=\"relative\">\n                      <button\n                        onClick={() => setActiveSection(section.id)}\n                        className={\\`w-full flex items-center p-3 rounded-lg text-left transition-colors hover:bg-gray-50 \\${\n                          isActive ? \"bg-blue-50\" : \"\"\n                        }\\`}\n                      >\n                        <div \n                          className={\\`w-10 h-10 rounded-full flex items-center justify-center text-white font-semibold mr-4 \\${\n                            isActive ? \"bg-blue-600\" : \"bg-gray-400\"\n                          }\\`}\n                        >\n                          {section.id}\n                        </div>\n                        <div className=\"flex-1\">\n                          <div className={\\`font-medium text-sm \\${isActive ? \"text-blue-700\" : \"text-gray-700\"}\\`}>\n                            {section.title}\n                          </div>\n                        </div>\n                      </button>\n                      {index < sections.length - 1 && (\n                        <div className=\"absolute left-8 top-16 w-0.5 h-4 bg-gray-300\"></div>\n                      )}\n                    </div>\n                  );\n                })}\n              </nav>\n            </div>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"flex-1 overflow-y-auto bg-gray-50\">\n            <div className=\"p-6\">\n              <Card className=\"bg-white\">\n                <CardContent className=\"p-6\">\n                  {renderSection(activeSection)}\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n`;\n};\n\n// Function to create form editor command\nexport const createFormEditor = (formName: string): void => {\n  if (!formTemplates[formName]) {\n    console.error(`Form template not found for: ${formName}`);\n    return;\n  }\n\n  console.log(`Creating Form Editor for: ${formName}`);\n  \n  // Generate the form editor component code\n  const editorCode = generateFormEditor(formName);\n  \n  // You can save this to a file or use it programmatically\n  console.log(\"Generated Form Editor Component:\", editorCode);\n};\n"]}