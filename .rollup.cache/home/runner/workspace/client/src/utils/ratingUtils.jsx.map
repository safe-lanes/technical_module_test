{"version":3,"file":"ratingUtils.jsx","sourceRoot":"","sources":["ratingUtils.tsx"],"names":[],"mappings":"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","sourcesContent":["import { sailDesignSystem } from '@/config/sailDesignSystem';\n\nexport interface RatingConfig {\n  value: string;\n  label: string;\n  color: string;\n  bgColor: string;\n  textColor: string;\n}\n\nexport const effectivenessRatings: RatingConfig[] = [\n  {\n    value: '5-exceeds-expectations',\n    label: '5- Exceeds Expectations',\n    color: 'success',\n    bgColor: 'bg-[#c3f2cb]',\n    textColor: 'text-[#286e34]',\n  },\n  {\n    value: '4-meets-expectations',\n    label: '4- Meets Expectations',\n    color: 'good',\n    bgColor: 'bg-[#c3f2cb]',\n    textColor: 'text-[#286e34]',\n  },\n  {\n    value: '3-somewhat-meets-expectations',\n    label: '3- Somewhat Meets Expectations',\n    color: 'warning',\n    bgColor: 'bg-[#ffeaa7]',\n    textColor: 'text-[#814c02]',\n  },\n  {\n    value: '2-below-expectations',\n    label: '2- Below Expectations',\n    color: 'poor',\n    bgColor: 'bg-[#f9ecef]',\n    textColor: 'text-[#811f1a]',\n  },\n  {\n    value: '1-significantly-below-expectations',\n    label: '1- Significantly Below Expectations',\n    color: 'critical',\n    bgColor: 'bg-red-600',\n    textColor: 'text-white',\n  },\n];\n\nexport const targetRatings: RatingConfig[] = [\n  {\n    value: '5-exceeded-set-target',\n    label: '5- Exceeded Set Target',\n    color: 'success',\n    bgColor: 'bg-[#c3f2cb]',\n    textColor: 'text-[#286e34]',\n  },\n  {\n    value: '4-fully-met-target',\n    label: '4- Fully Met Target',\n    color: 'good',\n    bgColor: 'bg-[#c3f2cb]',\n    textColor: 'text-[#286e34]',\n  },\n  {\n    value: '3-missed-target-small-margin',\n    label: '3- Missed Target by a Small Margin',\n    color: 'warning',\n    bgColor: 'bg-[#ffeaa7]',\n    textColor: 'text-[#814c02]',\n  },\n  {\n    value: '2-missed-target-significant-margin',\n    label: '2- Missed Target by a Significant Margin',\n    color: 'poor',\n    bgColor: 'bg-[#f9ecef]',\n    textColor: 'text-[#811f1a]',\n  },\n  {\n    value: '1-failed-to-achieve-target',\n    label: '1- Failed to Achieve Target',\n    color: 'critical',\n    bgColor: 'bg-red-600',\n    textColor: 'text-white',\n  },\n];\n\nexport const trainingRatings: RatingConfig[] = [\n  {\n    value: '5-exceeded-expectations',\n    label: '5- Exceeded Expectations',\n    color: 'success',\n    bgColor: 'bg-[#c3f2cb]',\n    textColor: 'text-[#286e34]',\n  },\n  {\n    value: '4-meets-expectations',\n    label: '4- Meets Expectations',\n    color: 'good',\n    bgColor: 'bg-[#c3f2cb]',\n    textColor: 'text-[#286e34]',\n  },\n  {\n    value: '3-somewhat-meets-expectations',\n    label: '3- Somewhat Meets Expectations',\n    color: 'warning',\n    bgColor: 'bg-[#ffeaa7]',\n    textColor: 'text-[#814c02]',\n  },\n  {\n    value: '2-below-expectations',\n    label: '2- Below Expectations',\n    color: 'poor',\n    bgColor: 'bg-[#f9ecef]',\n    textColor: 'text-[#811f1a]',\n  },\n  {\n    value: '1-significantly-below-expectations',\n    label: '1- Significantly Below Expectations',\n    color: 'critical',\n    bgColor: 'bg-red-600',\n    textColor: 'text-white',\n  },\n];\n\n// Helper function to get score colors based on numeric rating\nexport const getScoreColors = (score: number) => {\n  if (score >= 4.0) {\n    return { bgColor: 'bg-[#c3f2cb]', textColor: 'text-[#286e34]' };\n  } else if (score >= 3.0) {\n    return { bgColor: 'bg-[#ffeaa7]', textColor: 'text-[#814c02]' };\n  } else if (score >= 2.0) {\n    return { bgColor: 'bg-[#f9ecef]', textColor: 'text-[#811f1a]' };\n  } else {\n    return { bgColor: 'bg-red-600', textColor: 'text-white' };\n  }\n};\n\n// Helper function to convert rating string to numeric value\nexport const getRatingValue = (ratingString: string): number => {\n  if (ratingString.startsWith('5-')) return 5;\n  if (ratingString.startsWith('4-')) return 4;\n  if (ratingString.startsWith('3-')) return 3;\n  if (ratingString.startsWith('2-')) return 2;\n  if (ratingString.startsWith('1-')) return 1;\n  return 0;\n};\n\n// Helper function to calculate weighted scores\nexport const calculateWeightedScore = (\n  assessments: Array<{\n    effectiveness: string;\n    weight: number;\n  }>\n): string => {\n  let totalScore = 0;\n  let totalWeight = 0;\n\n  assessments.forEach(assessment => {\n    if (assessment.effectiveness && assessment.weight) {\n      const rating = getRatingValue(assessment.effectiveness);\n      totalScore += (rating * assessment.weight) / 100;\n      totalWeight += assessment.weight;\n    }\n  });\n\n  return totalWeight > 0\n    ? ((totalScore * 100) / totalWeight).toFixed(1)\n    : '0.0';\n};\n\n// Status colors for training followup\nexport const getStatusColors = (status: string) => {\n  switch (status) {\n    case 'Proposed':\n      return 'bg-gray-200';\n    case 'Approved':\n      return 'bg-blue-200';\n    case 'Planned':\n      return 'bg-yellow-200';\n    case 'Declined':\n      return 'bg-red-200';\n    case 'Completed':\n      return 'bg-green-200';\n    default:\n      return 'bg-gray-200';\n  }\n};\n"]}