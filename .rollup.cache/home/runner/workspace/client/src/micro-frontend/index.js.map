{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { MicroFrontendWrapper } from './MicroFrontendWrapper';\nimport ElementCrewAppraisals from '../pages/ElementCrewAppraisals';\nimport AppraisalForm from '../pages/AppraisalForm';\nimport AdminModule from '../pages/AdminModule';\nimport FormEditor from '../pages/FormEditor';\nimport App from '../App';\nimport './micro-frontend.css';\n\n// Main app export for standalone mode\nexport { default as App } from '../App';\n\n// Individual component exports for micro frontend consumption\nexport { default as ElementCrewAppraisals } from '../pages/ElementCrewAppraisals';\nexport { default as AppraisalForm } from '../pages/AppraisalForm';\nexport { default as AdminModule } from '../pages/AdminModule';\nexport { default as FormEditor } from '../pages/FormEditor';\n\n// Wrapper export\nexport {\n  MicroFrontendWrapper,\n  useMicroFrontendConfig,\n} from './MicroFrontendWrapper';\n\n// Micro frontend bootstrap function\nexport const bootstrap = (config?: any) => {\n  return {\n    mount: (element: HTMLElement, mountConfig?: any) => {\n      const React = require('react');\n      const ReactDOM = require('react-dom/client');\n\n      const root = ReactDOM.createRoot(element);\n      const finalConfig = { ...config, ...mountConfig, standalone: false };\n\n      root.render(\n        React.createElement(\n          MicroFrontendWrapper,\n          { config: finalConfig },\n          React.createElement(App)\n        )\n      );\n\n      return () => root.unmount();\n    },\n\n    // Individual component mounting\n    mountComponent: (\n      component: string,\n      element: HTMLElement,\n      componentConfig?: any\n    ) => {\n      const React = require('react');\n      const ReactDOM = require('react-dom/client');\n\n      const components = {\n        ElementCrewAppraisals,\n        AppraisalForm,\n        AdminModule,\n        FormEditor,\n      };\n\n      const Component = components[component as keyof typeof components];\n      if (!Component) {\n        throw new Error(`Component ${component} not found`);\n      }\n\n      const root = ReactDOM.createRoot(element);\n      const finalConfig = { ...config, ...componentConfig, standalone: false };\n\n      root.render(\n        React.createElement(\n          MicroFrontendWrapper,\n          { config: finalConfig },\n          React.createElement(Component)\n        )\n      );\n\n      return () => root.unmount();\n    },\n  };\n};\n\n// Global registration for micro frontend\nif (typeof window !== 'undefined') {\n  (window as any).ElementCrewAppraisals = {\n    bootstrap,\n    MicroFrontendWrapper,\n    components: {\n      ElementCrewAppraisals,\n      AppraisalForm,\n      AdminModule,\n      FormEditor,\n      App,\n    },\n  };\n}\n"]}