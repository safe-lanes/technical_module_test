{"version":3,"file":"MicroFrontendWrapper.jsx","sourceRoot":"","sources":["MicroFrontendWrapper.tsx"],"names":[],"mappings":"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","sourcesContent":["\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { TooltipProvider } from '@/components/ui/tooltip';\n\ninterface MicroFrontendConfig {\n  apiBaseUrl?: string;\n  authToken?: string;\n  onAuthRequired?: () => void;\n  standalone?: boolean;\n}\n\ninterface MicroFrontendContextType {\n  config: MicroFrontendConfig;\n  updateConfig: (newConfig: Partial<MicroFrontendConfig>) => void;\n}\n\nconst MicroFrontendContext = createContext<MicroFrontendContextType | null>(null);\n\nexport const useMicroFrontendConfig = () => {\n  const context = useContext(MicroFrontendContext);\n  if (!context) {\n    throw new Error('useMicroFrontendConfig must be used within MicroFrontendWrapper');\n  }\n  return context;\n};\n\ninterface MicroFrontendWrapperProps {\n  children: React.ReactNode;\n  config?: MicroFrontendConfig;\n}\n\nexport const MicroFrontendWrapper: React.FC<MicroFrontendWrapperProps> = ({ \n  children, \n  config: initialConfig = {} \n}) => {\n  const [config, setConfig] = useState<MicroFrontendConfig>({\n    standalone: true,\n    apiBaseUrl: '/api',\n    ...initialConfig\n  });\n\n  const [queryClient] = useState(() => new QueryClient({\n    defaultOptions: {\n      queries: {\n        retry: false,\n        refetchOnWindowFocus: false,\n      },\n      mutations: {\n        retry: false,\n      },\n    },\n  }));\n\n  const updateConfig = (newConfig: Partial<MicroFrontendConfig>) => {\n    setConfig(prev => ({ ...prev, ...newConfig }));\n  };\n\n  // Set up global fetch interceptor for authentication\n  useEffect(() => {\n    if (!config.standalone && config.authToken) {\n      const originalFetch = window.fetch;\n      window.fetch = async (input, init) => {\n        const headers = new Headers(init?.headers);\n        headers.set('Authorization', `Bearer ${config.authToken}`);\n        \n        return originalFetch(input, {\n          ...init,\n          headers\n        });\n      };\n\n      return () => {\n        window.fetch = originalFetch;\n      };\n    }\n  }, [config.authToken, config.standalone]);\n\n  // Handle API base URL for micro frontend mode\n  useEffect(() => {\n    if (!config.standalone && config.apiBaseUrl) {\n      // Update query client defaults to use the correct base URL\n      queryClient.setDefaultOptions({\n        queries: {\n          ...queryClient.getDefaultOptions().queries,\n          queryFn: async ({ queryKey }) => {\n            const url = `${config.apiBaseUrl}${queryKey[0]}`;\n            const response = await fetch(url);\n            if (!response.ok) {\n              if (response.status === 401 && config.onAuthRequired) {\n                config.onAuthRequired();\n              }\n              throw new Error('Network response was not ok');\n            }\n            return response.json();\n          }\n        }\n      });\n    }\n  }, [config.apiBaseUrl, config.standalone, config.onAuthRequired, queryClient]);\n\n  return (\n    <MicroFrontendContext.Provider value={{ config, updateConfig }}>\n      <QueryClientProvider client={queryClient}>\n        <TooltipProvider>\n          <div \n            className={`micro-frontend-app ${!config.standalone ? 'micro-frontend-isolated' : ''}`}\n            data-micro-frontend=\"element-crew-appraisals\"\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </QueryClientProvider>\n    </MicroFrontendContext.Provider>\n  );\n};\n\n// Export for micro frontend consumption\nexport default MicroFrontendWrapper;\n"]}