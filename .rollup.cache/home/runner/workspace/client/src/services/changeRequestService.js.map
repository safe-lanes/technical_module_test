{"version":3,"file":"changeRequestService.js","sourceRoot":"","sources":["changeRequestService.ts"],"names":[],"mappings":";AA4BA,wFAAwF;AACxF,IAAM,cAAc,GAAoB;IACtC;QACE,EAAE,EAAE,CAAC;QACL,QAAQ,EAAE,YAAY;QACtB,YAAY,EAAE,yCAAyC;QACvD,WAAW,EAAE,gBAAgB;QAC7B,WAAW,EAAE,YAAY;QACzB,MAAM,EAAE,kBAAkB;QAC1B,YAAY,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,aAAa,EAAE;QACjE,OAAO,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,aAAa,EAAE;QAC5D,aAAa,EAAE,CAAC,WAAW,CAAC;QAC5B,QAAQ,EAAE,uCAAuC;KAClD;IACD;QACE,EAAE,EAAE,CAAC;QACL,QAAQ,EAAE,aAAa;QACvB,YAAY,EAAE,0CAA0C;QACxD,WAAW,EAAE,cAAc;QAC3B,WAAW,EAAE,YAAY;QACzB,MAAM,EAAE,UAAU;QAClB,YAAY,EAAE,EAAE,QAAQ,EAAE,sBAAsB,EAAE,SAAS,EAAE,SAAS,EAAE;QACxE,OAAO,EAAE,EAAE,QAAQ,EAAE,uBAAuB,EAAE,SAAS,EAAE,SAAS,EAAE;QACpE,aAAa,EAAE,CAAC,UAAU,EAAE,WAAW,CAAC;QACxC,UAAU,EAAE,0BAA0B;QACtC,YAAY,EAAE,YAAY;KAC3B;IACD;QACE,EAAE,EAAE,CAAC;QACL,QAAQ,EAAE,QAAQ;QAClB,YAAY,EAAE,qCAAqC;QACnD,WAAW,EAAE,cAAc;QAC3B,WAAW,EAAE,YAAY;QACzB,MAAM,EAAE,UAAU;QAClB,YAAY,EAAE,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,CAAC,EAAE;QACxD,OAAO,EAAE,EAAE,QAAQ,EAAE,wBAAwB,EAAE,QAAQ,EAAE,CAAC,EAAE;QAC5D,aAAa,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;QACvC,eAAe,EAAE,yCAAyC;KAC3D;CACF,CAAC;AAEF,IAAM,UAAU,GAAgB,EAAE,CAAC;AACnC,IAAI,MAAM,GAAG,CAAC,CAAC;AAEf,MAAM,CAAC,IAAM,oBAAoB,GAAG;IAClC,0BAA0B;IAC1B,oBAAoB,EAAE;QACpB,yBAAW,cAAc,QAAE;IAC7B,CAAC;IAED,kCAAkC;IAClC,2BAA2B,EAAE,UAAC,QAAgB;QAC5C,OAAO,cAAc,CAAC,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,QAAQ,KAAK,QAAQ,EAAzB,CAAyB,CAAC,CAAC;IACjE,CAAC;IAED,2BAA2B;IAC3B,oBAAoB,EAAE,UAAC,EAAU;QAC/B,OAAO,cAAc,CAAC,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,EAAE,KAAK,EAAE,EAAb,CAAa,CAAC,CAAC;IACnD,CAAC;IAED,4BAA4B;IAC5B,mBAAmB,EAAE,UAAC,OAAkC;QACtD,IAAM,UAAU,yBACX,OAAO,KACV,EAAE,EAAE,MAAM,EAAE,GACb,CAAC;QACF,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEhC,mBAAmB;QACnB,UAAU,CAAC,IAAI,CAAC;YACd,EAAE,EAAE,UAAU,CAAC,MAAM,GAAG,CAAC;YACzB,eAAe,EAAE,UAAU,CAAC,EAAE;YAC9B,MAAM,EAAE,SAAS;YACjB,WAAW,EAAE,OAAO,CAAC,WAAW;YAChC,aAAa,EAAE,OAAO,CAAC,WAAW;YAClC,SAAS,EAAE,OAAO,CAAC,YAAY;YAC/B,SAAS,EAAE,OAAO,CAAC,OAAO;YAC1B,QAAQ,EAAE,OAAO,CAAC,QAAQ;SAC3B,CAAC,CAAC;QAEH,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,yBAAyB;IACzB,oBAAoB,EAAE,UACpB,EAAU,EACV,UAAkB,EAClB,QAAiB;QAEjB,IAAM,YAAY,GAAG,cAAc,CAAC,SAAS,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,EAAE,KAAK,EAAE,EAAb,CAAa,CAAC,CAAC;QACpE,IAAI,YAAY,KAAK,CAAC,CAAC;YAAE,OAAO,KAAK,CAAC;QAEtC,IAAM,OAAO,GAAG,cAAc,CAAC,YAAY,CAAC,CAAC;QAC7C,IAAM,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAE5D,cAAc,CAAC,YAAY,CAAC,yBACvB,OAAO,KACV,MAAM,EAAE,UAAU,EAClB,UAAU,YAAA,EACV,YAAY,cAAA,EACZ,QAAQ,EAAE,QAAQ,IAAI,OAAO,CAAC,QAAQ,GACvC,CAAC;QAEF,mBAAmB;QACnB,UAAU,CAAC,IAAI,CAAC;YACd,EAAE,EAAE,UAAU,CAAC,MAAM,GAAG,CAAC;YACzB,eAAe,EAAE,EAAE;YACnB,MAAM,EAAE,UAAU;YAClB,WAAW,EAAE,UAAU;YACvB,aAAa,EAAE,YAAY;YAC3B,SAAS,EAAE,OAAO,CAAC,YAAY;YAC/B,SAAS,EAAE,OAAO,CAAC,OAAO;YAC1B,QAAQ,UAAA;SACT,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IACd,CAAC;IAED,wBAAwB;IACxB,mBAAmB,EAAE,UACnB,EAAU,EACV,UAAkB,EAClB,MAAc;QAEd,IAAM,YAAY,GAAG,cAAc,CAAC,SAAS,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,EAAE,KAAK,EAAE,EAAb,CAAa,CAAC,CAAC;QACpE,IAAI,YAAY,KAAK,CAAC,CAAC;YAAE,OAAO,KAAK,CAAC;QAEtC,IAAM,OAAO,GAAG,cAAc,CAAC,YAAY,CAAC,CAAC;QAC7C,IAAM,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAE5D,cAAc,CAAC,YAAY,CAAC,yBACvB,OAAO,KACV,MAAM,EAAE,UAAU,EAClB,eAAe,EAAE,MAAM,EACvB,QAAQ,EAAE,MAAM,GACjB,CAAC;QAEF,oBAAoB;QACpB,UAAU,CAAC,IAAI,CAAC;YACd,EAAE,EAAE,UAAU,CAAC,MAAM,GAAG,CAAC;YACzB,eAAe,EAAE,EAAE;YACnB,MAAM,EAAE,UAAU;YAClB,WAAW,EAAE,UAAU;YACvB,aAAa,EAAE,YAAY;YAC3B,SAAS,EAAE,OAAO,CAAC,YAAY;YAC/B,SAAS,EAAE,OAAO,CAAC,OAAO;YAC1B,QAAQ,EAAE,MAAM;SACjB,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IACd,CAAC;IAED,4BAA4B;IAC5B,aAAa,EAAE;QACb,yBAAW,UAAU,QAAE;IACzB,CAAC;CACF,CAAC","sourcesContent":["// Change Request interfaces (duplicated here to avoid import issues)\nexport interface ChangeRequest {\n  id: number;\n  category: 'components' | 'work-orders' | 'spares' | 'stores';\n  requestTitle: string;\n  requestedBy: string;\n  requestDate: string;\n  status: 'Pending Approval' | 'Approved' | 'Rejected';\n  originalData: Record<string, any>;\n  newData: Record<string, any>;\n  changedFields: string[];\n  comments?: string;\n  approvedBy?: string;\n  approvedDate?: string;\n  rejectionReason?: string;\n}\n\nexport interface ChangeLog {\n  id: number;\n  changeRequestId: number;\n  action: 'created' | 'approved' | 'rejected';\n  performedBy: string;\n  performedDate: string;\n  oldValues: Record<string, any>;\n  newValues: Record<string, any>;\n  comments?: string;\n}\n\n// In-memory storage for change requests (in production this would be a proper database)\nconst changeRequests: ChangeRequest[] = [\n  {\n    id: 1,\n    category: 'components',\n    requestTitle: 'Modify Main Engine Maintenance Schedule',\n    requestedBy: 'Chief Engineer',\n    requestDate: '2025-05-20',\n    status: 'Pending Approval',\n    originalData: { frequency: '6 Months', component: 'Main Engine' },\n    newData: { frequency: '3 Months', component: 'Main Engine' },\n    changedFields: ['frequency'],\n    comments: 'Increase frequency due to heavy usage',\n  },\n  {\n    id: 2,\n    category: 'work-orders',\n    requestTitle: 'Update Steering System Component Details',\n    requestedBy: '2nd Engineer',\n    requestDate: '2025-05-18',\n    status: 'Approved',\n    originalData: { jobTitle: 'Steering Maintenance', frequency: '1 Month' },\n    newData: { jobTitle: 'Steering System Check', frequency: '2 Weeks' },\n    changedFields: ['jobTitle', 'frequency'],\n    approvedBy: 'Technical Superintendent',\n    approvedDate: '2025-05-19',\n  },\n  {\n    id: 3,\n    category: 'spares',\n    requestTitle: 'Request Special Tool for Aux Engine',\n    requestedBy: '3rd Engineer',\n    requestDate: '2025-05-10',\n    status: 'Rejected',\n    originalData: { partName: 'Standard Tool', quantity: 1 },\n    newData: { partName: 'Special Hydraulic Tool', quantity: 2 },\n    changedFields: ['partName', 'quantity'],\n    rejectionReason: 'Budget constraints - use existing tools',\n  },\n];\n\nconst changeLogs: ChangeLog[] = [];\nlet nextId = 4;\n\nexport const changeRequestService = {\n  // Get all change requests\n  getAllChangeRequests: (): ChangeRequest[] => {\n    return [...changeRequests];\n  },\n\n  // Get change requests by category\n  getChangeRequestsByCategory: (category: string): ChangeRequest[] => {\n    return changeRequests.filter(req => req.category === category);\n  },\n\n  // Get change request by ID\n  getChangeRequestById: (id: number): ChangeRequest | undefined => {\n    return changeRequests.find(req => req.id === id);\n  },\n\n  // Create new change request\n  createChangeRequest: (request: Omit<ChangeRequest, 'id'>): ChangeRequest => {\n    const newRequest: ChangeRequest = {\n      ...request,\n      id: nextId++,\n    };\n    changeRequests.push(newRequest);\n\n    // Log the creation\n    changeLogs.push({\n      id: changeLogs.length + 1,\n      changeRequestId: newRequest.id,\n      action: 'created',\n      performedBy: request.requestedBy,\n      performedDate: request.requestDate,\n      oldValues: request.originalData,\n      newValues: request.newData,\n      comments: request.comments,\n    });\n\n    return newRequest;\n  },\n\n  // Approve change request\n  approveChangeRequest: (\n    id: number,\n    approvedBy: string,\n    comments?: string\n  ): boolean => {\n    const requestIndex = changeRequests.findIndex(req => req.id === id);\n    if (requestIndex === -1) return false;\n\n    const request = changeRequests[requestIndex];\n    const approvedDate = new Date().toISOString().split('T')[0];\n\n    changeRequests[requestIndex] = {\n      ...request,\n      status: 'Approved',\n      approvedBy,\n      approvedDate,\n      comments: comments || request.comments,\n    };\n\n    // Log the approval\n    changeLogs.push({\n      id: changeLogs.length + 1,\n      changeRequestId: id,\n      action: 'approved',\n      performedBy: approvedBy,\n      performedDate: approvedDate,\n      oldValues: request.originalData,\n      newValues: request.newData,\n      comments,\n    });\n\n    return true;\n  },\n\n  // Reject change request\n  rejectChangeRequest: (\n    id: number,\n    rejectedBy: string,\n    reason: string\n  ): boolean => {\n    const requestIndex = changeRequests.findIndex(req => req.id === id);\n    if (requestIndex === -1) return false;\n\n    const request = changeRequests[requestIndex];\n    const rejectedDate = new Date().toISOString().split('T')[0];\n\n    changeRequests[requestIndex] = {\n      ...request,\n      status: 'Rejected',\n      rejectionReason: reason,\n      comments: reason,\n    };\n\n    // Log the rejection\n    changeLogs.push({\n      id: changeLogs.length + 1,\n      changeRequestId: id,\n      action: 'rejected',\n      performedBy: rejectedBy,\n      performedDate: rejectedDate,\n      oldValues: request.originalData,\n      newValues: request.newData,\n      comments: reason,\n    });\n\n    return true;\n  },\n\n  // Get change logs for audit\n  getChangeLogs: (): ChangeLog[] => {\n    return [...changeLogs];\n  },\n};\n"]}