{"version":3,"file":"AddFieldModal.jsx","sourceRoot":"","sources":["AddFieldModal.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Switch } from '@/components/ui/switch';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Plus, X } from 'lucide-react';\n\ninterface AddFieldModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSave: (fieldData: any) => void;\n  section: string;\n  existingKeys: string[];\n  isAdmin?: boolean;\n}\n\nconst AddFieldModal: React.FC<AddFieldModalProps> = ({\n  isOpen,\n  onClose,\n  onSave,\n  section,\n  existingKeys,\n  isAdmin = true,\n}) => {\n  const [fieldData, setFieldData] = useState({\n    label: '',\n    type: 'text',\n    required: false,\n    placeholder: '',\n    defaultValue: '',\n    unit: '',\n    validation: {\n      min: undefined as number | undefined,\n      max: undefined as number | undefined,\n      minDate: '',\n      maxDate: '',\n      regex: '',\n      maxLength: undefined as number | undefined,\n    },\n    options: [] as { value: string; label: string }[],\n    key: '',\n  });\n\n  const [newOption, setNewOption] = useState({ value: '', label: '' });\n\n  // Auto-generate field key from label\n  useEffect(() => {\n    if (fieldData.label && !fieldData.key) {\n      const slug = fieldData.label\n        .toLowerCase()\n        .replace(/[^a-z0-9]+/g, '_')\n        .replace(/^_|_$/g, '');\n      const suffix = Math.random().toString(36).substring(2, 6);\n      setFieldData(prev => ({ ...prev, key: `${slug}_${suffix}` }));\n    }\n  }, [fieldData.label]);\n\n  const handleAddOption = () => {\n    if (newOption.value && newOption.label) {\n      setFieldData(prev => ({\n        ...prev,\n        options: [...prev.options, newOption],\n      }));\n      setNewOption({ value: '', label: '' });\n    }\n  };\n\n  const handleRemoveOption = (index: number) => {\n    setFieldData(prev => ({\n      ...prev,\n      options: prev.options.filter((_, i) => i !== index),\n    }));\n  };\n\n  const handleSave = () => {\n    if (!fieldData.label || !fieldData.type) {\n      return;\n    }\n\n    if (existingKeys.includes(fieldData.key)) {\n      window.alert('Field key must be unique within the form');\n      return;\n    }\n\n    onSave({\n      ...fieldData,\n      id: `field_${Date.now()}`,\n      section,\n      active: true,\n      locked: false,\n    });\n\n    // Reset form\n    setFieldData({\n      label: '',\n      type: 'text',\n      required: false,\n      placeholder: '',\n      defaultValue: '',\n      unit: '',\n      validation: {\n        min: undefined,\n        max: undefined,\n        minDate: '',\n        maxDate: '',\n        regex: '',\n        maxLength: undefined,\n      },\n      options: [],\n      key: '',\n    });\n\n    onClose();\n  };\n\n  const isValid =\n    fieldData.label &&\n    fieldData.type &&\n    fieldData.key &&\n    !existingKeys.includes(fieldData.key);\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className='max-w-2xl max-h-[90vh] overflow-y-auto'>\n        <DialogHeader>\n          <DialogTitle>Add Field to Section {section}</DialogTitle>\n        </DialogHeader>\n\n        <div className='space-y-4 py-4'>\n          {/* Label */}\n          <div className='space-y-2'>\n            <Label>Label *</Label>\n            <Input\n              value={fieldData.label}\n              onChange={e =>\n                setFieldData(prev => ({ ...prev, label: e.target.value }))\n              }\n              placeholder='Field Label'\n            />\n          </div>\n\n          {/* Data Type */}\n          <div className='space-y-2'>\n            <Label>Data Type *</Label>\n            <Select\n              value={fieldData.type}\n              onValueChange={value =>\n                setFieldData(prev => ({ ...prev, type: value }))\n              }\n            >\n              <SelectTrigger>\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value='text'>Text</SelectItem>\n                <SelectItem value='textarea'>Textarea</SelectItem>\n                <SelectItem value='number'>Number</SelectItem>\n                <SelectItem value='date'>Date</SelectItem>\n                <SelectItem value='boolean'>Boolean</SelectItem>\n                <SelectItem value='select'>Select</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Required */}\n          <div className='flex items-center space-x-2'>\n            <Switch\n              checked={fieldData.required}\n              onCheckedChange={checked =>\n                setFieldData(prev => ({ ...prev, required: checked }))\n              }\n            />\n            <Label>Required</Label>\n          </div>\n\n          {/* Placeholder/Help Text */}\n          <div className='space-y-2'>\n            <Label>Placeholder / Help Text</Label>\n            <Input\n              value={fieldData.placeholder}\n              onChange={e =>\n                setFieldData(prev => ({ ...prev, placeholder: e.target.value }))\n              }\n              placeholder='Optional help text'\n            />\n          </div>\n\n          {/* Default Value */}\n          <div className='space-y-2'>\n            <Label>Default Value</Label>\n            <Input\n              value={fieldData.defaultValue}\n              onChange={e =>\n                setFieldData(prev => ({\n                  ...prev,\n                  defaultValue: e.target.value,\n                }))\n              }\n              placeholder='Default value for this field'\n            />\n          </div>\n\n          {/* Unit (UOM) */}\n          <div className='space-y-2'>\n            <Label>Unit (UOM)</Label>\n            <Input\n              value={fieldData.unit}\n              onChange={e =>\n                setFieldData(prev => ({ ...prev, unit: e.target.value }))\n              }\n              placeholder='e.g., kg, hours, °C'\n            />\n          </div>\n\n          {/* Validation based on type */}\n          {fieldData.type === 'number' && (\n            <div className='space-y-2'>\n              <Label>Validation</Label>\n              <div className='grid grid-cols-2 gap-4'>\n                <div>\n                  <Label className='text-sm'>Min</Label>\n                  <Input\n                    type='number'\n                    value={fieldData.validation.min || ''}\n                    onChange={e =>\n                      setFieldData(prev => ({\n                        ...prev,\n                        validation: {\n                          ...prev.validation,\n                          min: e.target.value\n                            ? Number(e.target.value)\n                            : undefined,\n                        },\n                      }))\n                    }\n                  />\n                </div>\n                <div>\n                  <Label className='text-sm'>Max</Label>\n                  <Input\n                    type='number'\n                    value={fieldData.validation.max || ''}\n                    onChange={e =>\n                      setFieldData(prev => ({\n                        ...prev,\n                        validation: {\n                          ...prev.validation,\n                          max: e.target.value\n                            ? Number(e.target.value)\n                            : undefined,\n                        },\n                      }))\n                    }\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {fieldData.type === 'date' && (\n            <div className='space-y-2'>\n              <Label>Validation</Label>\n              <div className='grid grid-cols-2 gap-4'>\n                <div>\n                  <Label className='text-sm'>Min Date</Label>\n                  <Input\n                    type='date'\n                    value={fieldData.validation.minDate}\n                    onChange={e =>\n                      setFieldData(prev => ({\n                        ...prev,\n                        validation: {\n                          ...prev.validation,\n                          minDate: e.target.value,\n                        },\n                      }))\n                    }\n                  />\n                </div>\n                <div>\n                  <Label className='text-sm'>Max Date</Label>\n                  <Input\n                    type='date'\n                    value={fieldData.validation.maxDate}\n                    onChange={e =>\n                      setFieldData(prev => ({\n                        ...prev,\n                        validation: {\n                          ...prev.validation,\n                          maxDate: e.target.value,\n                        },\n                      }))\n                    }\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {(fieldData.type === 'text' || fieldData.type === 'textarea') && (\n            <div className='space-y-2'>\n              <Label>Validation</Label>\n              <div className='space-y-2'>\n                <div>\n                  <Label className='text-sm'>Max Length</Label>\n                  <Input\n                    type='number'\n                    value={fieldData.validation.maxLength || ''}\n                    onChange={e =>\n                      setFieldData(prev => ({\n                        ...prev,\n                        validation: {\n                          ...prev.validation,\n                          maxLength: e.target.value\n                            ? Number(e.target.value)\n                            : undefined,\n                        },\n                      }))\n                    }\n                  />\n                </div>\n                <div>\n                  <Label className='text-sm'>Regex Pattern (optional)</Label>\n                  <Input\n                    value={fieldData.validation.regex}\n                    onChange={e =>\n                      setFieldData(prev => ({\n                        ...prev,\n                        validation: {\n                          ...prev.validation,\n                          regex: e.target.value,\n                        },\n                      }))\n                    }\n                    placeholder='e.g., ^[A-Z0-9]+$'\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Options for Select type */}\n          {fieldData.type === 'select' && (\n            <div className='space-y-2'>\n              <Label>Options</Label>\n              <div className='space-y-2'>\n                {fieldData.options.map((option, index) => (\n                  <div key={index} className='flex items-center gap-2'>\n                    <Input value={option.value} readOnly className='flex-1' />\n                    <Input value={option.label} readOnly className='flex-1' />\n                    <Button\n                      variant='outline'\n                      size='sm'\n                      onClick={() => handleRemoveOption(index)}\n                    >\n                      <X className='h-4 w-4' />\n                    </Button>\n                  </div>\n                ))}\n                <div className='flex items-center gap-2'>\n                  <Input\n                    value={newOption.value}\n                    onChange={e =>\n                      setNewOption(prev => ({ ...prev, value: e.target.value }))\n                    }\n                    placeholder='Value'\n                    className='flex-1'\n                  />\n                  <Input\n                    value={newOption.label}\n                    onChange={e =>\n                      setNewOption(prev => ({ ...prev, label: e.target.value }))\n                    }\n                    placeholder='Label'\n                    className='flex-1'\n                  />\n                  <Button\n                    variant='outline'\n                    size='sm'\n                    onClick={handleAddOption}\n                    disabled={!newOption.value || !newOption.label}\n                  >\n                    <Plus className='h-4 w-4' />\n                  </Button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Field Key (Advanced) */}\n          {isAdmin && (\n            <div className='space-y-2'>\n              <Label>Field Key (Advanced)</Label>\n              <Input\n                value={fieldData.key}\n                onChange={e =>\n                  setFieldData(prev => ({ ...prev, key: e.target.value }))\n                }\n                placeholder='Auto-generated from label'\n              />\n              {existingKeys.includes(fieldData.key) && (\n                <p className='text-sm text-red-500'>\n                  This key already exists in the form\n                </p>\n              )}\n            </div>\n          )}\n        </div>\n\n        <DialogFooter>\n          <Button variant='outline' onClick={onClose}>\n            Cancel\n          </Button>\n          <Button onClick={handleSave} disabled={!isValid}>\n            Save\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default AddFieldModal;\n"]}