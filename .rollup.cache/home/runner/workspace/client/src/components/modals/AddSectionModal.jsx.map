{"version":3,"file":"AddSectionModal.jsx","sourceRoot":"","sources":["AddSectionModal.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Switch } from '@/components/ui/switch';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { ChevronDown, ChevronRight } from 'lucide-react';\n\ninterface AddSectionModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSave: (sectionData: any) => void;\n  nextSectionLetter: string;\n}\n\nconst AddSectionModal: React.FC<AddSectionModalProps> = ({\n  isOpen,\n  onClose,\n  onSave,\n  nextSectionLetter,\n}) => {\n  const [sectionTitle, setSectionTitle] = useState('');\n  const [addFirstField, setAddFirstField] = useState(false);\n  const [firstFieldData, setFirstFieldData] = useState({\n    label: '',\n    type: 'text',\n    required: false,\n    placeholder: '',\n  });\n\n  const handleSave = () => {\n    if (!sectionTitle) {\n      return;\n    }\n\n    const sectionData = {\n      id: `section-${nextSectionLetter}`,\n      title: `${nextSectionLetter}. ${sectionTitle}`,\n      fields: [],\n    };\n\n    // Add first field if specified\n    if (addFirstField && firstFieldData.label) {\n      const fieldKey = firstFieldData.label\n        .toLowerCase()\n        .replace(/[^a-z0-9]+/g, '_')\n        .replace(/^_|_$/g, '');\n      const suffix = Math.random().toString(36).substring(2, 6);\n      \n      sectionData.fields.push({\n        id: `field_${Date.now()}`,\n        key: `${fieldKey}_${suffix}`,\n        label: firstFieldData.label,\n        type: firstFieldData.type,\n        required: firstFieldData.required,\n        placeholder: firstFieldData.placeholder,\n        active: true,\n        locked: false,\n      });\n    }\n\n    onSave(sectionData);\n\n    // Reset form\n    setSectionTitle('');\n    setAddFirstField(false);\n    setFirstFieldData({\n      label: '',\n      type: 'text',\n      required: false,\n      placeholder: '',\n    });\n    \n    onClose();\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-2xl\">\n        <DialogHeader>\n          <DialogTitle>Add New Section</DialogTitle>\n        </DialogHeader>\n\n        <div className=\"space-y-4 py-4\">\n          {/* Section Title */}\n          <div className=\"space-y-2\">\n            <Label>Section Title *</Label>\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-lg font-semibold text-[#16569e]\">{nextSectionLetter}.</span>\n              <Input\n                value={sectionTitle}\n                onChange={(e) => setSectionTitle(e.target.value)}\n                placeholder=\"e.g., Vendor Extras\"\n                className=\"flex-1\"\n              />\n            </div>\n          </div>\n\n          {/* Add First Field Option */}\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center space-x-2\">\n              <button\n                onClick={() => setAddFirstField(!addFirstField)}\n                className=\"flex items-center gap-2 text-sm font-medium\"\n              >\n                {addFirstField ? (\n                  <ChevronDown className=\"h-4 w-4\" />\n                ) : (\n                  <ChevronRight className=\"h-4 w-4\" />\n                )}\n                Add first field now (optional)\n              </button>\n            </div>\n\n            {addFirstField && (\n              <div className=\"ml-6 space-y-4 p-4 border rounded-lg bg-gray-50\">\n                {/* Field Label */}\n                <div className=\"space-y-2\">\n                  <Label>Field Label</Label>\n                  <Input\n                    value={firstFieldData.label}\n                    onChange={(e) => setFirstFieldData(prev => ({ ...prev, label: e.target.value }))}\n                    placeholder=\"Field Label\"\n                  />\n                </div>\n\n                {/* Field Type */}\n                <div className=\"space-y-2\">\n                  <Label>Field Type</Label>\n                  <Select\n                    value={firstFieldData.type}\n                    onValueChange={(value) => setFirstFieldData(prev => ({ ...prev, type: value }))}\n                  >\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"text\">Text</SelectItem>\n                      <SelectItem value=\"textarea\">Textarea</SelectItem>\n                      <SelectItem value=\"number\">Number</SelectItem>\n                      <SelectItem value=\"date\">Date</SelectItem>\n                      <SelectItem value=\"boolean\">Boolean</SelectItem>\n                      <SelectItem value=\"select\">Select</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                {/* Required */}\n                <div className=\"flex items-center space-x-2\">\n                  <Switch\n                    checked={firstFieldData.required}\n                    onCheckedChange={(checked) => setFirstFieldData(prev => ({ ...prev, required: checked }))}\n                  />\n                  <Label>Required</Label>\n                </div>\n\n                {/* Placeholder */}\n                <div className=\"space-y-2\">\n                  <Label>Placeholder</Label>\n                  <Input\n                    value={firstFieldData.placeholder}\n                    onChange={(e) => setFirstFieldData(prev => ({ ...prev, placeholder: e.target.value }))}\n                    placeholder=\"Optional placeholder text\"\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <DialogFooter>\n          <Button variant=\"outline\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button onClick={handleSave} disabled={!sectionTitle}>\n            Create Section\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default AddSectionModal;"]}