{"version":3,"file":"BaseSubmoduleForm.jsx","sourceRoot":"","sources":["BaseSubmoduleForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { ArrowLeft, Save } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Select,\n  SelectContent,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Form } from '@/components/ui/form';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport { sailDesignSystem } from '@/config/sailDesignSystem';\n\ninterface BaseSubmoduleFormProps {\n  title: string;\n  sections: Array<{\n    id: string;\n    title: string;\n    letter?: string;\n  }>;\n  schema: z.ZodSchema<any>;\n  defaultValues: any;\n  onClose: () => void;\n  onSubmit: (data: any) => void;\n  children: (props: {\n    activeSection: string;\n    form: any;\n    showConfirmDialog: (\n      title: string,\n      description: string,\n      onConfirm: () => void\n    ) => void;\n  }) => React.ReactNode;\n}\n\nexport const BaseSubmoduleForm: React.FC<BaseSubmoduleFormProps> = ({\n  title,\n  sections,\n  schema,\n  defaultValues,\n  onClose,\n  onSubmit,\n  children,\n}) => {\n  const [activeSection, setActiveSection] = useState(sections[0]?.id || '');\n\n  // Confirmation dialog state\n  const [confirmDialog, setConfirmDialog] = useState<{\n    isOpen: boolean;\n    title: string;\n    description: string;\n    onConfirm: () => void;\n  }>({\n    isOpen: false,\n    title: '',\n    description: '',\n    onConfirm: () => {},\n  });\n\n  const form = useForm({\n    resolver: zodResolver(schema),\n    defaultValues,\n  });\n\n  // Helper function to show confirmation dialog\n  const showConfirmDialog = (\n    title: string,\n    description: string,\n    onConfirm: () => void\n  ) => {\n    setConfirmDialog({\n      isOpen: true,\n      title,\n      description,\n      onConfirm,\n    });\n  };\n\n  const closeConfirmDialog = () => {\n    setConfirmDialog({\n      isOpen: false,\n      title: '',\n      description: '',\n      onConfirm: () => {},\n    });\n  };\n\n  return (\n    <div className='fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4'>\n      <div className='bg-white rounded-lg w-full h-[calc(100vh-2rem)] flex flex-col overflow-hidden'>\n        {/* Header */}\n        <div className='sticky top-0 bg-white border-b p-3 sm:p-4 flex items-center justify-between'>\n          <div className='flex items-center gap-2 sm:gap-4'>\n            <Button variant='ghost' size='icon' onClick={onClose}>\n              <ArrowLeft className='h-4 w-4' />\n            </Button>\n            <h1 className='text-lg sm:text-xl font-bold'>{title}</h1>\n          </div>\n          <div className='flex gap-1 sm:gap-2'>\n            <Button\n              variant='outline'\n              size='sm'\n              onClick={() => form.handleSubmit(onSubmit)()}\n              className='items-center justify-center gap-2 whitespace-nowrap font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 text-primary-foreground shadow hover:bg-primary/90 h-8 rounded-md px-3 text-xs hidden sm:flex'\n              style={{ backgroundColor: sailDesignSystem.colors.primary }}\n            >\n              <Save className='h-4 w-4 mr-2' />\n              Save Draft\n            </Button>\n            <Button\n              variant='outline'\n              size='sm'\n              onClick={() => form.handleSubmit(onSubmit)()}\n              className='sm:hidden'\n            >\n              <Save className='h-4 w-4' />\n            </Button>\n          </div>\n        </div>\n\n        {/* Mobile Navigation Dropdown */}\n        <div className='lg:hidden bg-gray-50 border-b p-3'>\n          <select\n            value={activeSection}\n            onChange={e => setActiveSection(e.target.value)}\n            className='w-full p-2 border border-gray-300 rounded-md text-sm bg-white'\n          >\n            {sections.map(section => (\n              <option key={section.id} value={section.id}>\n                {section.title}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className='flex flex-1 overflow-hidden'>\n          {/* Desktop Sidebar Navigation - Stepper Design */}\n          <div\n            className='hidden lg:block w-72 overflow-y-auto'\n            style={{ backgroundColor: sailDesignSystem.colors.background }}\n          >\n            <div className='p-6'>\n              <nav className='space-y-1'>\n                {sections.map((section, index) => {\n                  const isActive = activeSection === section.id;\n                  const isCompleted = false; // You can add completion logic here\n                  const sectionLetter =\n                    section.letter || section.id.charAt(0).toUpperCase();\n\n                  return (\n                    <div key={section.id} className='relative'>\n                      <button\n                        onClick={() => setActiveSection(section.id)}\n                        className={`w-full flex items-center p-3 rounded-lg text-left transition-colors hover:bg-gray-50 ${\n                          isActive ? 'bg-blue-50' : ''\n                        }`}\n                      >\n                        <div\n                          className={`w-10 h-10 rounded-full flex items-center justify-center text-white font-semibold mr-4 ${\n                            isActive\n                              ? 'bg-blue-600'\n                              : isCompleted\n                                ? 'bg-green-500'\n                                : 'bg-gray-400'\n                          }`}\n                        >\n                          {sectionLetter}\n                        </div>\n                        <div className='flex-1'>\n                          <div\n                            className={`font-medium text-sm ${isActive ? 'text-blue-700' : 'text-gray-700'}`}\n                          >\n                            {section.title.replace(/^Part [A-Z]: /, '')}\n                          </div>\n                        </div>\n                      </button>\n                      {index < sections.length - 1 && (\n                        <div className='absolute left-[2rem] top-16 w-0.5 h-4 bg-gray-300'></div>\n                      )}\n                    </div>\n                  );\n                })}\n              </nav>\n            </div>\n          </div>\n\n          {/* Form Content */}\n          <div\n            className='flex-1 overflow-y-auto p-3 sm:p-4 lg:p-6'\n            style={{ backgroundColor: sailDesignSystem.colors.background }}\n          >\n            <Form {...form}>\n              <form\n                onSubmit={form.handleSubmit(onSubmit)}\n                className='space-y-4 sm:space-y-6'\n              >\n                {children({ activeSection, form, showConfirmDialog })}\n              </form>\n            </Form>\n          </div>\n        </div>\n      </div>\n\n      {/* Confirmation Dialog */}\n      <AlertDialog\n        open={confirmDialog.isOpen}\n        onOpenChange={closeConfirmDialog}\n      >\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>{confirmDialog.title}</AlertDialogTitle>\n            <AlertDialogDescription>\n              {confirmDialog.description}\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel onClick={closeConfirmDialog}>\n              Cancel\n            </AlertDialogCancel>\n            <AlertDialogAction onClick={confirmDialog.onConfirm}>\n              Yes\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </div>\n  );\n};\n\n// Reusable Card Section Component\nexport const FormSection: React.FC<{\n  title: string;\n  description?: string;\n  children: React.ReactNode;\n}> = ({ title, description, children }) => (\n  <Card className='bg-white'>\n    <CardContent className='p-6'>\n      <div className='pb-4 mb-6'>\n        <h3\n          className='text-xl font-semibold mb-2'\n          style={{ color: sailDesignSystem.colors.headerText }}\n        >\n          {title}\n        </h3>\n        {description && (\n          <div\n            style={{ color: sailDesignSystem.colors.headerText }}\n            className='text-sm'\n          >\n            {description}\n          </div>\n        )}\n        <div\n          className='w-full h-0.5 mt-2'\n          style={{ backgroundColor: sailDesignSystem.colors.headerText }}\n        ></div>\n      </div>\n      {children}\n    </CardContent>\n  </Card>\n);\n\n// Reusable Table Component\nexport const FormTable: React.FC<{\n  headers: string[];\n  children: React.ReactNode;\n}> = ({ headers, children }) => (\n  <div className='bg-white rounded-lg shadow-md overflow-hidden'>\n    <div className='overflow-x-auto'>\n      <table className='w-full min-w-[600px]'>\n        <thead className='bg-gray-100'>\n          <tr>\n            {headers.map((header, index) => (\n              <th\n                key={index}\n                className='text-gray-600 text-xs font-normal py-2 px-4 text-left'\n              >\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody className='bg-white'>{children}</tbody>\n      </table>\n    </div>\n  </div>\n);\n\n// Reusable Form Field Component\nexport const SAILFormField: React.FC<{\n  label: string;\n  children: React.ReactNode;\n  className?: string;\n}> = ({ label, children, className = '' }) => (\n  <div className={className}>\n    <Label className='text-xs text-gray-500 tracking-wide'>{label}</Label>\n    {children}\n  </div>\n);\n\n// Reusable Input Component with SAIL styling\nexport const SAILInput: React.FC<\n  React.InputHTMLAttributes<HTMLInputElement>\n> = props => (\n  <Input {...props} className={`bg-[#ffffff] ${props.className || ''}`} />\n);\n\n// Reusable Select Component with SAIL styling\nexport const SAILSelect: React.FC<{\n  value: string;\n  onValueChange: (value: string) => void;\n  placeholder?: string;\n  children: React.ReactNode;\n}> = ({ value, onValueChange, placeholder, children }) => (\n  <Select value={value} onValueChange={onValueChange}>\n    <SelectTrigger className='bg-[#ffffff]'>\n      <SelectValue placeholder={placeholder} />\n    </SelectTrigger>\n    <SelectContent>{children}</SelectContent>\n  </Select>\n);\n\n// Reusable Button Component with SAIL styling\nexport const SAILButton: React.FC<\n  React.ButtonHTMLAttributes<HTMLButtonElement> & {\n    variant?: 'primary' | 'secondary' | 'success';\n    children: React.ReactNode;\n  }\n> = ({ variant = 'primary', children, className = '', ...props }) => {\n  const getVariantClasses = () => {\n    switch (variant) {\n      case 'primary':\n        return 'bg-[#60A5FA] hover:bg-[#3B82F6] text-white';\n      case 'secondary':\n        return 'bg-blue-600 hover:bg-blue-700 text-white';\n      case 'success':\n        return 'bg-[#20c43f] hover:bg-[#1ba838] text-white';\n      default:\n        return 'bg-[#60A5FA] hover:bg-[#3B82F6] text-white';\n    }\n  };\n\n  return (\n    <Button className={`px-8 ${getVariantClasses()} ${className}`} {...props}>\n      {children}\n    </Button>\n  );\n};\n"]}