{"version":3,"file":"AgGridCellRenderers.jsx","sourceRoot":"","sources":["AgGridCellRenderers.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ICellRendererParams } from 'ag-grid-community';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Pen, Timer, Eye, Edit, Plus, Minus } from 'lucide-react';\n\n// Status badge renderer\nexport const StatusCellRenderer = (params: ICellRendererParams) => {\n  const getStatusColor = (status: string) => {\n    const normalizedStatus = status.toLowerCase();\n    switch (normalizedStatus) {\n      case 'completed':\n      case 'approved':\n        return 'bg-green-100 text-green-800';\n      case 'due':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'due (grace p)':\n        return 'bg-orange-100 text-orange-800';\n      case 'overdue':\n        return 'bg-red-100 text-red-800';\n      case 'postponed':\n        return 'bg-blue-100 text-blue-800';\n      case 'pending approval':\n        return 'bg-purple-100 text-purple-800';\n      case 'rejected':\n        return 'bg-red-100 text-red-800';\n      case 'draft':\n        return 'bg-gray-100 text-gray-800';\n      case 'ok':\n        return 'bg-green-100 text-green-800';\n      case 'low':\n        return 'bg-orange-100 text-orange-800';\n      case 'minimum':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  if (!params.value) return '';\n\n  return (\n    <Badge className={getStatusColor(params.value)}>\n      {params.value.toUpperCase()}\n    </Badge>\n  );\n};\n\n// Critical indicator cell renderer\nexport const CriticalCellRenderer = (params: ICellRendererParams) => {\n  const isCritical = params.value === 'Yes' || params.value === 'Critical';\n\n  return (\n    <Badge\n      className={\n        isCritical ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-800'\n      }\n    >\n      {isCritical ? 'Critical' : 'No'}\n    </Badge>\n  );\n};\n\n// Stock status cell renderer for spares\nexport const StockStatusCellRenderer = (params: ICellRendererParams) => {\n  const { data } = params;\n\n  if (!data) return '';\n\n  // Calculate stock status based on ROB and minimum values\n  let stockStatus = '';\n  const rob = data.rob || 0;\n  const min = data.min || 0;\n\n  if (rob >= min && min > 0) {\n    stockStatus = 'OK';\n  } else if (rob > 0 && rob < min) {\n    stockStatus = 'Low';\n  } else if (rob === 0) {\n    stockStatus = 'Minimum';\n  }\n\n  // Use provided stock status if available, otherwise calculated\n  const status = data.stock || stockStatus;\n\n  return (\n    <StatusCellRenderer\n      value={status}\n      data={data}\n      node={params.node}\n      colDef={params.colDef}\n      column={params.column}\n      rowIndex={params.rowIndex}\n      api={params.api}\n      columnApi={params.columnApi}\n      context={params.context}\n    />\n  );\n};\n\n// Work Orders actions cell renderer\nexport const WorkOrderActionsCellRenderer = (params: ICellRendererParams) => {\n  const { data, context } = params;\n\n  if (!data || !context) return null;\n\n  const handleEdit = () => {\n    if (context.onEdit) {\n      context.onEdit(data);\n    }\n  };\n\n  const handlePostpone = () => {\n    if (context.onPostpone) {\n      context.onPostpone(data);\n    }\n  };\n\n  const handleApprove = () => {\n    console.log('🎯 Approve button clicked!', data);\n    if (context.onApprove) {\n      context.onApprove(data);\n    } else {\n      console.log('❌ context.onApprove not available');\n    }\n  };\n\n  const handleReject = () => {\n    console.log('🎯 Reject button clicked!', data);\n    if (context.onReject) {\n      context.onReject(data);\n    } else {\n      console.log('❌ context.onReject not available');\n    }\n  };\n\n  // Show different actions based on record type and status\n  const isExecution = data.isExecution;\n  const isPendingApproval = data.status === 'Pending Approval';\n\n  return (\n    <div className='flex gap-1 justify-center'>\n      {!isExecution && (\n        <>\n          <Button size='sm' variant='outline' onClick={handleEdit}>\n            <Pen className='w-3 h-3' />\n          </Button>\n          <Button size='sm' variant='outline' onClick={handlePostpone}>\n            <Timer className='w-3 h-3' />\n          </Button>\n        </>\n      )}\n\n      {isExecution && isPendingApproval && (\n        <>\n          <Button size='sm' variant='outline' onClick={handleApprove}>\n            Approve\n          </Button>\n          <Button size='sm' variant='outline' onClick={handleReject}>\n            Reject\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\n// Running Hours actions cell renderer\nexport const RunningHoursActionsCellRenderer = (\n  params: ICellRendererParams\n) => {\n  const { data, context } = params;\n\n  if (!data || !context) return null;\n\n  const handleUpdate = () => {\n    if (context.onUpdate) {\n      context.onUpdate(data);\n    }\n  };\n\n  return (\n    <div className='flex gap-1 justify-center'>\n      <Button\n        size='sm'\n        variant='outline'\n        onClick={handleUpdate}\n        className='bg-[#52baf3] hover:bg-[#4aa3d9] text-white border-[#52baf3]'\n      >\n        Update RH\n      </Button>\n    </div>\n  );\n};\n\n// Spares actions cell renderer\nexport const SparesActionsCellRenderer = (params: ICellRendererParams) => {\n  const { data, context } = params;\n\n  if (!data || !context) return null;\n\n  const handleConsume = () => {\n    if (context.onConsume) {\n      context.onConsume(data);\n    }\n  };\n\n  const handleReceive = () => {\n    if (context.onReceive) {\n      context.onReceive(data);\n    }\n  };\n\n  const handleEdit = () => {\n    if (context.onEdit) {\n      context.onEdit(data);\n    }\n  };\n\n  const handleHistory = () => {\n    if (context.onHistory) {\n      context.onHistory(data);\n    }\n  };\n\n  return (\n    <div className='flex gap-1 justify-center'>\n      <Button size='sm' variant='outline' onClick={handleConsume}>\n        <Minus className='w-3 h-3' />\n      </Button>\n      <Button size='sm' variant='outline' onClick={handleReceive}>\n        <Plus className='w-3 h-3' />\n      </Button>\n      <Button size='sm' variant='outline' onClick={handleEdit}>\n        <Edit className='w-3 h-3' />\n      </Button>\n      <Button size='sm' variant='outline' onClick={handleHistory}>\n        <Eye className='w-3 h-3' />\n      </Button>\n    </div>\n  );\n};\n\n// Utilization rate cell renderer\nexport const UtilizationRateCellRenderer = (params: ICellRendererParams) => {\n  const rate = params.value;\n\n  if (rate === null) {\n    return <span className='text-gray-400'>N/A</span>;\n  }\n\n  if (rate === undefined) {\n    return <span className='text-gray-400'>Loading...</span>;\n  }\n\n  return <span>{rate.toFixed(1)} hrs/day</span>;\n};\n\n// Date cell renderer\nexport const DateCellRenderer = (params: ICellRendererParams) => {\n  if (!params.value) return '';\n\n  // Handle non-date strings (like 'Never')\n  if (typeof params.value === 'string' && isNaN(Date.parse(params.value))) {\n    return params.value;\n  }\n\n  // Format date consistently\n  const date = new Date(params.value);\n  if (isNaN(date.getTime())) {\n    return params.value;\n  }\n\n  return date.toLocaleDateString('en-GB', {\n    day: '2-digit',\n    month: 'short',\n    year: 'numeric',\n  });\n};\n\n// Numbers cell renderer with formatting\nexport const NumberCellRenderer = (params: ICellRendererParams) => {\n  if (!params.value && params.value !== 0) return '';\n\n  const value =\n    typeof params.value === 'string'\n      ? parseFloat(params.value.replace(/[^0-9.-]/g, ''))\n      : params.value;\n\n  return value.toLocaleString();\n};\n\n// Stores actions cell renderer\nexport const StoresActionsCellRenderer = (params: ICellRendererParams) => {\n  const { data, context } = params;\n\n  if (!data || !context) return null;\n\n  const handleEdit = () => {\n    if (context.onEdit) {\n      context.onEdit(data);\n    }\n  };\n\n  const handleConsume = () => {\n    if (context.onConsume) {\n      context.onConsume(data);\n    }\n  };\n\n  const handleReceive = () => {\n    if (context.onReceive) {\n      context.onReceive(data);\n    }\n  };\n\n  return (\n    <div className='flex gap-1 justify-center'>\n      <Button size='sm' variant='outline' onClick={handleEdit}>\n        <Edit className='w-3 h-3' />\n      </Button>\n      <Button size='sm' variant='outline' onClick={handleConsume}>\n        <Minus className='w-3 h-3' />\n      </Button>\n      <Button size='sm' variant='outline' onClick={handleReceive}>\n        <Plus className='w-3 h-3' />\n      </Button>\n    </div>\n  );\n};\n"]}