{"version":3,"file":"form-popup.jsx","sourceRoot":"","sources":["form-popup.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;;AAEZ,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAC9B,OAAO,EAAE,CAAC,EAAE,MAAM,cAAc,CAAA;AAChC,OAAO,EAAE,EAAE,EAAE,MAAM,aAAa,CAAA;AAUhC;;;;;;;;;;;;;GAaG;AACH,MAAM,CAAC,IAAM,iBAAiB,GAAG,KAAK,CAAC,UAAU,CAG/C,UAAC,EAAgE,EAAE,GAAG;IAAnE,IAAA,SAAS,eAAA,EAAE,QAAQ,cAAA,EAAE,OAAO,aAAA,EAAE,KAAK,WAAA,EAAE,cAAa,EAAb,MAAM,mBAAG,IAAI,KAAA,EAAK,KAAK,cAA9D,uDAAgE,CAAF;IAC/D,IAAI,CAAC,MAAM;QAAE,OAAO,IAAI,CAAC;IAEzB,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,gFAAgF,CAC7F;MAAA,CAAC,GAAG,CACF,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,SAAS,CAAC,CAAC,EAAE,CACX,yFAAyF,EACzF,SAAS,CACV,CAAC,CACF,IAAI,KAAK,CAAC,CAEV;QAAA,CAAC,KAAK,IAAI,CACR,CAAC,GAAG,CAAC,SAAS,CAAC,6EAA6E,CAC1F;YAAA,CAAC,EAAE,CAAC,SAAS,CAAC,8BAA8B,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CACxD;YAAA,CAAC,OAAO,IAAI,CACV,CAAC,MAAM,CACL,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,SAAS,CAAC,oLAAoL,CAE9L;gBAAA,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,EACtB;gBAAA,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CACvC;cAAA,EAAE,MAAM,CAAC,CACV,CACH;UAAA,EAAE,GAAG,CAAC,CACP,CACD;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,wBAAwB,CACrC;UAAA,CAAC,QAAQ,CACX;QAAA,EAAE,GAAG,CACP;MAAA,EAAE,GAAG,CACP;IAAA,EAAE,GAAG,CAAC,CACP,CAAA;AACH,CAAC,CAAC,CAAA;AACF,iBAAiB,CAAC,WAAW,GAAG,mBAAmB,CAAA;AAEnD;;GAEG;AACH,MAAM,CAAC,IAAM,gBAAgB,GAAG,KAAK,CAAC,UAAU,CAG9C,UAAC,EAAuB,EAAE,GAAG;IAA1B,IAAA,SAAS,eAAA,EAAK,KAAK,cAArB,aAAuB,CAAF;IAAY,OAAA,CAClC,CAAC,GAAG,CACF,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,SAAS,CAAC,CAAC,EAAE,CACX,gFAAgF,EAChF,SAAS,CACV,CAAC,CACF,IAAI,KAAK,CAAC,EACV,CACH,CAAA;CAAA,CAAC,CAAA;AACF,gBAAgB,CAAC,WAAW,GAAG,kBAAkB,CAAA;AAEjD;;GAEG;AACH,MAAM,CAAC,IAAM,gBAAgB,GAAG,KAAK,CAAC,UAAU,CAG9C,UAAC,EAAuB,EAAE,GAAG;IAA1B,IAAA,SAAS,eAAA,EAAK,KAAK,cAArB,aAAuB,CAAF;IAAY,OAAA,CAClC,CAAC,GAAG,CACF,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,SAAS,CAAC,CAAC,EAAE,CACX,yFAAyF,EACzF,SAAS,CACV,CAAC,CACF,IAAI,KAAK,CAAC,EACV,CACH,CAAA;CAAA,CAAC,CAAA;AACF,gBAAgB,CAAC,WAAW,GAAG,kBAAkB,CAAA;AAEjD,OAAO,EACL,iBAAiB,IAAI,SAAS,GAG/B,CAAA","sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { X } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface FormPopupProps {\n  children: React.ReactNode\n  className?: string\n  onClose?: () => void\n  title?: string\n  isOpen?: boolean\n}\n\n/**\n * StandardFormPopup - A reusable component for consistent form popup spacing\n * \n * Features:\n * - Equal spacing on all sides (1rem padding)\n * - Consistent modal height calculation\n * - Responsive design\n * - Standard close button behavior\n * \n * Usage:\n * <StandardFormPopup title=\"Form Title\" onClose={handleClose}>\n *   <FormContent />\n * </StandardFormPopup>\n */\nexport const StandardFormPopup = React.forwardRef<\n  HTMLDivElement,\n  FormPopupProps\n>(({ className, children, onClose, title, isOpen = true, ...props }, ref) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div\n        ref={ref}\n        className={cn(\n          \"bg-white rounded-lg shadow-lg w-full h-[calc(100vh-2rem)] flex flex-col overflow-hidden\",\n          className\n        )}\n        {...props}\n      >\n        {title && (\n          <div className=\"sticky top-0 bg-white border-b p-3 sm:p-4 flex items-center justify-between\">\n            <h1 className=\"text-lg sm:text-xl font-bold\">{title}</h1>\n            {onClose && (\n              <button\n                onClick={onClose}\n                className=\"rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none\"\n              >\n                <X className=\"h-4 w-4\" />\n                <span className=\"sr-only\">Close</span>\n              </button>\n            )}\n          </div>\n        )}\n        <div className=\"flex-1 overflow-hidden\">\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n})\nStandardFormPopup.displayName = \"StandardFormPopup\"\n\n/**\n * FormPopupOverlay - A standalone overlay component for custom implementations\n */\nexport const FormPopupOverlay = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\",\n      className\n    )}\n    {...props}\n  />\n))\nFormPopupOverlay.displayName = \"FormPopupOverlay\"\n\n/**\n * FormPopupContent - A content wrapper with consistent spacing\n */\nexport const FormPopupContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"bg-white rounded-lg shadow-lg w-full h-[calc(100vh-2rem)] flex flex-col overflow-hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nFormPopupContent.displayName = \"FormPopupContent\"\n\nexport {\n  StandardFormPopup as FormPopup,\n  FormPopupOverlay,\n  FormPopupContent,\n}"]}