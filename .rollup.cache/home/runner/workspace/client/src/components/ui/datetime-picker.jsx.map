{"version":3,"file":"datetime-picker.jsx","sourceRoot":"","sources":["datetime-picker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Calendar, Clock } from 'lucide-react';\nimport { cn } from '../../lib/utils';\nimport { Button } from './button';\nimport { Input } from './input';\nimport { Popover, PopoverContent, PopoverTrigger } from './popover';\nimport { Calendar as CalendarComponent } from './calendar';\nimport { format, parse, isValid } from 'date-fns';\n\ninterface DateTimePickerProps {\n  value?: string;\n  onChange?: (value: string) => void;\n  placeholder?: string;\n  className?: string;\n  disabled?: boolean;\n}\n\nexport function DateTimePicker({\n  value,\n  onChange,\n  placeholder = 'Select date & time',\n  className,\n  disabled,\n}: DateTimePickerProps) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [timeValue, setTimeValue] = React.useState('');\n\n  // Parse the datetime-local string format (YYYY-MM-DDTHH:MM)\n  const dateTime = value\n    ? parse(value, \"yyyy-MM-dd'T'HH:mm\", new Date())\n    : undefined;\n  const isValidDateTime = dateTime && isValid(dateTime);\n\n  // Extract time from value\n  React.useEffect(() => {\n    if (value) {\n      const timePart = value.split('T')[1] || '';\n      setTimeValue(timePart);\n    }\n  }, [value]);\n\n  const handleDateSelect = (date: Date | undefined) => {\n    if (!date) return;\n\n    const dateStr = format(date, 'yyyy-MM-dd');\n    const time = timeValue || '00:00';\n    const newValue = `${dateStr}T${time}`;\n\n    onChange?.(newValue);\n  };\n\n  const handleTimeChange = (time: string) => {\n    setTimeValue(time);\n\n    if (dateTime) {\n      const dateStr = format(dateTime, 'yyyy-MM-dd');\n      const newValue = `${dateStr}T${time}`;\n      onChange?.(newValue);\n    }\n  };\n\n  const displayValue = isValidDateTime\n    ? `${format(dateTime, 'dd/MM/yyyy')} ${timeValue}`\n    : '';\n\n  return (\n    <Popover open={isOpen} onOpenChange={setIsOpen}>\n      <PopoverTrigger asChild>\n        <div\n          className={cn(\n            'flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1 cursor-pointer',\n            !displayValue && 'text-muted-foreground',\n            disabled && 'cursor-not-allowed opacity-50',\n            className\n          )}\n          style={{\n            height: '36px',\n            minHeight: '36px',\n            maxHeight: '36px',\n            boxSizing: 'border-box',\n          }}\n        >\n          <span>{displayValue || placeholder}</span>\n          <Calendar className='ml-2 h-4 w-4 shrink-0 opacity-50' />\n        </div>\n      </PopoverTrigger>\n      <PopoverContent className='w-auto p-0' align='start'>\n        <div className='border-b border-border p-3'>\n          <div className='flex items-center space-x-2'>\n            <Clock className='h-4 w-4 opacity-50' />\n            <Input\n              type='time'\n              value={timeValue}\n              onChange={e => handleTimeChange(e.target.value)}\n              className='h-8'\n            />\n          </div>\n        </div>\n        <CalendarComponent\n          mode='single'\n          selected={isValidDateTime ? dateTime : undefined}\n          onSelect={handleDateSelect}\n          initialFocus\n        />\n      </PopoverContent>\n    </Popover>\n  );\n}\n"]}