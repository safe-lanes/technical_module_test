{"version":3,"file":"ComponentTreeSelector.jsx","sourceRoot":"","sources":["ComponentTreeSelector.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { ChevronRight, ChevronDown } from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { Search } from 'lucide-react';\nimport { ScrollArea } from '@/components/ui/scroll-area';\n\ninterface ComponentNode {\n  id: string;\n  code: string;\n  name: string;\n  parentId: string | null;\n  maker?: string;\n  model?: string;\n  serialNo?: string;\n  deptCategory?: string;\n  componentCategory?: string;\n  location?: string;\n  commissionedDate?: string;\n  critical?: boolean;\n  classItem?: boolean;\n  children?: ComponentNode[];\n}\n\ninterface ComponentTreeSelectorProps {\n  components: ComponentNode[];\n  selectedItem: ComponentNode | null;\n  onSelect: (item: ComponentNode) => void;\n  searchQuery: string;\n  onSearchChange: (query: string) => void;\n}\n\nexport function ComponentTreeSelector({\n  components,\n  selectedItem,\n  onSelect,\n  searchQuery,\n  onSearchChange,\n}: ComponentTreeSelectorProps) {\n  const [expandedNodes, setExpandedNodes] = useState<Set<string>>(\n    new Set(['6', '6.1', '6.1.1'])\n  );\n\n  const toggleNode = (nodeId: string) => {\n    setExpandedNodes(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(nodeId)) {\n        newSet.delete(nodeId);\n      } else {\n        newSet.add(nodeId);\n      }\n      return newSet;\n    });\n  };\n\n  const filterComponents = (\n    nodes: ComponentNode[],\n    query: string\n  ): ComponentNode[] => {\n    if (!query) return nodes;\n\n    const lowerQuery = query.toLowerCase();\n    return nodes.reduce((acc: ComponentNode[], node) => {\n      const matches =\n        node.name.toLowerCase().includes(lowerQuery) ||\n        node.code.toLowerCase().includes(lowerQuery);\n\n      const filteredChildren = node.children\n        ? filterComponents(node.children, query)\n        : [];\n\n      if (matches || filteredChildren.length > 0) {\n        acc.push({\n          ...node,\n          children: filteredChildren,\n        });\n      }\n\n      return acc;\n    }, []);\n  };\n\n  const renderComponentTree = (nodes: ComponentNode[], level: number = 0) => {\n    return nodes.map(node => {\n      const hasChildren = node.children && node.children.length > 0;\n      const isExpanded = expandedNodes.has(node.id);\n      const isSelected = selectedItem?.id === node.id;\n\n      return (\n        <div key={node.id}>\n          <div\n            className={`flex items-center px-3 py-2 cursor-pointer hover:bg-gray-50 border-b border-gray-100 ${\n              isSelected ? 'bg-blue-50' : ''\n            }`}\n            style={{ paddingLeft: `${level * 20 + 12}px` }}\n            onClick={() => onSelect(node)}\n          >\n            <button\n              className='mr-2 flex-shrink-0'\n              onClick={e => {\n                e.stopPropagation();\n                if (hasChildren) {\n                  toggleNode(node.id);\n                }\n              }}\n            >\n              {hasChildren ? (\n                isExpanded ? (\n                  <ChevronDown className='h-4 w-4 text-gray-600' />\n                ) : (\n                  <ChevronRight className='h-4 w-4 text-gray-600' />\n                )\n              ) : (\n                <span className='w-4 h-4 inline-block' />\n              )}\n            </button>\n            <span className='text-sm text-gray-700'>\n              {node.code} {node.name}\n            </span>\n          </div>\n          {hasChildren && isExpanded && (\n            <div>{renderComponentTree(node.children!, level + 1)}</div>\n          )}\n        </div>\n      );\n    });\n  };\n\n  const filteredComponents = filterComponents(components, searchQuery);\n\n  return (\n    <div className='h-full flex flex-col'>\n      <div className='p-4 border-b'>\n        <div className='relative'>\n          <Search className='absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4' />\n          <Input\n            type='text'\n            placeholder='Search components...'\n            value={searchQuery}\n            onChange={e => onSearchChange(e.target.value)}\n            className='pl-10'\n          />\n        </div>\n      </div>\n\n      <ScrollArea className='flex-1'>\n        <div className='pb-4'>\n          {filteredComponents.length > 0 ? (\n            renderComponentTree(filteredComponents)\n          ) : (\n            <div className='text-center text-gray-500 py-8'>\n              No components found\n            </div>\n          )}\n        </div>\n      </ScrollArea>\n    </div>\n  );\n}\n"]}