{"version":3,"file":"ModuleNavigator.jsx","sourceRoot":"","sources":["ModuleNavigator.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Grid3X3, BarChart3 } from 'lucide-react';\n\ninterface Module {\n  id: string;\n  name: string;\n  icon: React.ReactNode;\n  description?: string;\n  available: boolean;\n}\n\ninterface ModuleNavigatorProps {\n  currentModule: string;\n  onModuleChange: (moduleId: string) => void;\n}\n\nexport function ModuleNavigator({\n  currentModule,\n  onModuleChange,\n}: ModuleNavigatorProps) {\n  const [showModuleDialog, setShowModuleDialog] = useState(false);\n\n  const modules: Module[] = [\n    {\n      id: 'technical-pms',\n      name: 'Technical (PMS)',\n      icon: <BarChart3 className='h-5 w-5' />,\n      description: 'Planned Maintenance System',\n      available: true,\n    },\n    {\n      id: 'crewing',\n      name: 'Crewing',\n      icon: <BarChart3 className='h-5 w-5' />,\n      description: 'Crew management and appraisals',\n      available: false,\n    },\n  ];\n\n  const handleModuleSelect = (moduleId: string) => {\n    onModuleChange(moduleId);\n    setShowModuleDialog(false);\n  };\n\n  return (\n    <>\n      <div\n        className='flex flex-col items-center justify-center cursor-pointer'\n        onClick={() => setShowModuleDialog(true)}\n      >\n        <div className='w-6 h-6 mb-1'>\n          <Grid3X3 className='h-6 w-6 text-[#4f5863]' />\n        </div>\n        <div className=\"text-[#4f5863] text-[10px] font-normal font-['Mulish',Helvetica]\">\n          Modules\n        </div>\n      </div>\n\n      <Dialog open={showModuleDialog} onOpenChange={setShowModuleDialog}>\n        <DialogContent className='sm:max-w-md'>\n          <DialogHeader>\n            <DialogTitle>Select Module</DialogTitle>\n          </DialogHeader>\n          <div className='space-y-2'>\n            {modules.map(module => (\n              <Button\n                key={module.id}\n                variant={currentModule === module.id ? 'default' : 'ghost'}\n                className='w-full justify-start h-auto p-4'\n                onClick={() => handleModuleSelect(module.id)}\n                disabled={!module.available}\n              >\n                <div className='flex items-center gap-3'>\n                  {module.icon}\n                  <div className='text-left'>\n                    <div className='font-medium'>{module.name}</div>\n                    {module.description && (\n                      <div className='text-sm text-muted-foreground'>\n                        {module.description}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </Button>\n            ))}\n          </div>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n"]}