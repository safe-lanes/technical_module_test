{"version":3,"file":"AlertHistory.jsx","sourceRoot":"","sources":["AlertHistory.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Calendar, Filter, CheckCircle, AlertCircle, Clock, Mail, Bell } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface AlertEvent {\n  id: number;\n  policyId: number;\n  alertType: string;\n  priority: string;\n  objectType: string;\n  objectId: string;\n  vesselId: string;\n  dedupeKey: string;\n  state: string;\n  payload: string;\n  ackBy?: string;\n  ackAt?: Date;\n  createdAt: Date;\n}\n\ninterface AlertDelivery {\n  id: number;\n  eventId: number;\n  channel: string;\n  recipient: string;\n  status: string;\n  errorMessage?: string;\n  sentAt?: Date;\n  acknowledgedAt?: Date;\n}\n\nconst alertTypeLabels: Record<string, string> = {\n  maintenance_due: 'Maintenance Due',\n  critical_inventory: 'Critical Inventory',\n  running_hours: 'Running Hours',\n  certificate_expiration: 'Certificate Expiry',\n  system_backup: 'System Backup'\n};\n\nexport default function AlertHistory() {\n  const { toast } = useToast();\n  const [filters, setFilters] = useState({\n    startDate: '',\n    endDate: '',\n    alertType: 'all',\n    priority: 'all',\n    status: ''\n  });\n  const [expandedEvent, setExpandedEvent] = useState<number | null>(null);\n\n  // Fetch alert events\n  const { data: events, isLoading, refetch } = useQuery({\n    queryKey: ['/api/alerts/events', filters],\n    queryFn: async () => {\n      const params = new URLSearchParams();\n      if (filters.startDate) params.append('startDate', filters.startDate);\n      if (filters.endDate) params.append('endDate', filters.endDate);\n      if (filters.alertType && filters.alertType !== 'all') params.append('alertType', filters.alertType);\n      if (filters.priority && filters.priority !== 'all') params.append('priority', filters.priority);\n      \n      const response = await fetch(`/api/alerts/events?${params}`);\n      if (!response.ok) throw new Error('Failed to fetch events');\n      return response.json();\n    }\n  });\n\n  const handleAcknowledge = async (eventId: number) => {\n    try {\n      const response = await fetch(`/api/alerts/events/${eventId}/acknowledge`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userId: 'user1' })\n      });\n      \n      if (!response.ok) throw new Error('Failed to acknowledge event');\n      \n      toast({\n        title: 'Alert Acknowledged',\n        description: 'The alert has been acknowledged successfully.'\n      });\n      \n      refetch();\n    } catch (error) {\n      toast({\n        title: 'Acknowledgment Failed',\n        description: 'Failed to acknowledge the alert. Please try again.',\n        variant: 'destructive'\n      });\n    }\n  };\n\n  const handleFilterChange = (key: string, value: string) => {\n    setFilters(prev => ({ ...prev, [key]: value }));\n  };\n\n  const getPriorityBadge = (priority: string) => {\n    const variants: Record<string, 'default' | 'secondary' | 'destructive'> = {\n      low: 'secondary',\n      medium: 'default',\n      high: 'destructive'\n    };\n    \n    return (\n      <Badge variant={variants[priority] || 'default'}>\n        {priority.toUpperCase()}\n      </Badge>\n    );\n  };\n\n  const getStatusIcon = (event: AlertEvent) => {\n    if (event.ackAt) {\n      return <CheckCircle className=\"h-4 w-4 text-green-600\" />;\n    }\n    if (event.priority === 'high') {\n      return <AlertCircle className=\"h-4 w-4 text-red-600\" />;\n    }\n    return <Clock className=\"h-4 w-4 text-yellow-600\" />;\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Filters */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Filters</CardTitle>\n          <CardDescription>Filter alert history by date, type, and priority</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n            <div>\n              <Label htmlFor=\"start-date\">Start Date</Label>\n              <Input\n                id=\"start-date\"\n                type=\"date\"\n                value={filters.startDate}\n                onChange={(e) => handleFilterChange('startDate', e.target.value)}\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"end-date\">End Date</Label>\n              <Input\n                id=\"end-date\"\n                type=\"date\"\n                value={filters.endDate}\n                onChange={(e) => handleFilterChange('endDate', e.target.value)}\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"alert-type\">Alert Type</Label>\n              <Select\n                value={filters.alertType}\n                onValueChange={(value) => handleFilterChange('alertType', value)}\n              >\n                <SelectTrigger id=\"alert-type\">\n                  <SelectValue placeholder=\"All Types\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Types</SelectItem>\n                  <SelectItem value=\"maintenance_due\">Maintenance Due</SelectItem>\n                  <SelectItem value=\"critical_inventory\">Critical Inventory</SelectItem>\n                  <SelectItem value=\"running_hours\">Running Hours</SelectItem>\n                  <SelectItem value=\"certificate_expiration\">Certificate Expiry</SelectItem>\n                  <SelectItem value=\"system_backup\">System Backup</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            <div>\n              <Label htmlFor=\"priority\">Priority</Label>\n              <Select\n                value={filters.priority}\n                onValueChange={(value) => handleFilterChange('priority', value)}\n              >\n                <SelectTrigger id=\"priority\">\n                  <SelectValue placeholder=\"All Priorities\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Priorities</SelectItem>\n                  <SelectItem value=\"low\">Low</SelectItem>\n                  <SelectItem value=\"medium\">Medium</SelectItem>\n                  <SelectItem value=\"high\">High</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"flex items-end\">\n              <Button \n                onClick={() => refetch()} \n                className=\"w-full\"\n              >\n                <Filter className=\"mr-2 h-4 w-4\" />\n                Apply Filters\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Summary Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium\">Total Alerts</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{events?.length || 0}</div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium\">Unacknowledged</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-orange-600\">\n              {events?.filter((e: AlertEvent) => !e.ackAt).length || 0}\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium\">High Priority</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-red-600\">\n              {events?.filter((e: AlertEvent) => e.priority === 'high').length || 0}\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium\">Acknowledged</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-green-600\">\n              {events?.filter((e: AlertEvent) => e.ackAt).length || 0}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Alert History Table */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Alert History</CardTitle>\n          <CardDescription>View and manage historical alerts</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {isLoading ? (\n            <div className=\"text-center py-4\">Loading alert history...</div>\n          ) : events && events.length > 0 ? (\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead className=\"w-10\"></TableHead>\n                    <TableHead>Date/Time</TableHead>\n                    <TableHead>Alert Type</TableHead>\n                    <TableHead>Priority</TableHead>\n                    <TableHead>Message</TableHead>\n                    <TableHead>Channels</TableHead>\n                    <TableHead>Status</TableHead>\n                    <TableHead>Actions</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {events.map((event: AlertEvent) => {\n                    const payload = JSON.parse(event.payload || '{}');\n                    const isExpanded = expandedEvent === event.id;\n                    \n                    return (\n                      <React.Fragment key={event.id}>\n                        <TableRow \n                          className=\"cursor-pointer hover:bg-gray-50\"\n                          onClick={() => setExpandedEvent(isExpanded ? null : event.id)}\n                        >\n                          <TableCell>{getStatusIcon(event)}</TableCell>\n                          <TableCell>\n                            {format(new Date(event.createdAt), 'MMM dd, HH:mm')}\n                          </TableCell>\n                          <TableCell>\n                            {alertTypeLabels[event.alertType] || event.alertType}\n                          </TableCell>\n                          <TableCell>{getPriorityBadge(event.priority)}</TableCell>\n                          <TableCell className=\"max-w-xs truncate\">\n                            {payload.message || 'Alert triggered'}\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"flex gap-1\">\n                              {payload.channels?.includes('email') && \n                                <Mail className=\"h-4 w-4 text-gray-600\" />}\n                              {payload.channels?.includes('in_app') && \n                                <Bell className=\"h-4 w-4 text-gray-600\" />}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            {event.ackAt ? (\n                              <span className=\"text-sm text-green-600\">\n                                Ack by {event.ackBy}\n                              </span>\n                            ) : (\n                              <span className=\"text-sm text-orange-600\">Pending</span>\n                            )}\n                          </TableCell>\n                          <TableCell>\n                            {!event.ackAt && (\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  handleAcknowledge(event.id);\n                                }}\n                              >\n                                Acknowledge\n                              </Button>\n                            )}\n                          </TableCell>\n                        </TableRow>\n                        {isExpanded && (\n                          <TableRow>\n                            <TableCell colSpan={8} className=\"bg-gray-50\">\n                              <div className=\"p-4 space-y-2\">\n                                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                                  <div>\n                                    <span className=\"font-medium\">Object Type:</span> {event.objectType}\n                                  </div>\n                                  <div>\n                                    <span className=\"font-medium\">Object ID:</span> {event.objectId}\n                                  </div>\n                                  <div>\n                                    <span className=\"font-medium\">Vessel:</span> {event.vesselId}\n                                  </div>\n                                  <div>\n                                    <span className=\"font-medium\">State:</span> {event.state}\n                                  </div>\n                                </div>\n                                {payload.details && (\n                                  <div className=\"mt-2\">\n                                    <span className=\"font-medium text-sm\">Additional Details:</span>\n                                    <pre className=\"mt-1 p-2 bg-white rounded text-xs\">\n                                      {JSON.stringify(payload.details, null, 2)}\n                                    </pre>\n                                  </div>\n                                )}\n                              </div>\n                            </TableCell>\n                          </TableRow>\n                        )}\n                      </React.Fragment>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </div>\n          ) : (\n            <div className=\"text-center py-8 text-gray-500\">\n              No alerts found for the selected filters\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"]}