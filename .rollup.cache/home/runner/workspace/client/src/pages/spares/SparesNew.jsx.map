{"version":3,"file":"SparesNew.jsx","sourceRoot":"","sources":["SparesNew.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAa,MAAM,OAAO,CAAC;AAC5D,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AAChD,OAAO,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAC9C,OAAO,EACL,MAAM,EACN,aAAa,EACb,UAAU,EACV,aAAa,EACb,WAAW,GACZ,MAAM,wBAAwB,CAAC;AAChC,OAAO,EACL,MAAM,EACN,YAAY,EACZ,WAAW,EACX,IAAI,EACJ,MAAM,EACN,IAAI,EAGJ,KAAK,GACN,MAAM,cAAc,CAAC;AACtB,OAAO,EAAiB,aAAa,EAAE,MAAM,sBAAsB,CAAC;AACpE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AAC9D,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EACL,MAAM,EACN,aAAa,EACb,YAAY,EACZ,WAAW,EACX,YAAY,GACb,MAAM,wBAAwB,CAAC;AAChC,OAAO,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAC9C,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAqClC,IAAM,MAAM,GAAa;IACjB,IAAA,KAA4B,QAAQ,CACxC,WAAW,CACZ,EAFM,SAAS,QAAA,EAAE,YAAY,QAE7B,CAAC;IACI,IAAA,KAAgD,QAAQ,CAC5D,IAAI,CACL,EAFM,mBAAmB,QAAA,EAAE,sBAAsB,QAEjD,CAAC;IACI,IAAA,KAAoC,QAAQ,CAChD,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAC/B,EAFM,aAAa,QAAA,EAAE,gBAAgB,QAErC,CAAC;IACI,IAAA,KAA8B,QAAQ,CAAC,EAAE,CAAC,EAAzC,UAAU,QAAA,EAAE,aAAa,QAAgB,CAAC;IAC3C,IAAA,KAA4C,QAAQ,CAAC,EAAE,CAAC,EAAvD,iBAAiB,QAAA,EAAE,oBAAoB,QAAgB,CAAC;IACzD,IAAA,KAAgC,QAAQ,CAAC,EAAE,CAAC,EAA3C,WAAW,QAAA,EAAE,cAAc,QAAgB,CAAC;IAC7C,IAAA,KAA0B,QAAQ,CAAC,MAAM,CAAC,EAAzC,QAAQ,QAAA,EAAE,WAAW,QAAoB,CAAC;IAEjD,gBAAgB;IACV,IAAA,KAAgD,QAAQ,CAAC,KAAK,CAAC,EAA9D,mBAAmB,QAAA,EAAE,sBAAsB,QAAmB,CAAC;IAChE,IAAA,KAAoD,QAAQ,CAAC,KAAK,CAAC,EAAlE,qBAAqB,QAAA,EAAE,wBAAwB,QAAmB,CAAC;IACpE,IAAA,KAA8C,QAAQ,CAAC,KAAK,CAAC,EAA5D,kBAAkB,QAAA,EAAE,qBAAqB,QAAmB,CAAC;IAC9D,IAAA,KAA8C,QAAQ,CAAC,KAAK,CAAC,EAA5D,kBAAkB,QAAA,EAAE,qBAAqB,QAAmB,CAAC;IAC9D,IAAA,KAAoC,QAAQ,CAAe,IAAI,CAAC,EAA/D,aAAa,QAAA,EAAE,gBAAgB,QAAgC,CAAC;IAEvE,cAAc;IACR,IAAA,KAAgC,QAAQ,CAAC;QAC7C,QAAQ,EAAE,EAAE;QACZ,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,EAAE;QACb,OAAO,EAAE,EAAE;KACZ,CAAC,EALK,WAAW,QAAA,EAAE,cAAc,QAKhC,CAAC;IACG,IAAA,KAAgC,QAAQ,CAAC;QAC7C,QAAQ,EAAE,EAAE;QACZ,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE,EAAE;QACZ,OAAO,EAAE,EAAE;KACZ,CAAC,EALK,WAAW,QAAA,EAAE,cAAc,QAKhC,CAAC;IACG,IAAA,KAAsC,QAAQ,CAOjD,EAAE,CAAC,EAPC,cAAc,QAAA,EAAE,iBAAiB,QAOlC,CAAC;IACD,IAAA,KAAkC,QAAQ,CAAC;QAC/C,QAAQ,EAAE,EAAE;QACZ,QAAQ,EAAE,EAAE;QACZ,WAAW,EAAE,EAAE;QACf,QAAQ,EAAE,IAAI;QACd,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,QAAQ,EAAE,EAAE;KACb,CAAC,EARK,YAAY,QAAA,EAAE,eAAe,QAQlC,CAAC;IAEK,IAAA,KAAK,GAAK,QAAQ,EAAE,MAAf,CAAgB;IAE7B,oBAAoB;IACd,IAAA,KAIF,QAAQ,CAAC;QACX,QAAQ,EAAE,CAAC,aAAa,EAAE,QAAQ,CAAC;QACnC,OAAO,EAAE;;;;4BACU,qBAAM,KAAK,CAAC,sBAAe,QAAQ,CAAE,CAAC,EAAA;;wBAAjD,QAAQ,GAAG,SAAsC;wBACvD,IAAI,CAAC,QAAQ,CAAC,EAAE;4BAAE,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;wBAC5D,sBAAO,QAAQ,CAAC,IAAI,EAAE,EAAC;;;aACxB;KACF,CAAC,EAVA,YAAqB,EAAf,UAAU,mBAAG,EAAE,KAAA,EACrB,SAAS,eAAA,EACT,OAAO,aAQP,CAAC;IAEH,qBAAqB;IACb,IAAA,KAA2B,QAAQ,CAAC;QAC1C,QAAQ,EAAE,CAAC,qBAAqB,EAAE,QAAQ,CAAC;QAC3C,OAAO,EAAE;;;;4BACU,qBAAM,KAAK,CAAC,8BAAuB,QAAQ,CAAE,CAAC,EAAA;;wBAAzD,QAAQ,GAAG,SAA8C;wBAC/D,IAAI,CAAC,QAAQ,CAAC,EAAE;4BAAE,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;wBAC7D,sBAAO,QAAQ,CAAC,IAAI,EAAE,EAAC;;;aACxB;QACD,OAAO,EAAE,SAAS,KAAK,SAAS;KACjC,CAAC,KAR4B,EAAhB,WAAW,mBAAG,EAAE,KAAA,CAQ3B;IAEH,yBAAyB;IACzB,IAAM,oBAAoB,GAAG,WAAW,CAAC;QACvC,UAAU,EAAE,UAAO,EAYlB;;YAXC,IAAA,EAAE,QAAA,EACC,IAAI,cAFU,MAGlB,CADQ;;;4BAWU,qBAAM,KAAK,CAAC,sBAAe,EAAE,aAAU,EAAE;4BACxD,MAAM,EAAE,MAAM;4BACd,OAAO,EAAE;gCACP,cAAc,EAAE,kBAAkB;6BACnC;4BACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;yBAC3B,CAAC,EAAA;;wBANI,QAAQ,GAAG,SAMf;6BAEE,CAAC,QAAQ,CAAC,EAAE,EAAZ,wBAAY;wBACA,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;;wBAA7B,KAAK,GAAG,SAAqB;wBACnC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,yBAAyB,CAAC,CAAC;4BAG5D,sBAAO,QAAQ,CAAC,IAAI,EAAE,EAAC;;;aACxB;QACD,SAAS,EAAE;YACT,WAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;YAC7D,WAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;YACrE,KAAK,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,EAAE,6BAA6B,EAAE,CAAC,CAAC;YACxE,qBAAqB,CAAC,KAAK,CAAC,CAAC;YAC7B,cAAc,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC;QACzE,CAAC;QACD,OAAO,EAAE,UAAC,KAAU;YAClB,KAAK,CAAC;gBACJ,KAAK,EAAE,OAAO;gBACd,WAAW,EAAE,KAAK,CAAC,OAAO,IAAI,yBAAyB;gBACvD,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;QACL,CAAC;KACF,CAAC,CAAC;IAEH,yBAAyB;IACzB,IAAM,oBAAoB,GAAG,WAAW,CAAC;QACvC,UAAU,EAAE,UAAO,EAalB;;YAZC,IAAA,EAAE,QAAA,EACC,IAAI,cAFU,MAGlB,CADQ;;;4BAYU,qBAAM,KAAK,CAAC,sBAAe,EAAE,aAAU,EAAE;4BACxD,MAAM,EAAE,MAAM;4BACd,OAAO,EAAE;gCACP,cAAc,EAAE,kBAAkB;6BACnC;4BACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;yBAC3B,CAAC,EAAA;;wBANI,QAAQ,GAAG,SAMf;6BAEE,CAAC,QAAQ,CAAC,EAAE,EAAZ,wBAAY;wBACA,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;;wBAA7B,KAAK,GAAG,SAAqB;wBACnC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,yBAAyB,CAAC,CAAC;4BAG5D,sBAAO,QAAQ,CAAC,IAAI,EAAE,EAAC;;;aACxB;QACD,SAAS,EAAE;YACT,WAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;YAC7D,WAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;YACrE,KAAK,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,EAAE,6BAA6B,EAAE,CAAC,CAAC;YACxE,qBAAqB,CAAC,KAAK,CAAC,CAAC;YAC7B,cAAc,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC;QACxE,CAAC;QACD,OAAO,EAAE,UAAC,KAAU;YAClB,KAAK,CAAC;gBACJ,KAAK,EAAE,OAAO;gBACd,WAAW,EAAE,KAAK,CAAC,OAAO,IAAI,yBAAyB;gBACvD,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;QACL,CAAC;KACF,CAAC,CAAC;IAEH,wBAAwB;IACxB,IAAM,mBAAmB,GAAG,WAAW,CAAC;QACtC,UAAU,EAAE,UAAO,IAAS;;gBAC1B,sBAAO,UAAU,CAAC,aAAa,EAAE,MAAM,EAAE,IAAI,CAAC,EAAC;;aAChD;QACD,SAAS,EAAE;YACT,WAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;YAC7D,KAAK,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,EAAE,4BAA4B,EAAE,CAAC,CAAC;YACvE,sBAAsB,CAAC,KAAK,CAAC,CAAC;YAC9B,eAAe,CAAC;gBACd,QAAQ,EAAE,EAAE;gBACZ,QAAQ,EAAE,EAAE;gBACZ,WAAW,EAAE,EAAE;gBACf,QAAQ,EAAE,IAAI;gBACd,GAAG,EAAE,EAAE;gBACP,GAAG,EAAE,EAAE;gBACP,QAAQ,EAAE,EAAE;aACb,CAAC,CAAC;QACL,CAAC;QACD,OAAO,EAAE,UAAC,KAAU;YAClB,KAAK,CAAC;gBACJ,KAAK,EAAE,OAAO;gBACd,WAAW,EAAE,KAAK,CAAC,OAAO,IAAI,wBAAwB;gBACtD,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;QACL,CAAC;KACF,CAAC,CAAC;IAEH,uBAAuB;IACvB,IAAM,kBAAkB,GAAG,WAAW,CAAC;QACrC,UAAU,EAAE,UAAO,IAalB;;;;4BACkB,qBAAM,KAAK,CAAC,yBAAyB,EAAE;4BACtD,MAAM,EAAE,MAAM;4BACd,OAAO,EAAE;gCACP,cAAc,EAAE,kBAAkB;6BACnC;4BACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;yBAC3B,CAAC,EAAA;;wBANI,QAAQ,GAAG,SAMf;6BAEE,CAAC,QAAQ,CAAC,EAAE,EAAZ,wBAAY;wBACA,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;;wBAA7B,KAAK,GAAG,SAAqB;wBACnC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,+BAA+B,CAAC,CAAC;4BAGlE,sBAAO,QAAQ,CAAC,IAAI,EAAE,EAAC;;;aACxB;QACD,SAAS,EAAE,UAAA,OAAO;YAChB,6CAA6C;YAC7C,WAAW,CAAC,YAAY,CAAC,CAAC,aAAa,EAAE,QAAQ,CAAC,EAAE,UAAC,GAAQ;gBAC3D,IAAI,CAAC,GAAG;oBAAE,OAAO,GAAG,CAAC;gBACrB,OAAO,GAAG,CAAC,GAAG,CAAC,UAAC,KAAU;oBACxB,IAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CACzB,UAAC,CAAM,IAAK,OAAA,CAAC,CAAC,gBAAgB,KAAK,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,OAAO,EAA5C,CAA4C,CACzD,CAAC;oBACF,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,KAAK,SAAS,EAAE,CAAC;wBAC5C,6BAAY,KAAK,KAAE,GAAG,EAAE,MAAM,CAAC,QAAQ,IAAG;oBAC5C,CAAC;oBACD,OAAO,KAAK,CAAC;gBACf,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,WAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;YAErE,yCAAyC;YACzC,IAAM,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC,UAAC,CAAM,IAAK,OAAA,CAAC,CAAC,OAAO,EAAT,CAAS,CAAC,CAAC,MAAM,CAAC;YAC/D,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,UAAC,CAAM,IAAK,OAAA,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,EAAvB,CAAuB,CAAC,CAAC,MAAM,CAAC;YAC1E,IAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAC5B,UAAC,CAAM,IAAK,OAAA,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,OAAO,EAAxB,CAAwB,CACrC,CAAC,MAAM,CAAC;YAET,KAAK,CAAC;gBACJ,KAAK,EAAE,sBAAsB;gBAC7B,WAAW,EAAE,mBAAY,SAAS,wBAAc,OAAO,uBAAa,MAAM,CAAE;aAC7E,CAAC,CAAC;YACH,wBAAwB,CAAC,KAAK,CAAC,CAAC;YAChC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QACxB,CAAC;QACD,OAAO,EAAE,UAAC,KAAU;YAClB,KAAK,CAAC;gBACJ,KAAK,EAAE,OAAO;gBACd,WAAW,EAAE,KAAK,CAAC,OAAO,IAAI,+BAA+B;gBAC7D,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;QACL,CAAC;KACF,CAAC,CAAC;IAEH,iFAAiF;IACjF,IAAM,gBAAgB,GAAG,UAAC,KAAY,EAAE,UAAkB;QACxD,IAAI,KAAK,CAAC,WAAW,KAAK,UAAU;YAAE,OAAO,IAAI,CAAC;QAClD,yEAAyE;QACzE,OAAO,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,UAAG,UAAU,MAAG,CAAC,CAAC;IACxD,CAAC,CAAC;IAEF,sCAAsC;IACtC,IAAM,cAAc,GAAG,OAAO,CAAC;QAC7B,IAAI,QAAQ,GAAG,UAAU,CAAC;QAE1B,oDAAoD;QACpD,IAAI,mBAAmB,EAAE,CAAC;YACxB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAC,KAAY;gBACtC,OAAA,gBAAgB,CAAC,KAAK,EAAE,mBAAmB,CAAC;YAA5C,CAA4C,CAC7C,CAAC;QACJ,CAAC;QAED,wBAAwB;QACxB,IAAI,UAAU,EAAE,CAAC;YACf,IAAM,QAAM,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;YACxC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CACxB,UAAC,KAAY;;gBACX,OAAA,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,QAAM,CAAC;oBAC7C,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,QAAM,CAAC;oBAC7C,KAAK,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,QAAM,CAAC;qBAClD,MAAA,KAAK,CAAC,aAAa,0CAAE,WAAW,GAAG,QAAQ,CAAC,QAAM,CAAC,CAAA;qBACnD,MAAA,KAAK,CAAC,QAAQ,0CAAE,WAAW,GAAG,QAAQ,CAAC,QAAM,CAAC,CAAA,CAAA;aAAA,CACjD,CAAC;QACJ,CAAC;QAED,wBAAwB;QACxB,IAAI,iBAAiB,IAAI,iBAAiB,KAAK,KAAK,EAAE,CAAC;YACrD,IAAI,iBAAiB,KAAK,UAAU,EAAE,CAAC;gBACrC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CACxB,UAAC,KAAY;oBACX,OAAA,KAAK,CAAC,QAAQ,KAAK,UAAU,IAAI,KAAK,CAAC,QAAQ,KAAK,KAAK;gBAAzD,CAAyD,CAC5D,CAAC;YACJ,CAAC;iBAAM,IAAI,iBAAiB,KAAK,cAAc,EAAE,CAAC;gBAChD,QAAQ,GAAG,QAAQ,CAAC,MAAM,CACxB,UAAC,KAAY;oBACX,OAAA,KAAK,CAAC,QAAQ,KAAK,UAAU,IAAI,KAAK,CAAC,QAAQ,KAAK,KAAK;gBAAzD,CAAyD,CAC5D,CAAC;YACJ,CAAC;QACH,CAAC;QAED,yBAAyB;QACzB,IAAI,WAAW,IAAI,WAAW,KAAK,KAAK,EAAE,CAAC;YACzC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CACxB,UAAC,KAAY,IAAK,OAAA,KAAK,CAAC,WAAW,KAAK,WAAW,EAAjC,CAAiC,CACpD,CAAC;QACJ,CAAC;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC,EAAE;QACD,UAAU;QACV,mBAAmB;QACnB,UAAU;QACV,iBAAiB;QACjB,WAAW;KACZ,CAAC,CAAC;IAEH,wBAAwB;IACxB,IAAM,UAAU,GAAG,UAAC,MAAc;QAChC,gBAAgB,CAAC,UAAA,IAAI;YACnB,IAAM,MAAM,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;YAC7B,IAAI,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;gBACvB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACxB,CAAC;iBAAM,CAAC;gBACN,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACrB,CAAC;YACD,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,6BAA6B;IAC7B,IAAM,eAAe,GAAG,UAAC,WAAmB;QAC1C,sBAAsB,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC,CAAC;IAEF,oBAAoB;IACpB,IAAM,YAAY,GAAG;QACnB,aAAa,CAAC,EAAE,CAAC,CAAC;QAClB,oBAAoB,CAAC,EAAE,CAAC,CAAC;QACzB,cAAc,CAAC,EAAE,CAAC,CAAC;QACnB,sBAAsB,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC;IAEF,qBAAqB;IACrB,IAAM,gBAAgB,GAAG,UAAC,KAAY;QACpC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACxB,cAAc,CAAC;YACb,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC;YACtC,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,EAAE;SACZ,CAAC,CAAC;QACH,qBAAqB,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC;IAEF,qBAAqB;IACrB,IAAM,gBAAgB,GAAG,UAAC,KAAY;QACpC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACxB,cAAc,CAAC;YACb,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC;YACtC,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE,EAAE;SACZ,CAAC,CAAC;QACH,qBAAqB,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC;IAEF,wBAAwB;IACxB,IAAM,mBAAmB,GAAG;QAC1B,IAAI,CAAC,aAAa,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YACjE,KAAK,CAAC;gBACJ,KAAK,EAAE,OAAO;gBACd,WAAW,EAAE,oCAAoC;gBACjD,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,IAAM,QAAQ,GAAG,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,QAAQ,IAAI,CAAC,EAAE,CAAC;YAClB,KAAK,CAAC;gBACJ,KAAK,EAAE,OAAO;gBACd,WAAW,EAAE,iCAAiC;gBAC9C,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,IAAI,QAAQ,GAAG,aAAa,CAAC,GAAG,EAAE,CAAC;YACjC,KAAK,CAAC;gBACJ,KAAK,EAAE,OAAO;gBACd,WAAW,EAAE,oBAAoB;gBACjC,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,oBAAoB,CAAC,MAAM,CAAC;YAC1B,EAAE,EAAE,aAAa,CAAC,EAAE;YACpB,GAAG,EAAE,QAAQ;YACb,SAAS,EAAE,WAAW,CAAC,IAAI;YAC3B,EAAE,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,eAAe,EAAE,CAAC,QAAQ;YACpD,KAAK,EAAE,WAAW,CAAC,SAAS,IAAI,SAAS;YACzC,OAAO,EAAE,WAAW,CAAC,OAAO,IAAI,SAAS;YACzC,MAAM,EAAE,MAAM;YACd,QAAQ,UAAA;SACT,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,wBAAwB;IACxB,IAAM,mBAAmB,GAAG;QAC1B,IAAI,CAAC,aAAa,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YACjE,KAAK,CAAC;gBACJ,KAAK,EAAE,OAAO;gBACd,WAAW,EAAE,oCAAoC;gBACjD,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,IAAM,QAAQ,GAAG,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,QAAQ,IAAI,CAAC,EAAE,CAAC;YAClB,KAAK,CAAC;gBACJ,KAAK,EAAE,OAAO;gBACd,WAAW,EAAE,iCAAiC;gBAC9C,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,oBAAoB,CAAC,MAAM,CAAC;YAC1B,EAAE,EAAE,aAAa,CAAC,EAAE;YACpB,GAAG,EAAE,QAAQ;YACb,SAAS,EAAE,WAAW,CAAC,IAAI;YAC3B,EAAE,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,eAAe,EAAE,CAAC,QAAQ;YACpD,UAAU,EAAE,WAAW,CAAC,QAAQ,IAAI,SAAS;YAC7C,OAAO,EAAE,WAAW,CAAC,OAAO,IAAI,SAAS;YACzC,MAAM,EAAE,MAAM;YACd,QAAQ,UAAA;SACT,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,2BAA2B;IAC3B,IAAM,mBAAmB,GAAG;QAC1B,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAChC,KAAK,CAAC;gBACJ,KAAK,EAAE,MAAM;gBACb,WAAW,EAAE,6CAA6C;gBAC1D,OAAO,EAAE,SAAS;aACnB,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QACD,wBAAwB,CAAC,IAAI,CAAC,CAAC;QAC/B,8BAA8B;QAC9B,IAAM,WAAW,GAQb,EAAE,CAAC;QACP,cAAc,CAAC,OAAO,CAAC,UAAC,KAAY;YAClC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;QACvD,CAAC,CAAC,CAAC;QACH,iBAAiB,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC,CAAC;IAEF,mCAAmC;IACnC,IAAM,sBAAsB,GAAG,UAC7B,OAAe,EACf,KAKc,EACd,KAAsB;QAEtB,IAAI,KAAK,KAAK,UAAU,IAAI,KAAK,KAAK,UAAU,EAAE,CAAC;YACjD,IAAM,UAAQ,GAAG,QAAQ,CAAC,KAAe,CAAC,IAAI,CAAC,CAAC;YAChD,iBAAiB,CAAC,UAAA,IAAI;;gBAAI,OAAA,uBACrB,IAAI,gBACN,OAAO,0BACH,IAAI,CAAC,OAAO,CAAC,gBACf,KAAK,IAAG,UAAQ,aAEnB;YANwB,CAMxB,CAAC,CAAC;QACN,CAAC;aAAM,CAAC;YACN,iBAAiB,CAAC,UAAA,IAAI;;gBAAI,OAAA,uBACrB,IAAI,gBACN,OAAO,0BACH,IAAI,CAAC,OAAO,CAAC,gBACf,KAAK,IAAG,KAAe,aAE1B;YANwB,CAMxB,CAAC,CAAC;QACN,CAAC;IACH,CAAC,CAAC;IAEF,0BAA0B;IAC1B,IAAM,oBAAoB,GAAG;QAC3B,IACE,CAAC,YAAY,CAAC,QAAQ;YACtB,CAAC,YAAY,CAAC,QAAQ;YACtB,CAAC,YAAY,CAAC,WAAW,EACzB,CAAC;YACD,KAAK,CAAC;gBACJ,KAAK,EAAE,OAAO;gBACd,WAAW,EAAE,oCAAoC;gBACjD,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,IAAM,GAAG,GAAG,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAM,GAAG,GAAG,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAE5C,0CAA0C;QAC1C,IAAM,aAAa,GAAG,UAAC,KAAsB;YAC3C,KAAmB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE,CAAC;gBAAtB,IAAM,IAAI,cAAA;gBACb,IAAI,IAAI,CAAC,EAAE,KAAK,YAAY,CAAC,WAAW;oBAAE,OAAO,IAAI,CAAC;gBACtD,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAClB,IAAM,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC3C,IAAI,KAAK;wBAAE,OAAO,KAAK,CAAC;gBAC1B,CAAC;YACH,CAAC;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,IAAM,SAAS,GAAG,aAAa,CAAC,aAAa,CAAC,CAAC;QAE/C,mBAAmB,CAAC,MAAM,CAAC;YACzB,QAAQ,EAAE,YAAY,CAAC,QAAQ;YAC/B,QAAQ,EAAE,YAAY,CAAC,QAAQ;YAC/B,WAAW,EAAE,YAAY,CAAC,WAAW;YACrC,aAAa,EAAE,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,IAAI,KAAI,SAAS;YAC3C,aAAa,EAAE,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,IAAI,KAAI,SAAS;YAC3C,QAAQ,EAAE,YAAY,CAAC,QAAQ;YAC/B,GAAG,KAAA;YACH,GAAG,KAAA;YACH,QAAQ,EAAE,YAAY,CAAC,QAAQ,IAAI,SAAS;YAC5C,QAAQ,UAAA;SACT,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,oBAAoB;IACpB,IAAM,eAAe,GAAG;QACtB,0BAA0B;QAC1B,IAAM,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,UAAC,EAAU;gBAAT,EAAE,QAAA,EAAE,IAAI,QAAA;YAC9D,IAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,UAAC,CAAQ,IAAK,OAAA,CAAC,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,CAAC,EAArB,CAAqB,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK;gBAAE,OAAO,KAAK,CAAC;YAEzB,IAAM,MAAM,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC;YACvE,IAAI,MAAM,GAAG,CAAC;gBAAE,OAAO,IAAI,CAAC;YAE5B,oDAAoD;YACpD,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY;gBAAE,OAAO,IAAI,CAAC;YAEzD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,IAAI,SAAS,EAAE,CAAC;YACd,KAAK,CAAC;gBACJ,KAAK,EAAE,kBAAkB;gBACzB,WAAW,EAAE,4CAA4C;gBACzD,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,IAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC;aACxC,MAAM,CAAC,UAAC,EAAS;gBAAR,CAAC,QAAA,EAAE,IAAI,QAAA;YAAM,OAAA,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC;QAAtC,CAAsC,CAAC;aAC7D,GAAG,CAAC,UAAC,EAAU;gBAAT,EAAE,QAAA,EAAE,IAAI,QAAA;YAAM,OAAA,CAAC;gBACpB,gBAAgB,EAAE,QAAQ,CAAC,EAAE,CAAC;gBAC9B,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,CAAC;gBAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,CAAC;gBAC5B,YAAY,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS;gBAC/D,aAAa,EAAE,IAAI,CAAC,aAAa,IAAI,SAAS;gBAC9C,SAAS,EACP,IAAI,CAAC,QAAQ,GAAG,CAAC;oBACf,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACxC,CAAC,CAAC,SAAS;gBACf,OAAO,EAAE,IAAI,CAAC,QAAQ,IAAI,SAAS;gBACnC,MAAM,EAAE,MAAM;aACf,CAAC;QAZmB,CAYnB,CAAC,CAAC;QAEN,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACtB,KAAK,CAAC;gBACJ,KAAK,EAAE,MAAM;gBACb,WAAW,EAAE,oBAAoB;gBACjC,OAAO,EAAE,SAAS;aACnB,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,kBAAkB,CAAC,MAAM,CAAC;YACxB,QAAQ,UAAA;YACR,EAAE,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,eAAe,EAAE,CAAC,QAAQ;YACpD,IAAI,MAAA;SACL,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,wBAAwB;IACxB,IAAM,mBAAmB,GAAG,UAAC,KAAsB,EAAE,KAAiB;QAAjB,sBAAA,EAAA,SAAiB;QACpE,OAAO,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI;YACnB,IAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;YAC9D,IAAM,UAAU,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC9C,IAAM,UAAU,GAAG,mBAAmB,KAAK,IAAI,CAAC,EAAE,CAAC;YAEnD,OAAO,CACL,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAChB;UAAA,CAAC,GAAG,CACF,SAAS,CAAC,CAAC,+FACT,UAAU,CAAC,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC,EAAE,CAC3C,CAAC,CACH,KAAK,CAAC,CAAC,EAAE,WAAW,EAAE,UAAG,KAAK,GAAG,EAAE,GAAG,EAAE,OAAI,EAAE,CAAC,CAC/C,OAAO,CAAC,CAAC,cAAM,OAAA,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,EAAxB,CAAwB,CAAC,CAExC;YAAA,CAAC,MAAM,CACL,SAAS,CAAC,oBAAoB,CAC9B,OAAO,CAAC,CAAC,UAAA,CAAC;oBACR,CAAC,CAAC,eAAe,EAAE,CAAC;oBACpB,IAAI,WAAW,EAAE,CAAC;wBAChB,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBACtB,CAAC;gBACH,CAAC,CAAC,CAEF;cAAA,CAAC,WAAW,CAAC,CAAC,CAAC,CACb,UAAU,CAAC,CAAC,CAAC,CACX,CAAC,WAAW,CACV,SAAS,CAAC,CAAC,kBAAW,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,eAAe,CAAE,CAAC,EACpE,CACH,CAAC,CAAC,CAAC,CACF,CAAC,YAAY,CACX,SAAS,CAAC,CAAC,kBAAW,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,eAAe,CAAE,CAAC,EACpE,CACH,CACF,CAAC,CAAC,CAAC,CACF,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAG,CACzB,CACH;YAAA,EAAE,MAAM,CACR;YAAA,CAAC,IAAI,CACH,SAAS,CAAC,CAAC,kBAAW,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,eAAe,CAAE,CAAC,CAEpE;cAAA,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CACzB;YAAA,EAAE,IAAI,CACR;UAAA,EAAE,GAAG,CACL;UAAA,CAAC,WAAW,IAAI,UAAU,IAAI,CAC5B,CAAC,GAAG,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAS,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAC5D,CACH;QAAA,EAAE,GAAG,CAAC,CACP,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,yBAAyB,CACtC;MAAA,CAAC,YAAY,CACb;MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CACnB;QAAA,CAAC,EAAE,CAAC,SAAS,CAAC,2CAA2C,CACvD;UAAA,CAAC,SAAS,KAAK,WAAW;YACxB,CAAC,CAAC,kBAAkB;YACpB,CAAC,CAAC,kCAAkC,CACxC;QAAA,EAAE,EAAE,CAEJ;;QAAA,CAAC,kCAAkC,CACnC;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,wCAAwC,CACrD;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CACnB;YAAA,CAAC,MAAM,CACL,SAAS,CAAC,CAAC,8BAAuB,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,2BAA2B,CAAE,CAAC,CACvH,OAAO,CAAC,CAAC,cAAM,OAAA,YAAY,CAAC,WAAW,CAAC,EAAzB,CAAyB,CAAC,CAEzC;;YACF,EAAE,MAAM,CACR;YAAA,CAAC,MAAM,CACL,SAAS,CAAC,CAAC,8BAAuB,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,2BAA2B,CAAE,CAAC,CACrH,OAAO,CAAC,CAAC,cAAM,OAAA,YAAY,CAAC,SAAS,CAAC,EAAvB,CAAuB,CAAC,CAEvC;;YACF,EAAE,MAAM,CACV;UAAA,EAAE,GAAG,CACL;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,YAAY,CACzB;YAAA,CAAC,MAAM,CACL,SAAS,CAAC,4CAA4C,CACtD,OAAO,CAAC,CAAC,cAAM,OAAA,sBAAsB,CAAC,IAAI,CAAC,EAA5B,CAA4B,CAAC,CAE5C;;YACF,EAAE,MAAM,CACR;YAAA,CAAC,MAAM,CACL,SAAS,CAAC,4CAA4C,CACtD,OAAO,CAAC,CAAC,mBAAmB,CAAC,CAE7B;;YACF,EAAE,MAAM,CACV;UAAA,EAAE,GAAG,CACP;QAAA,EAAE,GAAG,CACP;MAAA,EAAE,GAAG,CACL;MAAA,CAAC,wBAAwB,CACzB;MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,8BAA8B,CAC3C;QAAA,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC,CAClD;UAAA,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAC7B;YAAA,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EACnC;UAAA,EAAE,aAAa,CACf;UAAA,CAAC,aAAa,CACZ;YAAA,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,CAC7C;YAAA,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,CAC/C;UAAA,EAAE,aAAa,CACjB;QAAA,EAAE,MAAM,CAER;;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,CAC5B;UAAA,CAAC,MAAM,CAAC,SAAS,CAAC,0EAA0E,EAC5F;UAAA,CAAC,KAAK,CACJ,WAAW,CAAC,+BAA+B,CAC3C,KAAK,CAAC,CAAC,UAAU,CAAC,CAClB,QAAQ,CAAC,CAAC,UAAA,CAAC,IAAI,OAAA,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAA7B,CAA6B,CAAC,CAC7C,SAAS,CAAC,OAAO,EAErB;QAAA,EAAE,GAAG,CAEL;;QAAA,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,iBAAiB,CAAC,CAAC,aAAa,CAAC,CAAC,oBAAoB,CAAC,CACpE;UAAA,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAC7B;YAAA,CAAC,WAAW,CAAC,WAAW,CAAC,aAAa,EACxC;UAAA,EAAE,aAAa,CACf;UAAA,CAAC,aAAa,CACZ;YAAA,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,UAAU,CACvC;YAAA,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CACjD;YAAA,CAAC,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,YAAY,EAAE,UAAU,CAC3D;UAAA,EAAE,aAAa,CACjB;QAAA,EAAE,MAAM,CAER;;QAAA,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC,CAAC,cAAc,CAAC,CACxD;UAAA,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAC7B;YAAA,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,EAClC;UAAA,EAAE,aAAa,CACf;UAAA,CAAC,aAAa,CACZ;YAAA,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,UAAU,CACvC;YAAA,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,CACrC;YAAA,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,UAAU,CACzC;UAAA,EAAE,aAAa,CACjB;QAAA,EAAE,MAAM,CAER;;QAAA,CAAC,MAAM,CACL,OAAO,CAAC,SAAS,CACjB,OAAO,CAAC,CAAC,YAAY,CAAC,CACtB,SAAS,CAAC,eAAe,CAEzB;;QACF,EAAE,MAAM,CACV;MAAA,EAAE,GAAG,CACL;MAAA,CAAC,kBAAkB,CACnB;MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,iCAAiC,CAC9C;QAAA,CAAC,iCAAiC,CAClC;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,iEAAiE,CAC9E;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,iDAAiD,CAC9D;;UACF,EAAE,GAAG,CACL;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,qCAAqC,CAClD;YAAA,CAAC,mBAAmB,CAAC,aAAa,CAAC,CACrC;UAAA,EAAE,GAAG,CACP;QAAA,EAAE,GAAG,CAEL;;QAAA,CAAC,yBAAyB,CAC1B;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,mEAAmE,CAChF;UAAA,CAAC,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC,CAC3B,EACE;cAAA,CAAC,4BAA4B,CAC7B;cAAA,CAAC,GAAG,CAAC,SAAS,CAAC,iDAAiD,CAC9D;gBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,8DAA8D,CAC3E;kBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS,EAAE,GAAG,CAC9C;kBAAA,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CACnB;kBAAA,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CACnB;kBAAA,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CACpB;kBAAA,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAClB;kBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CACrC;kBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CACrC;kBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CACvC;kBAAA,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAClB;kBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,EAAE,GAAG,CAC3C;gBAAA,EAAE,GAAG,CACP;cAAA,EAAE,GAAG,CAEL;;cAAA,CAAC,0BAA0B,CAC3B;cAAA,CAAC,GAAG,CAAC,SAAS,CAAC,qCAAqC,CAClD;gBAAA,CAAC,SAAS,CAAC,CAAC,CAAC,CACX,CAAC,GAAG,CAAC,SAAS,CAAC,+BAA+B,CAC5C;;kBACF,EAAE,GAAG,CAAC,CACP,CAAC,CAAC,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAChC,CAAC,GAAG,CAAC,SAAS,CAAC,+BAA+B,CAC5C;;kBACF,EAAE,GAAG,CAAC,CACP,CAAC,CAAC,CAAC,CACF,cAAc,CAAC,GAAG,CAAC,UAAC,KAAY,IAAK,OAAA,CACnC,CAAC,GAAG,CACF,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CACd,SAAS,CAAC,qDAAqD,CAE/D;sBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,8CAA8C,CAC3D;wBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,GAAG,CACpD;wBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,GAAG,CACpD;wBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,CAC5B;0BAAA,CAAC,KAAK,CAAC,aAAa,CACtB;wBAAA,EAAE,GAAG,CACL;wBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,2BAA2B,CACxC;0BAAA,CAAC,KAAK,CAAC,kBAAkB,IAAI,GAAG,CAClC;wBAAA,EAAE,GAAG,CACL;wBAAA,CAAC,GAAG,CACF;0BAAA,CAAC,IAAI,CACH,SAAS,CAAC,CAAC,oCACT,KAAK,CAAC,QAAQ,KAAK,UAAU;oBAC7B,KAAK,CAAC,QAAQ,KAAK,KAAK;oBACtB,CAAC,CAAC,yBAAyB;oBAC3B,CAAC,CAAC,2BAA2B,CAC/B,CAAC,CAEH;4BAAA,CAAC,KAAK,CAAC,QAAQ,CACjB;0BAAA,EAAE,IAAI,CACR;wBAAA,EAAE,GAAG,CACL;wBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,CAC7C;wBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,CAC7C;wBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,CAC1B;0BAAA,CAAC,KAAK,CAAC,WAAW,IAAI,CACpB,CAAC,IAAI,CACH,SAAS,CAAC,CAAC,oCACT,KAAK,CAAC,WAAW,KAAK,KAAK;wBACzB,CAAC,CAAC,yBAAyB;wBAC3B,CAAC,CAAC,KAAK,CAAC,WAAW,KAAK,IAAI;4BAC1B,CAAC,CAAC,6BAA6B;4BAC/B,CAAC,CAAC,+BAA+B,CACrC,CAAC,CAEH;8BAAA,CAAC,KAAK,CAAC,WAAW,CACpB;4BAAA,EAAE,IAAI,CAAC,CACR,CACH;wBAAA,EAAE,GAAG,CACL;wBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,CAC5B;0BAAA,CAAC,KAAK,CAAC,QAAQ,IAAI,GAAG,CACxB;wBAAA,EAAE,GAAG,CACL;wBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,2BAA2B,CACxC;0BAAA,CAAC,MAAM,CACL,IAAI,CAAC,IAAI,CACT,OAAO,CAAC,OAAO,CACf,OAAO,CAAC,CAAC,cAAO,CAAC,CAAC,CAClB,KAAK,CAAC,MAAM,CAEZ;4BAAA,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAC3B;0BAAA,EAAE,MAAM,CACR;0BAAA,CAAC,MAAM,CACL,IAAI,CAAC,IAAI,CACT,OAAO,CAAC,OAAO,CACf,OAAO,CAAC,CAAC,cAAM,OAAA,gBAAgB,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CACvC,KAAK,CAAC,SAAS,CAEf;4BAAA,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,EAC5B;0BAAA,EAAE,MAAM,CACR;0BAAA,CAAC,MAAM,CACL,IAAI,CAAC,IAAI,CACT,OAAO,CAAC,OAAO,CACf,OAAO,CAAC,CAAC,cAAM,OAAA,gBAAgB,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CACvC,KAAK,CAAC,SAAS,CAEf;4BAAA,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAC3B;0BAAA,EAAE,MAAM,CACR;0BAAA,CAAC,MAAM,CACL,IAAI,CAAC,IAAI,CACT,OAAO,CAAC,OAAO,CACf,OAAO,CAAC,CAAC,cAAO,CAAC,CAAC,CAClB,KAAK,CAAC,QAAQ,CAEd;4BAAA,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,EAC7B;0BAAA,EAAE,MAAM,CACV;wBAAA,EAAE,GAAG,CACP;sBAAA,EAAE,GAAG,CACP;oBAAA,EAAE,GAAG,CAAC,CACP,EAlFoC,CAkFpC,CAAC,CACH,CACH;cAAA,EAAE,GAAG,CACP;YAAA,GAAG,CACJ,CAAC,CAAC,CAAC,CACF,EACE;cAAA,CAAC,0BAA0B,CAC3B;cAAA,CAAC,GAAG,CAAC,SAAS,CAAC,gDAAgD,CAC7D;gBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,4DAA4D,CACzE;kBAAA,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CACnB;kBAAA,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CACnB;kBAAA,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CACnB;kBAAA,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CACnB;kBAAA,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CACpB;kBAAA,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CACf;kBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,UAAU,EAAE,GAAG,CAC5C;kBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,EAAE,GAAG,CAC3C;kBAAA,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CACrB;gBAAA,EAAE,GAAG,CACP;cAAA,EAAE,GAAG,CAEL;;cAAA,CAAC,wBAAwB,CACzB;cAAA,CAAC,GAAG,CAAC,SAAS,CAAC,qCAAqC,CAClD;gBAAA,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAC1B,CAAC,GAAG,CAAC,SAAS,CAAC,+BAA+B,CAC5C;;kBACF,EAAE,GAAG,CAAC,CACP,CAAC,CAAC,CAAC,CACF,WAAW,CAAC,GAAG,CAAC,UAAC,OAAqB,IAAK,OAAA,CACzC,CAAC,GAAG,CACF,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAChB,SAAS,CAAC,qDAAqD,CAE/D;sBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,6CAA6C,CAC1D;wBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,CAC5B;0BAAA,CAAC,MAAM,CACL,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,EAC9B,mBAAmB,CACpB,CACH;wBAAA,EAAE,GAAG,CACL;wBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,GAAG,CACtD;wBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,GAAG,CACtD;wBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,CAC5B;0BAAA,CAAC,OAAO,CAAC,aAAa,CACxB;wBAAA,EAAE,GAAG,CACL;wBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,2BAA2B,CACxC;0BAAA,CAAC,OAAO,CAAC,kBAAkB,IAAI,GAAG,CACpC;wBAAA,EAAE,GAAG,CACL;wBAAA,CAAC,GAAG,CACF;0BAAA,CAAC,IAAI,CACH,SAAS,CAAC,CAAC,oCACT,OAAO,CAAC,SAAS,KAAK,SAAS;oBAC7B,CAAC,CAAC,+BAA+B;oBACjC,CAAC,CAAC,OAAO,CAAC,SAAS,KAAK,SAAS;wBAC/B,CAAC,CAAC,6BAA6B;wBAC/B,CAAC,CAAC,2BAA2B,CACjC,CAAC,CAEH;4BAAA,CAAC,OAAO,CAAC,SAAS,CACpB;0BAAA,EAAE,IAAI,CACR;wBAAA,EAAE,GAAG,CACL;wBAAA,CAAC,GAAG,CACF,SAAS,CAAC,CAAC,oCACT,OAAO,CAAC,SAAS,GAAG,CAAC;oBACnB,CAAC,CAAC,cAAc;oBAChB,CAAC,CAAC,gBAAgB,CACpB,CAAC,CAEH;0BAAA,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CACjC;0BAAA,CAAC,OAAO,CAAC,SAAS,CACpB;wBAAA,EAAE,GAAG,CACL;wBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,GAAG,CACpD;wBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,CAC5B;0BAAA,CAAC,OAAO,CAAC,SAAS,IAAI,GAAG,CAC3B;wBAAA,EAAE,GAAG,CACP;sBAAA,EAAE,GAAG,CACP;oBAAA,EAAE,GAAG,CAAC,CACP,EAjD0C,CAiD1C,CAAC,CACH,CACH;cAAA,EAAE,GAAG,CACP;YAAA,GAAG,CACJ,CACH;QAAA,EAAE,GAAG,CACP;MAAA,EAAE,GAAG,CACL;MAAA,CAAC,mBAAmB,CACpB;MAAA,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,kBAAkB,CAAC,CAAC,YAAY,CAAC,CAAC,qBAAqB,CAAC,CACpE;QAAA,CAAC,aAAa,CACZ;UAAA,CAAC,YAAY,CACX;YAAA,CAAC,WAAW,CAAC,aAAa,EAAE,WAAW,CACzC;UAAA,EAAE,YAAY,CACd;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CACxB;YAAA,CAAC,GAAG,CACF;cAAA,CAAC,KAAK,CACJ;sBAAM,CAAC,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,QAAQ,CAAE,GAAE,CAAC,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,QAAQ,CAC5D;cAAA,EAAE,KAAK,CACP;cAAA,CAAC,CAAC,CAAC,SAAS,CAAC,uBAAuB,CAClC;6BAAa,CAAC,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,GAAG,CAClC;cAAA,EAAE,CAAC,CACL;YAAA,EAAE,GAAG,CACL;YAAA,CAAC,GAAG,CACF;cAAA,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,CAAC,UAAU,EAAE,KAAK,CACnD;cAAA,CAAC,KAAK,CACJ,EAAE,CAAC,kBAAkB,CACrB,IAAI,CAAC,QAAQ,CACb,GAAG,CAAC,GAAG,CACP,GAAG,CAAC,CAAC,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,GAAG,CAAC,CACxB,KAAK,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAC5B,QAAQ,CAAC,CAAC,UAAA,CAAC;YACT,OAAA,cAAc,uBAAM,WAAW,KAAE,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAG;QAA5D,CACF,CAAC,CACD,QAAQ,EAEZ;YAAA,EAAE,GAAG,CACL;YAAA,CAAC,GAAG,CACF;cAAA,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,CAC3C;cAAA,CAAC,KAAK,CACJ,EAAE,CAAC,cAAc,CACjB,IAAI,CAAC,MAAM,CACX,KAAK,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CACxB,QAAQ,CAAC,CAAC,UAAA,CAAC;YACT,OAAA,cAAc,uBAAM,WAAW,KAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAG;QAAxD,CACF,CAAC,CACD,QAAQ,EAEZ;YAAA,EAAE,GAAG,CACL;YAAA,CAAC,GAAG,CACF;cAAA,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,KAAK,CAC7C;cAAA,CAAC,KAAK,CACJ,EAAE,CAAC,YAAY,CACf,KAAK,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAC7B,QAAQ,CAAC,CAAC,UAAA,CAAC;YACT,OAAA,cAAc,uBAAM,WAAW,KAAE,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAG;QAA7D,CACF,CAAC,CACD,WAAW,CAAC,UAAU,EAE1B;YAAA,EAAE,GAAG,CACL;YAAA,CAAC,GAAG,CACF;cAAA,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,OAAO,EAAE,KAAK,CAC/C;cAAA,CAAC,KAAK,CACJ,EAAE,CAAC,iBAAiB,CACpB,KAAK,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAC3B,QAAQ,CAAC,CAAC,UAAA,CAAC;YACT,OAAA,cAAc,uBAAM,WAAW,KAAE,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAG;QAA3D,CACF,CAAC,CACD,WAAW,CAAC,UAAU,EAE1B;YAAA,EAAE,GAAG,CACP;UAAA,EAAE,GAAG,CACL;UAAA,CAAC,YAAY,CACX;YAAA,CAAC,MAAM,CACL,OAAO,CAAC,SAAS,CACjB,OAAO,CAAC,CAAC,cAAM,OAAA,qBAAqB,CAAC,KAAK,CAAC,EAA5B,CAA4B,CAAC,CAE5C;;YACF,EAAE,MAAM,CACR;YAAA,CAAC,MAAM,CACL,OAAO,CAAC,CAAC,mBAAmB,CAAC,CAC7B,QAAQ,CAAC,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAEzC;;YACF,EAAE,MAAM,CACV;UAAA,EAAE,YAAY,CAChB;QAAA,EAAE,aAAa,CACjB;MAAA,EAAE,MAAM,CACR;MAAA,CAAC,mBAAmB,CACpB;MAAA,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,kBAAkB,CAAC,CAAC,YAAY,CAAC,CAAC,qBAAqB,CAAC,CACpE;QAAA,CAAC,aAAa,CACZ;UAAA,CAAC,YAAY,CACX;YAAA,CAAC,WAAW,CAAC,aAAa,EAAE,WAAW,CACzC;UAAA,EAAE,YAAY,CACd;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CACxB;YAAA,CAAC,GAAG,CACF;cAAA,CAAC,KAAK,CACJ;sBAAM,CAAC,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,QAAQ,CAAE,GAAE,CAAC,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,QAAQ,CAC5D;cAAA,EAAE,KAAK,CACP;cAAA,CAAC,CAAC,CAAC,SAAS,CAAC,uBAAuB,CAClC;6BAAa,CAAC,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,GAAG,CAClC;cAAA,EAAE,CAAC,CACL;YAAA,EAAE,GAAG,CACL;YAAA,CAAC,GAAG,CACF;cAAA,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,CAAC,UAAU,EAAE,KAAK,CACnD;cAAA,CAAC,KAAK,CACJ,EAAE,CAAC,kBAAkB,CACrB,IAAI,CAAC,QAAQ,CACb,GAAG,CAAC,GAAG,CACP,KAAK,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAC5B,QAAQ,CAAC,CAAC,UAAA,CAAC;YACT,OAAA,cAAc,uBAAM,WAAW,KAAE,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAG;QAA5D,CACF,CAAC,CACD,QAAQ,EAEZ;YAAA,EAAE,GAAG,CACL;YAAA,CAAC,GAAG,CACF;cAAA,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,CAC3C;cAAA,CAAC,KAAK,CACJ,EAAE,CAAC,cAAc,CACjB,IAAI,CAAC,MAAM,CACX,KAAK,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CACxB,QAAQ,CAAC,CAAC,UAAA,CAAC;YACT,OAAA,cAAc,uBAAM,WAAW,KAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAG;QAAxD,CACF,CAAC,CACD,QAAQ,EAEZ;YAAA,EAAE,GAAG,CACL;YAAA,CAAC,GAAG,CACF;cAAA,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,CAAC,WAAW,EAAE,KAAK,CACpD;cAAA,CAAC,KAAK,CACJ,EAAE,CAAC,kBAAkB,CACrB,KAAK,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAC5B,QAAQ,CAAC,CAAC,UAAA,CAAC;YACT,OAAA,cAAc,uBAAM,WAAW,KAAE,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAG;QAA5D,CACF,CAAC,CACD,WAAW,CAAC,UAAU,EAE1B;YAAA,EAAE,GAAG,CACL;YAAA,CAAC,GAAG,CACF;cAAA,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,OAAO,EAAE,KAAK,CAC/C;cAAA,CAAC,KAAK,CACJ,EAAE,CAAC,iBAAiB,CACpB,KAAK,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAC3B,QAAQ,CAAC,CAAC,UAAA,CAAC;YACT,OAAA,cAAc,uBAAM,WAAW,KAAE,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAG;QAA3D,CACF,CAAC,CACD,WAAW,CAAC,UAAU,EAE1B;YAAA,EAAE,GAAG,CACP;UAAA,EAAE,GAAG,CACL;UAAA,CAAC,YAAY,CACX;YAAA,CAAC,MAAM,CACL,OAAO,CAAC,SAAS,CACjB,OAAO,CAAC,CAAC,cAAM,OAAA,qBAAqB,CAAC,KAAK,CAAC,EAA5B,CAA4B,CAAC,CAE5C;;YACF,EAAE,MAAM,CACR;YAAA,CAAC,MAAM,CACL,OAAO,CAAC,CAAC,mBAAmB,CAAC,CAC7B,QAAQ,CAAC,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAEzC;;YACF,EAAE,MAAM,CACV;UAAA,EAAE,YAAY,CAChB;QAAA,EAAE,aAAa,CACjB;MAAA,EAAE,MAAM,CACR;MAAA,CAAC,uBAAuB,CACxB;MAAA,CAAC,MAAM,CACL,IAAI,CAAC,CAAC,qBAAqB,CAAC,CAC5B,YAAY,CAAC,CAAC,wBAAwB,CAAC,CAEvC;QAAA,CAAC,aAAa,CAAC,SAAS,CAAC,wCAAwC,CAC/D;UAAA,CAAC,YAAY,CACX;YAAA,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAC9C;UAAA,EAAE,YAAY,CACd;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CACxB;YAAA,CAAC,GAAG,CAAC,SAAS,CAAC,uBAAuB,CACpC;uBAAS,CAAC,cAAc,CAAC,MAAM,CAAE;YACnC,EAAE,GAAG,CAEL;;YAAA,CAAC,kCAAkC,CACnC;YAAA,CAAC,GAAG,CAAC,SAAS,CAAC,kDAAkD,CAC/D;cAAA,CAAC,GAAG,CACF;gBAAA,CAAC,KAAK,CAAC,OAAO,CAAC,oBAAoB,CACjC;;gBACF,EAAE,KAAK,CACP;gBAAA,CAAC,KAAK,CACJ,EAAE,CAAC,oBAAoB,CACvB,IAAI,CAAC,MAAM,CACX,QAAQ,CAAC,CAAC,UAAA,CAAC;YACT,IAAM,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;YAC5B,iBAAiB,CAAC,UAAA,IAAI;gBACpB,IAAM,OAAO,gBAAQ,IAAI,CAAE,CAAC;gBAC5B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAA,EAAE;oBAC7B,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,yBACd,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KACtB,YAAY,EAAE,IAAI,GACnB,CAAC;gBACJ,CAAC,CAAC,CAAC;gBACH,OAAO,OAAO,CAAC;YACjB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,EAEN;cAAA,EAAE,GAAG,CACL;cAAA,CAAC,GAAG,CACF;gBAAA,CAAC,KAAK,CAAC,OAAO,CAAC,qBAAqB,CAClC;;gBACF,EAAE,KAAK,CACP;gBAAA,CAAC,KAAK,CACJ,EAAE,CAAC,qBAAqB,CACxB,IAAI,CAAC,MAAM,CACX,WAAW,CAAC,sBAAsB,CAClC,QAAQ,CAAC,CAAC,UAAA,CAAC;YACT,IAAM,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;YAC7B,iBAAiB,CAAC,UAAA,IAAI;gBACpB,IAAM,OAAO,gBAAQ,IAAI,CAAE,CAAC;gBAC5B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAA,EAAE;oBAC7B,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,yBACd,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KACtB,aAAa,EAAE,KAAK,GACrB,CAAC;gBACJ,CAAC,CAAC,CAAC;gBACH,OAAO,OAAO,CAAC;YACjB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,EAEN;cAAA,EAAE,GAAG,CACL;cAAA,CAAC,GAAG,CACF;gBAAA,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,uBAAuB,EAAE,KAAK,CAC7D;gBAAA,CAAC,KAAK,CACJ,EAAE,CAAC,eAAe,CAClB,IAAI,CAAC,MAAM,CACX,WAAW,CAAC,gBAAgB,CAC5B,QAAQ,CAAC,CAAC,UAAA,CAAC;YACT,IAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;YAChC,iBAAiB,CAAC,UAAA,IAAI;gBACpB,IAAM,OAAO,gBAAQ,IAAI,CAAE,CAAC;gBAC5B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAA,EAAE;oBAC7B,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,yBACd,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KACtB,QAAQ,UAAA,GACT,CAAC;gBACJ,CAAC,CAAC,CAAC;gBACH,OAAO,OAAO,CAAC;YACjB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,EAEN;cAAA,EAAE,GAAG,CACP;YAAA,EAAE,GAAG,CAEL;;YAAA,CAAC,GAAG,CAAC,SAAS,CAAC,mCAAmC,CAChD;cAAA,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CACvB;gBAAA,CAAC,KAAK,CAAC,SAAS,CAAC,YAAY,CAC3B;kBAAA,CAAC,EAAE,CACD;oBAAA,CAAC,EAAE,CAAC,SAAS,CAAC,yCAAyC,CACrD;;oBACF,EAAE,EAAE,CACJ;oBAAA,CAAC,EAAE,CAAC,SAAS,CAAC,yCAAyC,CACrD;;oBACF,EAAE,EAAE,CACJ;oBAAA,CAAC,EAAE,CAAC,SAAS,CAAC,2CAA2C,CACvD;;oBACF,EAAE,EAAE,CACJ;oBAAA,CAAC,EAAE,CAAC,SAAS,CAAC,2CAA2C,CACvD;;oBACF,EAAE,EAAE,CACJ;oBAAA,CAAC,EAAE,CAAC,SAAS,CAAC,2CAA2C,CACvD;;oBACF,EAAE,EAAE,CACJ;oBAAA,CAAC,EAAE,CAAC,SAAS,CAAC,2CAA2C,CACvD;;oBACF,EAAE,EAAE,CACN;kBAAA,EAAE,EAAE,CACN;gBAAA,EAAE,KAAK,CACP;gBAAA,CAAC,KAAK,CACJ;kBAAA,CAAC,cAAc,CAAC,GAAG,CAAC,UAAC,KAAY;;YAC/B,IAAM,QAAQ,GAAG,CAAA,MAAA,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,0CAAE,QAAQ,KAAI,CAAC,CAAC;YACzD,IAAM,QAAQ,GAAG,CAAA,MAAA,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,0CAAE,QAAQ,KAAI,CAAC,CAAC;YACzD,IAAM,MAAM,GAAG,KAAK,CAAC,GAAG,GAAG,QAAQ,GAAG,QAAQ,CAAC;YAC/C,IAAM,oBAAoB,GAAG,MAAM,GAAG,CAAC,CAAC;YACxC,IAAM,iBAAiB,GACrB,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAA,MAAA,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,0CAAE,YAAY,CAAA,CAAC;YAC1D,IAAM,QAAQ,GAAG,oBAAoB,IAAI,iBAAiB,CAAC;YAE3D,OAAO,CACL,CAAC,EAAE,CACD,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CACd,SAAS,CAAC,CAAC,mBAAY,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAE,CAAC,CAErD;wBAAA,CAAC,EAAE,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,CACtD;wBAAA,CAAC,EAAE,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,CACtD;wBAAA,CAAC,EAAE,CAAC,SAAS,CAAC,+BAA+B,CAC3C;0BAAA,CAAC,KAAK,CAAC,GAAG,CACZ;wBAAA,EAAE,EAAE,CACJ;wBAAA,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,CACvB;0BAAA,CAAC,KAAK,CACJ,IAAI,CAAC,QAAQ,CACb,GAAG,CAAC,GAAG,CACP,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CACf,KAAK,CAAC,CAAC,CAAA,MAAA,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,0CAAE,QAAQ,KAAI,EAAE,CAAC,CAChD,QAAQ,CAAC,CAAC,UAAA,CAAC;oBACT,OAAA,sBAAsB,CACpB,KAAK,CAAC,EAAE,EACR,UAAU,EACV,CAAC,CAAC,MAAM,CAAC,KAAK,CACf;gBAJD,CAKF,CAAC,CACD,SAAS,CAAC,CAAC,uBAAgB,oBAAoB,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAE,CAAC,EAE9E;wBAAA,EAAE,EAAE,CACJ;wBAAA,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,CACvB;0BAAA,CAAC,KAAK,CACJ,IAAI,CAAC,QAAQ,CACb,GAAG,CAAC,GAAG,CACP,KAAK,CAAC,CAAC,CAAA,MAAA,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,0CAAE,QAAQ,KAAI,EAAE,CAAC,CAChD,QAAQ,CAAC,CAAC,UAAA,CAAC;oBACT,OAAA,sBAAsB,CACpB,KAAK,CAAC,EAAE,EACR,UAAU,EACV,CAAC,CAAC,MAAM,CAAC,KAAK,CACf;gBAJD,CAKF,CAAC,CACD,SAAS,CAAC,cAAc,EAE5B;wBAAA,EAAE,EAAE,CACJ;wBAAA,CAAC,EAAE,CAAC,SAAS,CAAC,uBAAuB,CACnC;0BAAA,CAAC,GAAG,CACF,SAAS,CAAC,CAAC,8BAAuB,oBAAoB,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAE,CAAC,CAE/E;4BAAA,CAAC,MAAM,CACP;4BAAA,CAAC,oBAAoB,IAAI,CACvB,CAAC,GAAG,CAAC,SAAS,CAAC,sBAAsB,CACnC;;8BACF,EAAE,GAAG,CAAC,CACP,CACD;4BAAA,CAAC,iBAAiB,IAAI,CACpB,CAAC,GAAG,CAAC,SAAS,CAAC,sBAAsB,CACnC;;8BACF,EAAE,GAAG,CAAC,CACP,CACH;0BAAA,EAAE,GAAG,CACP;wBAAA,EAAE,EAAE,CACN;sBAAA,EAAE,EAAE,CAAC,CACN,CAAC;QACJ,CAAC,CAAC,CACJ;gBAAA,EAAE,KAAK,CACT;cAAA,EAAE,KAAK,CACT;YAAA,EAAE,GAAG,CACP;UAAA,EAAE,GAAG,CACL;UAAA,CAAC,YAAY,CACX;YAAA,CAAC,MAAM,CACL,OAAO,CAAC,SAAS,CACjB,OAAO,CAAC,CAAC,cAAM,OAAA,wBAAwB,CAAC,KAAK,CAAC,EAA/B,CAA+B,CAAC,CAE/C;;YACF,EAAE,MAAM,CACR;YAAA,CAAC,MAAM,CACL,OAAO,CAAC,CAAC,eAAe,CAAC,CACzB,QAAQ,CAAC,CACP,kBAAkB,CAAC,SAAS;YAC5B,CAAC;gBACC,8BAA8B;gBAC9B,OAAO,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,UAAC,EAAU;wBAAT,EAAE,QAAA,EAAE,IAAI,QAAA;oBACnD,IAAM,KAAK,GAAG,cAAc,CAAC,IAAI,CAC/B,UAAC,CAAQ,IAAK,OAAA,CAAC,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,CAAC,EAArB,CAAqB,CACpC,CAAC;oBACF,IAAI,CAAC,KAAK;wBAAE,OAAO,KAAK,CAAC;oBACzB,IAAM,MAAM,GACV,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC;oBAC1D,IAAI,MAAM,GAAG,CAAC;wBAAE,OAAO,IAAI,CAAC;oBAC5B,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY;wBAAE,OAAO,IAAI,CAAC;oBACzD,OAAO,KAAK,CAAC;gBACf,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,EACJ,CAAC,CAED;cAAA,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,cAAc,CAC9D;YAAA,EAAE,MAAM,CACV;UAAA,EAAE,YAAY,CAChB;QAAA,EAAE,aAAa,CACjB;MAAA,EAAE,MAAM,CAER;;MAAA,CAAC,qBAAqB,CACtB;MAAA,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,mBAAmB,CAAC,CAAC,YAAY,CAAC,CAAC,sBAAsB,CAAC,CACtE;QAAA,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,CAClC;UAAA,CAAC,YAAY,CACX;YAAA,CAAC,WAAW,CAAC,aAAa,EAAE,WAAW,CACzC;UAAA,EAAE,YAAY,CACd;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CACxB;YAAA,CAAC,GAAG,CAAC,SAAS,CAAC,wBAAwB,CACrC;cAAA,CAAC,GAAG,CACF;gBAAA,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,WAAW,EAAE,KAAK,CACjD;gBAAA,CAAC,KAAK,CACJ,EAAE,CAAC,eAAe,CAClB,KAAK,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,CAC7B,QAAQ,CAAC,CAAC,UAAA,CAAC;YACT,OAAA,eAAe,uBACV,YAAY,KACf,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IACxB;QAHF,CAIF,CAAC,CACD,WAAW,CAAC,iBAAiB,CAC7B,QAAQ,EAEZ;cAAA,EAAE,GAAG,CACL;cAAA,CAAC,GAAG,CACF;gBAAA,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,WAAW,EAAE,KAAK,CACjD;gBAAA,CAAC,KAAK,CACJ,EAAE,CAAC,eAAe,CAClB,KAAK,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,CAC7B,QAAQ,CAAC,CAAC,UAAA,CAAC;YACT,OAAA,eAAe,uBACV,YAAY,KACf,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IACxB;QAHF,CAIF,CAAC,CACD,WAAW,CAAC,qBAAqB,CACjC,QAAQ,EAEZ;cAAA,EAAE,GAAG,CACP;YAAA,EAAE,GAAG,CAEL;;YAAA,CAAC,GAAG,CACF;cAAA,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,kBAAkB,EAAE,KAAK,CACxD;cAAA,CAAC,MAAM,CACL,KAAK,CAAC,CAAC,YAAY,CAAC,WAAW,CAAC,CAChC,aAAa,CAAC,CAAC,UAAA,KAAK;YAClB,OAAA,eAAe,uBAAM,YAAY,KAAE,WAAW,EAAE,KAAK,IAAG;QAAxD,CACF,CAAC,CAED;gBAAA,CAAC,aAAa,CAAC,EAAE,CAAC,eAAe,CAC/B;kBAAA,CAAC,WAAW,CAAC,WAAW,CAAC,oBAAoB,EAC/C;gBAAA,EAAE,aAAa,CACf;gBAAA,CAAC,aAAa,CACZ;kBAAA,CAAC,CAAC;YACA,IAAM,aAAa,GAAG,UACpB,KAAsB,EACtB,KAAS;gBAAT,sBAAA,EAAA,SAAS;gBAET,OAAO,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI;oBACvB,IAAM,OAAO,GAAsB;wBACjC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CACvC;4BAAA,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CACnB;4BAAA,CAAC,IAAI,CAAC,IAAI,CACZ;0BAAA,EAAE,UAAU,CAAC;qBACd,CAAC;oBACF,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;wBAClB,OAAO,CAAC,IAAI,OAAZ,OAAO,EACF,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,GAAG,CAAC,CAAC,EAC1C;oBACJ,CAAC;oBACD,OAAO,OAAO,CAAC;gBACjB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;YACF,OAAO,aAAa,CAAC,aAAa,CAAC,CAAC;QACtC,CAAC,CAAC,EAAE,CACN;gBAAA,EAAE,aAAa,CACjB;cAAA,EAAE,MAAM,CACR;cAAA,CAAC,YAAY,CAAC,WAAW;YACvB,CAAC;gBACC,IAAM,aAAa,GAAG,UACpB,KAAsB;oBAEtB,KAAmB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE,CAAC;wBAAtB,IAAM,IAAI,cAAA;wBACb,IAAI,IAAI,CAAC,EAAE,KAAK,YAAY,CAAC,WAAW;4BAAE,OAAO,IAAI,CAAC;wBACtD,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;4BAClB,IAAM,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;4BAC3C,IAAI,KAAK;gCAAE,OAAO,KAAK,CAAC;wBAC1B,CAAC;oBACH,CAAC;oBACD,OAAO,IAAI,CAAC;gBACd,CAAC,CAAC;gBACF,IAAM,SAAS,GAAG,aAAa,CAAC,aAAa,CAAC,CAAC;gBAC/C,IAAM,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,aAAM,SAAS,CAAC,IAAI,SAAM,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC9D,OAAO,SAAS,CAAC,CAAC,CAAC,CACjB,CAAC,CAAC,CAAC,SAAS,CAAC,4BAA4B,CACvC;oDAA8B,CAAC,SAAS,CAC1C;oBAAA,EAAE,CAAC,CAAC,CACL,CAAC,CAAC,CAAC,IAAI,CAAC;YACX,CAAC,CAAC,EAAE,CACR;YAAA,EAAE,GAAG,CAEL;;YAAA,CAAC,GAAG,CAAC,SAAS,CAAC,wBAAwB,CACrC;cAAA,CAAC,GAAG,CACF;gBAAA,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,EAAE,KAAK,CAC7C;gBAAA,CAAC,MAAM,CACL,KAAK,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,CAC7B,aAAa,CAAC,CAAC,UAAA,KAAK;YAClB,OAAA,eAAe,uBAAM,YAAY,KAAE,QAAQ,EAAE,KAAK,IAAG;QAArD,CACF,CAAC,CAED;kBAAA,CAAC,aAAa,CAAC,EAAE,CAAC,cAAc,CAC9B;oBAAA,CAAC,WAAW,CAAC,AAAD,EACd;kBAAA,EAAE,aAAa,CACf;kBAAA,CAAC,aAAa,CACZ;oBAAA,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,UAAU,CACvC;oBAAA,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,CACvC;kBAAA,EAAE,aAAa,CACjB;gBAAA,EAAE,MAAM,CACV;cAAA,EAAE,GAAG,CACL;cAAA,CAAC,GAAG,CACF;gBAAA,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,CACrD;gBAAA,CAAC,KAAK,CACJ,EAAE,CAAC,SAAS,CACZ,IAAI,CAAC,QAAQ,CACb,GAAG,CAAC,GAAG,CACP,KAAK,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CACxB,QAAQ,CAAC,CAAC,UAAA,CAAC;YACT,OAAA,eAAe,uBAAM,YAAY,KAAE,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAG;QAAzD,CACF,CAAC,CACD,WAAW,CAAC,GAAG,EAEnB;cAAA,EAAE,GAAG,CACL;cAAA,CAAC,GAAG,CACF;gBAAA,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,CAC7C;gBAAA,CAAC,KAAK,CACJ,EAAE,CAAC,SAAS,CACZ,IAAI,CAAC,QAAQ,CACb,GAAG,CAAC,GAAG,CACP,KAAK,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CACxB,QAAQ,CAAC,CAAC,UAAA,CAAC;YACT,OAAA,eAAe,uBAAM,YAAY,KAAE,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAG;QAAzD,CACF,CAAC,CACD,WAAW,CAAC,GAAG,EAEnB;cAAA,EAAE,GAAG,CACP;YAAA,EAAE,GAAG,CAEL;;YAAA,CAAC,GAAG,CACF;cAAA,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,EAAE,KAAK,CAC7C;cAAA,CAAC,KAAK,CACJ,EAAE,CAAC,cAAc,CACjB,KAAK,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,CAC7B,QAAQ,CAAC,CAAC,UAAA,CAAC;YACT,OAAA,eAAe,uBAAM,YAAY,KAAE,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAG;QAA9D,CACF,CAAC,CACD,WAAW,CAAC,oBAAoB,EAEpC;YAAA,EAAE,GAAG,CACP;UAAA,EAAE,GAAG,CACL;UAAA,CAAC,YAAY,CACX;YAAA,CAAC,MAAM,CACL,OAAO,CAAC,SAAS,CACjB,OAAO,CAAC,CAAC,cAAM,OAAA,sBAAsB,CAAC,KAAK,CAAC,EAA7B,CAA6B,CAAC,CAE7C;;YACF,EAAE,MAAM,CACR;YAAA,CAAC,MAAM,CACL,OAAO,CAAC,CAAC,oBAAoB,CAAC,CAC9B,QAAQ,CAAC,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAExC;;YACF,EAAE,MAAM,CACV;UAAA,EAAE,YAAY,CAChB;QAAA,EAAE,aAAa,CACjB;MAAA,EAAE,MAAM,CACV;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Search,\n  ChevronRight,\n  ChevronDown,\n  Edit,\n  Trash2,\n  Plus,\n  FileSpreadsheet,\n  X,\n  Minus,\n} from 'lucide-react';\nimport { ComponentNode, componentTree } from '@/data/componentTree';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { queryClient, apiRequest } from '@/lib/queryClient';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/hooks/use-toast';\nimport { format } from 'date-fns';\n\ninterface Spare {\n  id: number;\n  partCode: string;\n  partName: string;\n  componentId: string;\n  componentCode?: string;\n  componentName: string;\n  componentSpareCode?: string;\n  critical: string;\n  rob: number;\n  min: number;\n  location?: string;\n  vesselId: string;\n  stockStatus?: string;\n}\n\ninterface SpareHistory {\n  id: number;\n  timestampUTC: string;\n  vesselId: string;\n  spareId: number;\n  partCode: string;\n  partName: string;\n  componentId: string;\n  componentCode?: string;\n  componentName: string;\n  componentSpareCode?: string;\n  eventType: string;\n  qtyChange: number;\n  robAfter: number;\n  userId: string;\n  remarks?: string;\n  reference?: string;\n}\n\nconst Spares: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<'inventory' | 'history'>(\n    'inventory'\n  );\n  const [selectedComponentId, setSelectedComponentId] = useState<string | null>(\n    null\n  );\n  const [expandedNodes, setExpandedNodes] = useState<Set<string>>(\n    new Set(['6', '6.1', '6.1.1'])\n  );\n  const [searchTerm, setSearchTerm] = useState('');\n  const [criticalityFilter, setCriticalityFilter] = useState('');\n  const [stockFilter, setStockFilter] = useState('');\n  const [vesselId, setVesselId] = useState('V001');\n\n  // Dialog states\n  const [isAddSpareModalOpen, setIsAddSpareModalOpen] = useState(false);\n  const [isBulkUpdateModalOpen, setIsBulkUpdateModalOpen] = useState(false);\n  const [isConsumeModalOpen, setIsConsumeModalOpen] = useState(false);\n  const [isReceiveModalOpen, setIsReceiveModalOpen] = useState(false);\n  const [selectedSpare, setSelectedSpare] = useState<Spare | null>(null);\n\n  // Form states\n  const [consumeForm, setConsumeForm] = useState({\n    quantity: '',\n    date: '',\n    workOrder: '',\n    remarks: '',\n  });\n  const [receiveForm, setReceiveForm] = useState({\n    quantity: '',\n    date: '',\n    supplier: '',\n    remarks: '',\n  });\n  const [bulkUpdateData, setBulkUpdateData] = useState<{\n    [key: number]: {\n      consumed: number;\n      received: number;\n      receivedDate?: string;\n      receivedPlace?: string;\n    };\n  }>({});\n  const [addSpareForm, setAddSpareForm] = useState({\n    partCode: '',\n    partName: '',\n    componentId: '',\n    critical: 'No',\n    rob: '',\n    min: '',\n    location: '',\n  });\n\n  const { toast } = useToast();\n\n  // Fetch spares data\n  const {\n    data: sparesData = [],\n    isLoading,\n    refetch,\n  } = useQuery({\n    queryKey: ['/api/spares', vesselId],\n    queryFn: async () => {\n      const response = await fetch(`/api/spares/${vesselId}`);\n      if (!response.ok) throw new Error('Failed to fetch spares');\n      return response.json();\n    },\n  });\n\n  // Fetch history data\n  const { data: historyData = [] } = useQuery({\n    queryKey: ['/api/spares/history', vesselId],\n    queryFn: async () => {\n      const response = await fetch(`/api/spares/history/${vesselId}`);\n      if (!response.ok) throw new Error('Failed to fetch history');\n      return response.json();\n    },\n    enabled: activeTab === 'history',\n  });\n\n  // Consume spare mutation\n  const consumeSpareMutation = useMutation({\n    mutationFn: async ({\n      id,\n      ...data\n    }: {\n      id: number;\n      qty: number;\n      dateLocal: string;\n      tz?: string;\n      place?: string;\n      remarks?: string;\n      userId?: string;\n      vesselId: string;\n    }) => {\n      const response = await fetch(`/api/spares/${id}/consume`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to consume spare');\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/spares'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/spares/history'] });\n      toast({ title: 'Success', description: 'Spare consumed successfully' });\n      setIsConsumeModalOpen(false);\n      setConsumeForm({ quantity: '', date: '', workOrder: '', remarks: '' });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to consume spare',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Receive spare mutation\n  const receiveSpareMutation = useMutation({\n    mutationFn: async ({\n      id,\n      ...data\n    }: {\n      id: number;\n      qty: number;\n      dateLocal: string;\n      tz?: string;\n      place?: string;\n      supplierPO?: string;\n      remarks?: string;\n      userId?: string;\n      vesselId: string;\n    }) => {\n      const response = await fetch(`/api/spares/${id}/receive`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to receive spare');\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/spares'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/spares/history'] });\n      toast({ title: 'Success', description: 'Spare received successfully' });\n      setIsReceiveModalOpen(false);\n      setReceiveForm({ quantity: '', date: '', supplier: '', remarks: '' });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to receive spare',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Create spare mutation\n  const createSpareMutation = useMutation({\n    mutationFn: async (data: any) => {\n      return apiRequest('/api/spares', 'POST', data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/spares'] });\n      toast({ title: 'Success', description: 'Spare created successfully' });\n      setIsAddSpareModalOpen(false);\n      setAddSpareForm({\n        partCode: '',\n        partName: '',\n        componentId: '',\n        critical: 'No',\n        rob: '',\n        min: '',\n        location: '',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to create spare',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Bulk update mutation\n  const bulkUpdateMutation = useMutation({\n    mutationFn: async (data: {\n      vesselId: string;\n      tz: string;\n      rows: Array<{\n        componentSpareId: number;\n        consumed: number;\n        received: number;\n        receivedDate?: string;\n        receivedPlace?: string;\n        dateLocal?: string;\n        remarks?: string;\n        userId: string;\n      }>;\n    }) => {\n      const response = await fetch('/api/spares/bulk-update', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to perform bulk update');\n      }\n\n      return response.json();\n    },\n    onSuccess: results => {\n      // Update the spares data with new ROB values\n      queryClient.setQueryData(['/api/spares', vesselId], (old: any) => {\n        if (!old) return old;\n        return old.map((spare: any) => {\n          const result = results.find(\n            (r: any) => r.componentSpareId === spare.id && r.success\n          );\n          if (result && result.robAfter !== undefined) {\n            return { ...spare, rob: result.robAfter };\n          }\n          return spare;\n        });\n      });\n\n      queryClient.invalidateQueries({ queryKey: ['/api/spares/history'] });\n\n      // Count successes, failures, and skipped\n      const succeeded = results.filter((r: any) => r.success).length;\n      const failed = results.filter((r: any) => !r.success && r.message).length;\n      const skipped = results.filter(\n        (r: any) => !r.success && !r.message\n      ).length;\n\n      toast({\n        title: 'Bulk Update Complete',\n        description: `Updated: ${succeeded}, Skipped: ${skipped}, Failed: ${failed}`,\n      });\n      setIsBulkUpdateModalOpen(false);\n      setBulkUpdateData({});\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to perform bulk update',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Helper function to check if a component matches selection (including children)\n  const isComponentMatch = (spare: Spare, selectedId: string): boolean => {\n    if (spare.componentId === selectedId) return true;\n    // Check if spare's componentId starts with selected (hierarchical match)\n    return spare.componentId.startsWith(`${selectedId}.`);\n  };\n\n  // Filter spares based on all criteria\n  const filteredSpares = useMemo(() => {\n    let filtered = sparesData;\n\n    // Filter by selected component (including children)\n    if (selectedComponentId) {\n      filtered = filtered.filter((spare: Spare) =>\n        isComponentMatch(spare, selectedComponentId)\n      );\n    }\n\n    // Filter by search term\n    if (searchTerm) {\n      const search = searchTerm.toLowerCase();\n      filtered = filtered.filter(\n        (spare: Spare) =>\n          spare.partCode.toLowerCase().includes(search) ||\n          spare.partName.toLowerCase().includes(search) ||\n          spare.componentName.toLowerCase().includes(search) ||\n          spare.componentCode?.toLowerCase().includes(search) ||\n          spare.location?.toLowerCase().includes(search)\n      );\n    }\n\n    // Filter by criticality\n    if (criticalityFilter && criticalityFilter !== 'All') {\n      if (criticalityFilter === 'Critical') {\n        filtered = filtered.filter(\n          (spare: Spare) =>\n            spare.critical === 'Critical' || spare.critical === 'Yes'\n        );\n      } else if (criticalityFilter === 'Non-critical') {\n        filtered = filtered.filter(\n          (spare: Spare) =>\n            spare.critical !== 'Critical' && spare.critical !== 'Yes'\n        );\n      }\n    }\n\n    // Filter by stock status\n    if (stockFilter && stockFilter !== 'All') {\n      filtered = filtered.filter(\n        (spare: Spare) => spare.stockStatus === stockFilter\n      );\n    }\n\n    return filtered;\n  }, [\n    sparesData,\n    selectedComponentId,\n    searchTerm,\n    criticalityFilter,\n    stockFilter,\n  ]);\n\n  // Toggle node expansion\n  const toggleNode = (nodeId: string) => {\n    setExpandedNodes(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(nodeId)) {\n        newSet.delete(nodeId);\n      } else {\n        newSet.add(nodeId);\n      }\n      return newSet;\n    });\n  };\n\n  // Select component from tree\n  const selectComponent = (componentId: string) => {\n    setSelectedComponentId(componentId);\n  };\n\n  // Clear all filters\n  const clearFilters = () => {\n    setSearchTerm('');\n    setCriticalityFilter('');\n    setStockFilter('');\n    setSelectedComponentId(null);\n  };\n\n  // Open consume modal\n  const openConsumeModal = (spare: Spare) => {\n    setSelectedSpare(spare);\n    setConsumeForm({\n      quantity: '',\n      date: format(new Date(), 'yyyy-MM-dd'),\n      workOrder: '',\n      remarks: '',\n    });\n    setIsConsumeModalOpen(true);\n  };\n\n  // Open receive modal\n  const openReceiveModal = (spare: Spare) => {\n    setSelectedSpare(spare);\n    setReceiveForm({\n      quantity: '',\n      date: format(new Date(), 'yyyy-MM-dd'),\n      supplier: '',\n      remarks: '',\n    });\n    setIsReceiveModalOpen(true);\n  };\n\n  // Handle consume submit\n  const handleConsumeSubmit = () => {\n    if (!selectedSpare || !consumeForm.quantity || !consumeForm.date) {\n      toast({\n        title: 'Error',\n        description: 'Please fill in all required fields',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    const quantity = parseInt(consumeForm.quantity);\n    if (quantity <= 0) {\n      toast({\n        title: 'Error',\n        description: 'Quantity must be greater than 0',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    if (quantity > selectedSpare.rob) {\n      toast({\n        title: 'Error',\n        description: 'Insufficient stock',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    consumeSpareMutation.mutate({\n      id: selectedSpare.id,\n      qty: quantity,\n      dateLocal: consumeForm.date,\n      tz: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      place: consumeForm.workOrder || undefined,\n      remarks: consumeForm.remarks || undefined,\n      userId: 'user',\n      vesselId,\n    });\n  };\n\n  // Handle receive submit\n  const handleReceiveSubmit = () => {\n    if (!selectedSpare || !receiveForm.quantity || !receiveForm.date) {\n      toast({\n        title: 'Error',\n        description: 'Please fill in all required fields',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    const quantity = parseInt(receiveForm.quantity);\n    if (quantity <= 0) {\n      toast({\n        title: 'Error',\n        description: 'Quantity must be greater than 0',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    receiveSpareMutation.mutate({\n      id: selectedSpare.id,\n      qty: quantity,\n      dateLocal: receiveForm.date,\n      tz: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      supplierPO: receiveForm.supplier || undefined,\n      remarks: receiveForm.remarks || undefined,\n      userId: 'user',\n      vesselId,\n    });\n  };\n\n  // Handle bulk update modal\n  const openBulkUpdateModal = () => {\n    if (filteredSpares.length === 0) {\n      toast({\n        title: 'Info',\n        description: 'No spares to update. Please adjust filters.',\n        variant: 'default',\n      });\n      return;\n    }\n    setIsBulkUpdateModalOpen(true);\n    // Initialize bulk update data\n    const initialData: {\n      [key: number]: {\n        consumed: number;\n        received: number;\n        receivedDate?: string;\n        receivedPlace?: string;\n        comments?: string;\n      };\n    } = {};\n    filteredSpares.forEach((spare: Spare) => {\n      initialData[spare.id] = { consumed: 0, received: 0 };\n    });\n    setBulkUpdateData(initialData);\n  };\n\n  // Handle bulk update input changes\n  const handleBulkUpdateChange = (\n    spareId: number,\n    field:\n      | 'consumed'\n      | 'received'\n      | 'receivedDate'\n      | 'receivedPlace'\n      | 'comments',\n    value: string | number\n  ) => {\n    if (field === 'consumed' || field === 'received') {\n      const numValue = parseInt(value as string) || 0;\n      setBulkUpdateData(prev => ({\n        ...prev,\n        [spareId]: {\n          ...prev[spareId],\n          [field]: numValue,\n        },\n      }));\n    } else {\n      setBulkUpdateData(prev => ({\n        ...prev,\n        [spareId]: {\n          ...prev[spareId],\n          [field]: value as string,\n        },\n      }));\n    }\n  };\n\n  // Handle add spare submit\n  const handleAddSpareSubmit = () => {\n    if (\n      !addSpareForm.partCode ||\n      !addSpareForm.partName ||\n      !addSpareForm.componentId\n    ) {\n      toast({\n        title: 'Error',\n        description: 'Please fill in all required fields',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    const rob = parseInt(addSpareForm.rob) || 0;\n    const min = parseInt(addSpareForm.min) || 0;\n\n    // Find the component for getting the name\n    const findComponent = (nodes: ComponentNode[]): ComponentNode | null => {\n      for (const node of nodes) {\n        if (node.id === addSpareForm.componentId) return node;\n        if (node.children) {\n          const found = findComponent(node.children);\n          if (found) return found;\n        }\n      }\n      return null;\n    };\n\n    const component = findComponent(componentTree);\n\n    createSpareMutation.mutate({\n      partCode: addSpareForm.partCode,\n      partName: addSpareForm.partName,\n      componentId: addSpareForm.componentId,\n      componentCode: component?.code || undefined,\n      componentName: component?.name || 'Unknown',\n      critical: addSpareForm.critical,\n      rob,\n      min,\n      location: addSpareForm.location || undefined,\n      vesselId,\n    });\n  };\n\n  // Save bulk updates\n  const saveBulkUpdates = () => {\n    // Validate all rows first\n    const hasErrors = Object.entries(bulkUpdateData).some(([id, data]) => {\n      const spare = sparesData.find((s: Spare) => s.id === parseInt(id));\n      if (!spare) return false;\n\n      const newROB = spare.rob - (data.consumed || 0) + (data.received || 0);\n      if (newROB < 0) return true;\n\n      // Check if received date is required when receiving\n      if (data.received > 0 && !data.receivedDate) return true;\n\n      return false;\n    });\n\n    if (hasErrors) {\n      toast({\n        title: 'Validation Error',\n        description: 'Please fix validation errors before saving',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    const rows = Object.entries(bulkUpdateData)\n      .filter(([_, data]) => data.consumed > 0 || data.received > 0)\n      .map(([id, data]) => ({\n        componentSpareId: parseInt(id),\n        consumed: data.consumed || 0,\n        received: data.received || 0,\n        receivedDate: data.received > 0 ? data.receivedDate : undefined,\n        receivedPlace: data.receivedPlace || undefined,\n        dateLocal:\n          data.consumed > 0\n            ? new Date().toISOString().split('T')[0]\n            : undefined,\n        remarks: data.comments || undefined,\n        userId: 'user',\n      }));\n\n    if (rows.length === 0) {\n      toast({\n        title: 'Info',\n        description: 'No changes to save',\n        variant: 'default',\n      });\n      return;\n    }\n\n    bulkUpdateMutation.mutate({\n      vesselId,\n      tz: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      rows,\n    });\n  };\n\n  // Render component tree\n  const renderComponentTree = (nodes: ComponentNode[], level: number = 0) => {\n    return nodes.map(node => {\n      const hasChildren = node.children && node.children.length > 0;\n      const isExpanded = expandedNodes.has(node.id);\n      const isSelected = selectedComponentId === node.id;\n\n      return (\n        <div key={node.id}>\n          <div\n            className={`flex items-center px-3 py-2 cursor-pointer hover:bg-gray-50 border-b border-gray-100 ${\n              isSelected ? 'bg-[#52baf3] text-white' : ''\n            }`}\n            style={{ paddingLeft: `${level * 20 + 12}px` }}\n            onClick={() => selectComponent(node.id)}\n          >\n            <button\n              className='mr-2 flex-shrink-0'\n              onClick={e => {\n                e.stopPropagation();\n                if (hasChildren) {\n                  toggleNode(node.id);\n                }\n              }}\n            >\n              {hasChildren ? (\n                isExpanded ? (\n                  <ChevronDown\n                    className={`h-4 w-4 ${isSelected ? 'text-white' : 'text-gray-600'}`}\n                  />\n                ) : (\n                  <ChevronRight\n                    className={`h-4 w-4 ${isSelected ? 'text-white' : 'text-gray-600'}`}\n                  />\n                )\n              ) : (\n                <span className='w-4' />\n              )}\n            </button>\n            <span\n              className={`text-sm ${isSelected ? 'text-white' : 'text-gray-700'}`}\n            >\n              {node.code}. {node.name}\n            </span>\n          </div>\n          {hasChildren && isExpanded && (\n            <div>{renderComponentTree(node.children!, level + 1)}</div>\n          )}\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className='h-full p-6 bg-[#fafafa]'>\n      {/* Header */}\n      <div className='mb-4'>\n        <h1 className='text-2xl font-semibold text-gray-800 mb-4'>\n          {activeTab === 'inventory'\n            ? 'Spares Inventory'\n            : 'Spares - History of Transactions'}\n        </h1>\n\n        {/* Navigation Tabs with Buttons */}\n        <div className='flex justify-between items-center mb-4'>\n          <div className='flex'>\n            <button\n              className={`px-4 py-2 rounded-l ${activeTab === 'inventory' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-600'}`}\n              onClick={() => setActiveTab('inventory')}\n            >\n              Inventory\n            </button>\n            <button\n              className={`px-4 py-2 rounded-r ${activeTab === 'history' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-600'}`}\n              onClick={() => setActiveTab('history')}\n            >\n              History\n            </button>\n          </div>\n          <div className='flex gap-2'>\n            <Button\n              className='bg-[#52baf3] hover:bg-[#40a8e0] text-white'\n              onClick={() => setIsAddSpareModalOpen(true)}\n            >\n              + Add Spare\n            </Button>\n            <Button\n              className='bg-green-600 hover:bg-green-700 text-white'\n              onClick={openBulkUpdateModal}\n            >\n              🔄 Bulk Update Spares\n            </Button>\n          </div>\n        </div>\n      </div>\n      {/* Search and Filters */}\n      <div className='flex gap-3 items-center mb-4'>\n        <Select value={vesselId} onValueChange={setVesselId}>\n          <SelectTrigger className='w-32'>\n            <SelectValue placeholder='Vessel' />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value='V001'>Vessel 1</SelectItem>\n            <SelectItem value='V002'>Vessel 2</SelectItem>\n          </SelectContent>\n        </Select>\n\n        <div className='relative w-80'>\n          <Search className='absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4' />\n          <Input\n            placeholder='Search parts or components...'\n            value={searchTerm}\n            onChange={e => setSearchTerm(e.target.value)}\n            className='pl-10'\n          />\n        </div>\n\n        <Select value={criticalityFilter} onValueChange={setCriticalityFilter}>\n          <SelectTrigger className='w-32'>\n            <SelectValue placeholder='Criticality' />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value='All'>All</SelectItem>\n            <SelectItem value='Critical'>Critical</SelectItem>\n            <SelectItem value='Non-critical'>Non-critical</SelectItem>\n          </SelectContent>\n        </Select>\n\n        <Select value={stockFilter} onValueChange={setStockFilter}>\n          <SelectTrigger className='w-32'>\n            <SelectValue placeholder='Stock' />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value='All'>All</SelectItem>\n            <SelectItem value='OK'>OK</SelectItem>\n            <SelectItem value='Low'>Low</SelectItem>\n          </SelectContent>\n        </Select>\n\n        <Button\n          variant='outline'\n          onClick={clearFilters}\n          className='text-gray-600'\n        >\n          Clear\n        </Button>\n      </div>\n      {/* Main Content */}\n      <div className='flex gap-4 h-[calc(100%-180px)]'>\n        {/* Left Panel - Component Tree */}\n        <div className='w-80 bg-white border border-gray-200 rounded-lg overflow-hidden'>\n          <div className='text-white px-4 py-2 font-semibold bg-[#52baf3]'>\n            COMPONENT SEARCH\n          </div>\n          <div className='overflow-y-auto h-[calc(100%-40px)]'>\n            {renderComponentTree(componentTree)}\n          </div>\n        </div>\n\n        {/* Right Panel - Table */}\n        <div className='flex-1 bg-white border border-gray-200 rounded-lg overflow-hidden'>\n          {activeTab === 'inventory' ? (\n            <>\n              {/* Inventory Table Header */}\n              <div className='px-4 py-3 border-b border-gray-200 bg-[#52baf3]'>\n                <div className='grid grid-cols-10 gap-4 text-sm font-semibold text-[#ffffff]'>\n                  <div className='text-[#ffffff]'>Part Code</div>\n                  <div>Part Name</div>\n                  <div>Component</div>\n                  <div>Spare Code</div>\n                  <div>Critical</div>\n                  <div className='text-center'>ROB</div>\n                  <div className='text-center'>Min</div>\n                  <div className='text-center'>Stock</div>\n                  <div>Location</div>\n                  <div className='text-center'>Actions</div>\n                </div>\n              </div>\n\n              {/* Inventory Table Body */}\n              <div className='overflow-y-auto h-[calc(100%-48px)]'>\n                {isLoading ? (\n                  <div className='p-8 text-center text-gray-500'>\n                    Loading...\n                  </div>\n                ) : filteredSpares.length === 0 ? (\n                  <div className='p-8 text-center text-gray-500'>\n                    No spares found. Try adjusting your filters.\n                  </div>\n                ) : (\n                  filteredSpares.map((spare: Spare) => (\n                    <div\n                      key={spare.id}\n                      className='px-4 py-3 border-b border-gray-100 hover:bg-gray-50'\n                    >\n                      <div className='grid grid-cols-10 gap-4 text-sm items-center'>\n                        <div className='text-gray-900'>{spare.partCode}</div>\n                        <div className='text-gray-700'>{spare.partName}</div>\n                        <div className='text-gray-700'>\n                          {spare.componentName}\n                        </div>\n                        <div className='text-blue-600 font-medium'>\n                          {spare.componentSpareCode || '-'}\n                        </div>\n                        <div>\n                          <span\n                            className={`px-2 py-1 rounded text-xs ${\n                              spare.critical === 'Critical' ||\n                              spare.critical === 'Yes'\n                                ? 'bg-red-100 text-red-800'\n                                : 'bg-gray-100 text-gray-800'\n                            }`}\n                          >\n                            {spare.critical}\n                          </span>\n                        </div>\n                        <div className='text-center'>{spare.rob}</div>\n                        <div className='text-center'>{spare.min}</div>\n                        <div className='text-center'>\n                          {spare.stockStatus && (\n                            <span\n                              className={`px-2 py-1 rounded text-xs ${\n                                spare.stockStatus === 'Low'\n                                  ? 'bg-red-100 text-red-800'\n                                  : spare.stockStatus === 'OK'\n                                    ? 'bg-green-100 text-green-800'\n                                    : 'bg-yellow-100 text-yellow-800'\n                              }`}\n                            >\n                              {spare.stockStatus}\n                            </span>\n                          )}\n                        </div>\n                        <div className='text-gray-700'>\n                          {spare.location || '-'}\n                        </div>\n                        <div className='flex gap-1 justify-center'>\n                          <Button\n                            size='sm'\n                            variant='ghost'\n                            onClick={() => {}}\n                            title='Edit'\n                          >\n                            <Edit className='h-4 w-4' />\n                          </Button>\n                          <Button\n                            size='sm'\n                            variant='ghost'\n                            onClick={() => openConsumeModal(spare)}\n                            title='Consume'\n                          >\n                            <Minus className='h-4 w-4' />\n                          </Button>\n                          <Button\n                            size='sm'\n                            variant='ghost'\n                            onClick={() => openReceiveModal(spare)}\n                            title='Receive'\n                          >\n                            <Plus className='h-4 w-4' />\n                          </Button>\n                          <Button\n                            size='sm'\n                            variant='ghost'\n                            onClick={() => {}}\n                            title='Delete'\n                          >\n                            <Trash2 className='h-4 w-4' />\n                          </Button>\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </>\n          ) : (\n            <>\n              {/* History Table Header */}\n              <div className='bg-gray-100 px-4 py-3 border-b border-gray-200'>\n                <div className='grid grid-cols-9 gap-4 text-sm font-semibold text-gray-700'>\n                  <div>Date/Time</div>\n                  <div>Part Code</div>\n                  <div>Part Name</div>\n                  <div>Component</div>\n                  <div>Spare Code</div>\n                  <div>Event</div>\n                  <div className='text-center'>Qty Change</div>\n                  <div className='text-center'>ROB After</div>\n                  <div>Reference</div>\n                </div>\n              </div>\n\n              {/* History Table Body */}\n              <div className='overflow-y-auto h-[calc(100%-48px)]'>\n                {historyData.length === 0 ? (\n                  <div className='p-8 text-center text-gray-500'>\n                    No history records found.\n                  </div>\n                ) : (\n                  historyData.map((history: SpareHistory) => (\n                    <div\n                      key={history.id}\n                      className='px-4 py-3 border-b border-gray-100 hover:bg-gray-50'\n                    >\n                      <div className='grid grid-cols-9 gap-4 text-sm items-center'>\n                        <div className='text-gray-900'>\n                          {format(\n                            new Date(history.timestampUTC),\n                            'dd-MMM-yyyy HH:mm'\n                          )}\n                        </div>\n                        <div className='text-gray-700'>{history.partCode}</div>\n                        <div className='text-gray-700'>{history.partName}</div>\n                        <div className='text-gray-700'>\n                          {history.componentName}\n                        </div>\n                        <div className='text-blue-600 font-medium'>\n                          {history.componentSpareCode || '-'}\n                        </div>\n                        <div>\n                          <span\n                            className={`px-2 py-1 rounded text-xs ${\n                              history.eventType === 'CONSUME'\n                                ? 'bg-orange-100 text-orange-800'\n                                : history.eventType === 'RECEIVE'\n                                  ? 'bg-green-100 text-green-800'\n                                  : 'bg-blue-100 text-blue-800'\n                            }`}\n                          >\n                            {history.eventType}\n                          </span>\n                        </div>\n                        <div\n                          className={`text-center font-semibold ${\n                            history.qtyChange < 0\n                              ? 'text-red-600'\n                              : 'text-green-600'\n                          }`}\n                        >\n                          {history.qtyChange > 0 ? '+' : ''}\n                          {history.qtyChange}\n                        </div>\n                        <div className='text-center'>{history.robAfter}</div>\n                        <div className='text-gray-700'>\n                          {history.reference || '-'}\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n      {/* Consume Modal */}\n      <Dialog open={isConsumeModalOpen} onOpenChange={setIsConsumeModalOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Consume Spare</DialogTitle>\n          </DialogHeader>\n          <div className='space-y-4'>\n            <div>\n              <Label>\n                Part: {selectedSpare?.partCode} - {selectedSpare?.partName}\n              </Label>\n              <p className='text-sm text-gray-500'>\n                Current ROB: {selectedSpare?.rob}\n              </p>\n            </div>\n            <div>\n              <Label htmlFor='consume-quantity'>Quantity *</Label>\n              <Input\n                id='consume-quantity'\n                type='number'\n                min='1'\n                max={selectedSpare?.rob}\n                value={consumeForm.quantity}\n                onChange={e =>\n                  setConsumeForm({ ...consumeForm, quantity: e.target.value })\n                }\n                required\n              />\n            </div>\n            <div>\n              <Label htmlFor='consume-date'>Date *</Label>\n              <Input\n                id='consume-date'\n                type='date'\n                value={consumeForm.date}\n                onChange={e =>\n                  setConsumeForm({ ...consumeForm, date: e.target.value })\n                }\n                required\n              />\n            </div>\n            <div>\n              <Label htmlFor='consume-wo'>Work Order</Label>\n              <Input\n                id='consume-wo'\n                value={consumeForm.workOrder}\n                onChange={e =>\n                  setConsumeForm({ ...consumeForm, workOrder: e.target.value })\n                }\n                placeholder='Optional'\n              />\n            </div>\n            <div>\n              <Label htmlFor='consume-remarks'>Remarks</Label>\n              <Input\n                id='consume-remarks'\n                value={consumeForm.remarks}\n                onChange={e =>\n                  setConsumeForm({ ...consumeForm, remarks: e.target.value })\n                }\n                placeholder='Optional'\n              />\n            </div>\n          </div>\n          <DialogFooter>\n            <Button\n              variant='outline'\n              onClick={() => setIsConsumeModalOpen(false)}\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={handleConsumeSubmit}\n              disabled={consumeSpareMutation.isPending}\n            >\n              Save\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n      {/* Receive Modal */}\n      <Dialog open={isReceiveModalOpen} onOpenChange={setIsReceiveModalOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Receive Spare</DialogTitle>\n          </DialogHeader>\n          <div className='space-y-4'>\n            <div>\n              <Label>\n                Part: {selectedSpare?.partCode} - {selectedSpare?.partName}\n              </Label>\n              <p className='text-sm text-gray-500'>\n                Current ROB: {selectedSpare?.rob}\n              </p>\n            </div>\n            <div>\n              <Label htmlFor='receive-quantity'>Quantity *</Label>\n              <Input\n                id='receive-quantity'\n                type='number'\n                min='1'\n                value={receiveForm.quantity}\n                onChange={e =>\n                  setReceiveForm({ ...receiveForm, quantity: e.target.value })\n                }\n                required\n              />\n            </div>\n            <div>\n              <Label htmlFor='receive-date'>Date *</Label>\n              <Input\n                id='receive-date'\n                type='date'\n                value={receiveForm.date}\n                onChange={e =>\n                  setReceiveForm({ ...receiveForm, date: e.target.value })\n                }\n                required\n              />\n            </div>\n            <div>\n              <Label htmlFor='receive-supplier'>Supplier/PO</Label>\n              <Input\n                id='receive-supplier'\n                value={receiveForm.supplier}\n                onChange={e =>\n                  setReceiveForm({ ...receiveForm, supplier: e.target.value })\n                }\n                placeholder='Optional'\n              />\n            </div>\n            <div>\n              <Label htmlFor='receive-remarks'>Remarks</Label>\n              <Input\n                id='receive-remarks'\n                value={receiveForm.remarks}\n                onChange={e =>\n                  setReceiveForm({ ...receiveForm, remarks: e.target.value })\n                }\n                placeholder='Optional'\n              />\n            </div>\n          </div>\n          <DialogFooter>\n            <Button\n              variant='outline'\n              onClick={() => setIsReceiveModalOpen(false)}\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={handleReceiveSubmit}\n              disabled={receiveSpareMutation.isPending}\n            >\n              Save\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n      {/* Bulk Update Modal */}\n      <Dialog\n        open={isBulkUpdateModalOpen}\n        onOpenChange={setIsBulkUpdateModalOpen}\n      >\n        <DialogContent className='max-w-5xl max-h-[80vh] overflow-y-auto'>\n          <DialogHeader>\n            <DialogTitle>Bulk Update Spares</DialogTitle>\n          </DialogHeader>\n          <div className='space-y-4'>\n            <div className='text-sm text-gray-500'>\n              Updating {filteredSpares.length} spare(s)\n            </div>\n\n            {/* Common fields for all spares */}\n            <div className='grid grid-cols-3 gap-4 p-4 bg-gray-50 rounded-lg'>\n              <div>\n                <Label htmlFor='bulk-received-date'>\n                  Received Date (Apply to all)\n                </Label>\n                <Input\n                  id='bulk-received-date'\n                  type='date'\n                  onChange={e => {\n                    const date = e.target.value;\n                    setBulkUpdateData(prev => {\n                      const updated = { ...prev };\n                      Object.keys(updated).forEach(id => {\n                        updated[Number(id)] = {\n                          ...updated[Number(id)],\n                          receivedDate: date,\n                        };\n                      });\n                      return updated;\n                    });\n                  }}\n                />\n              </div>\n              <div>\n                <Label htmlFor='bulk-received-place'>\n                  Received Place (Apply to all)\n                </Label>\n                <Input\n                  id='bulk-received-place'\n                  type='text'\n                  placeholder='e.g., Singapore Port'\n                  onChange={e => {\n                    const place = e.target.value;\n                    setBulkUpdateData(prev => {\n                      const updated = { ...prev };\n                      Object.keys(updated).forEach(id => {\n                        updated[Number(id)] = {\n                          ...updated[Number(id)],\n                          receivedPlace: place,\n                        };\n                      });\n                      return updated;\n                    });\n                  }}\n                />\n              </div>\n              <div>\n                <Label htmlFor='bulk-comments'>Comments (Apply to all)</Label>\n                <Input\n                  id='bulk-comments'\n                  type='text'\n                  placeholder='Enter comments'\n                  onChange={e => {\n                    const comments = e.target.value;\n                    setBulkUpdateData(prev => {\n                      const updated = { ...prev };\n                      Object.keys(updated).forEach(id => {\n                        updated[Number(id)] = {\n                          ...updated[Number(id)],\n                          comments,\n                        };\n                      });\n                      return updated;\n                    });\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='border rounded-lg overflow-hidden'>\n              <table className='w-full'>\n                <thead className='bg-gray-50'>\n                  <tr>\n                    <th className='px-4 py-2 text-left text-sm font-medium'>\n                      Part Code\n                    </th>\n                    <th className='px-4 py-2 text-left text-sm font-medium'>\n                      Part Name\n                    </th>\n                    <th className='px-4 py-2 text-center text-sm font-medium'>\n                      ROB\n                    </th>\n                    <th className='px-4 py-2 text-center text-sm font-medium'>\n                      Consumed\n                    </th>\n                    <th className='px-4 py-2 text-center text-sm font-medium'>\n                      Received\n                    </th>\n                    <th className='px-4 py-2 text-center text-sm font-medium'>\n                      New ROB\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {filteredSpares.map((spare: Spare) => {\n                    const consumed = bulkUpdateData[spare.id]?.consumed || 0;\n                    const received = bulkUpdateData[spare.id]?.received || 0;\n                    const newROB = spare.rob - consumed + received;\n                    const hasInsufficientStock = newROB < 0;\n                    const needsReceivedDate =\n                      received > 0 && !bulkUpdateData[spare.id]?.receivedDate;\n                    const hasError = hasInsufficientStock || needsReceivedDate;\n\n                    return (\n                      <tr\n                        key={spare.id}\n                        className={`border-t ${hasError ? 'bg-red-50' : ''}`}\n                      >\n                        <td className='px-4 py-2 text-sm'>{spare.partCode}</td>\n                        <td className='px-4 py-2 text-sm'>{spare.partName}</td>\n                        <td className='px-4 py-2 text-center text-sm'>\n                          {spare.rob}\n                        </td>\n                        <td className='px-4 py-2'>\n                          <Input\n                            type='number'\n                            min='0'\n                            max={spare.rob}\n                            value={bulkUpdateData[spare.id]?.consumed || ''}\n                            onChange={e =>\n                              handleBulkUpdateChange(\n                                spare.id,\n                                'consumed',\n                                e.target.value\n                              )\n                            }\n                            className={`w-20 mx-auto ${hasInsufficientStock ? 'border-red-500' : ''}`}\n                          />\n                        </td>\n                        <td className='px-4 py-2'>\n                          <Input\n                            type='number'\n                            min='0'\n                            value={bulkUpdateData[spare.id]?.received || ''}\n                            onChange={e =>\n                              handleBulkUpdateChange(\n                                spare.id,\n                                'received',\n                                e.target.value\n                              )\n                            }\n                            className='w-20 mx-auto'\n                          />\n                        </td>\n                        <td className='px-4 py-2 text-center'>\n                          <div\n                            className={`text-sm font-medium ${hasInsufficientStock ? 'text-red-600' : ''}`}\n                          >\n                            {newROB}\n                            {hasInsufficientStock && (\n                              <div className='text-xs text-red-600'>\n                                Insufficient stock\n                              </div>\n                            )}\n                            {needsReceivedDate && (\n                              <div className='text-xs text-red-600'>\n                                Date required\n                              </div>\n                            )}\n                          </div>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <DialogFooter>\n            <Button\n              variant='outline'\n              onClick={() => setIsBulkUpdateModalOpen(false)}\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={saveBulkUpdates}\n              disabled={\n                bulkUpdateMutation.isPending ||\n                (() => {\n                  // Check for validation errors\n                  return Object.entries(bulkUpdateData).some(([id, data]) => {\n                    const spare = filteredSpares.find(\n                      (s: Spare) => s.id === parseInt(id)\n                    );\n                    if (!spare) return false;\n                    const newROB =\n                      spare.rob - (data.consumed || 0) + (data.received || 0);\n                    if (newROB < 0) return true;\n                    if (data.received > 0 && !data.receivedDate) return true;\n                    return false;\n                  });\n                })()\n              }\n            >\n              {bulkUpdateMutation.isPending ? 'Saving...' : 'Save Changes'}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Add Spare Modal */}\n      <Dialog open={isAddSpareModalOpen} onOpenChange={setIsAddSpareModalOpen}>\n        <DialogContent className='max-w-2xl'>\n          <DialogHeader>\n            <DialogTitle>Add New Spare</DialogTitle>\n          </DialogHeader>\n          <div className='space-y-4'>\n            <div className='grid grid-cols-2 gap-4'>\n              <div>\n                <Label htmlFor='add-part-code'>Part Code *</Label>\n                <Input\n                  id='add-part-code'\n                  value={addSpareForm.partCode}\n                  onChange={e =>\n                    setAddSpareForm({\n                      ...addSpareForm,\n                      partCode: e.target.value,\n                    })\n                  }\n                  placeholder='e.g., SP-ME-001'\n                  required\n                />\n              </div>\n              <div>\n                <Label htmlFor='add-part-name'>Part Name *</Label>\n                <Input\n                  id='add-part-name'\n                  value={addSpareForm.partName}\n                  onChange={e =>\n                    setAddSpareForm({\n                      ...addSpareForm,\n                      partName: e.target.value,\n                    })\n                  }\n                  placeholder='e.g., Fuel Injector'\n                  required\n                />\n              </div>\n            </div>\n\n            <div>\n              <Label htmlFor='add-component'>Linked Component *</Label>\n              <Select\n                value={addSpareForm.componentId}\n                onValueChange={value =>\n                  setAddSpareForm({ ...addSpareForm, componentId: value })\n                }\n              >\n                <SelectTrigger id='add-component'>\n                  <SelectValue placeholder='Select a component' />\n                </SelectTrigger>\n                <SelectContent>\n                  {(() => {\n                    const renderOptions = (\n                      nodes: ComponentNode[],\n                      level = 0\n                    ): React.ReactNode[] => {\n                      return nodes.flatMap(node => {\n                        const options: React.ReactNode[] = [\n                          <SelectItem key={node.id} value={node.id}>\n                            {'  '.repeat(level)}\n                            {node.name}\n                          </SelectItem>,\n                        ];\n                        if (node.children) {\n                          options.push(\n                            ...renderOptions(node.children, level + 1)\n                          );\n                        }\n                        return options;\n                      });\n                    };\n                    return renderOptions(componentTree);\n                  })()}\n                </SelectContent>\n              </Select>\n              {addSpareForm.componentId &&\n                (() => {\n                  const findComponent = (\n                    nodes: ComponentNode[]\n                  ): ComponentNode | null => {\n                    for (const node of nodes) {\n                      if (node.id === addSpareForm.componentId) return node;\n                      if (node.children) {\n                        const found = findComponent(node.children);\n                        if (found) return found;\n                      }\n                    }\n                    return null;\n                  };\n                  const component = findComponent(componentTree);\n                  const spareCode = component ? `SP-${component.code}-XXX` : '';\n                  return spareCode ? (\n                    <p className='text-sm text-blue-600 mt-1'>\n                      Component Spare Code will be: {spareCode}\n                    </p>\n                  ) : null;\n                })()}\n            </div>\n\n            <div className='grid grid-cols-3 gap-4'>\n              <div>\n                <Label htmlFor='add-critical'>Critical</Label>\n                <Select\n                  value={addSpareForm.critical}\n                  onValueChange={value =>\n                    setAddSpareForm({ ...addSpareForm, critical: value })\n                  }\n                >\n                  <SelectTrigger id='add-critical'>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value='Yes'>Yes</SelectItem>\n                    <SelectItem value='No'>No</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div>\n                <Label htmlFor='add-rob'>ROB (Remain on Board)</Label>\n                <Input\n                  id='add-rob'\n                  type='number'\n                  min='0'\n                  value={addSpareForm.rob}\n                  onChange={e =>\n                    setAddSpareForm({ ...addSpareForm, rob: e.target.value })\n                  }\n                  placeholder='0'\n                />\n              </div>\n              <div>\n                <Label htmlFor='add-min'>Minimum Stock</Label>\n                <Input\n                  id='add-min'\n                  type='number'\n                  min='0'\n                  value={addSpareForm.min}\n                  onChange={e =>\n                    setAddSpareForm({ ...addSpareForm, min: e.target.value })\n                  }\n                  placeholder='0'\n                />\n              </div>\n            </div>\n\n            <div>\n              <Label htmlFor='add-location'>Location</Label>\n              <Input\n                id='add-location'\n                value={addSpareForm.location}\n                onChange={e =>\n                  setAddSpareForm({ ...addSpareForm, location: e.target.value })\n                }\n                placeholder='e.g., Store Room A'\n              />\n            </div>\n          </div>\n          <DialogFooter>\n            <Button\n              variant='outline'\n              onClick={() => setIsAddSpareModalOpen(false)}\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={handleAddSpareSubmit}\n              disabled={createSpareMutation.isPending}\n            >\n              Create Spare\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Spares;\n"]}