{"version":3,"file":"RunningHours.jsx","sourceRoot":"","sources":["RunningHours.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useState, useMemo } from 'react';\nimport { ColDef } from 'ag-grid-enterprise';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\nimport { Search, FileSpreadsheet } from 'lucide-react';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useToast } from '@/hooks/use-toast';\nimport { getComponentCategory } from '@/utils/componentUtils';\nimport { useModifyMode } from '@/hooks/useModifyMode';\nimport { ModifyStickyFooter } from '@/components/modify/ModifyStickyFooter';\nimport AgGridTable from '@/components/common/AgGridTable';\nimport {\n  RunningHoursActionsCellRenderer,\n  UtilizationRateCellRenderer,\n  DateCellRenderer,\n} from '@/components/common/AgGridCellRenderers';\nimport { apiRequest } from '@/lib/queryClient';\n\ninterface RunningHoursData {\n  id: string;\n  component: string;\n  componentCode?: string;\n  componentCategory: string;\n  runningHours: string;\n  lastUpdated: string;\n  utilizationRate?: number | null;\n}\n\nconst RunningHours = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isUpdateDialogOpen, setIsUpdateDialogOpen] = useState(false);\n  const [selectedComponent, setSelectedComponent] =\n    useState<RunningHoursData | null>(null);\n\n  // Modify mode integration\n  const { isModifyMode, fieldChanges } = useModifyMode();\n  const [updateMode, setUpdateMode] = useState<'setTotal' | 'addDelta'>(\n    'setTotal'\n  );\n  const [meterReplaced, setMeterReplaced] = useState(false);\n  const [updateForm, setUpdateForm] = useState({\n    oldValue: '',\n    newValue: '',\n    dateUpdated: '',\n    comments: '',\n    oldMeterFinal: '',\n    newMeterStart: '0',\n  });\n  const [isBulkUpdateOpen, setIsBulkUpdateOpen] = useState(false);\n  const [bulkUpdateMode, setBulkUpdateMode] = useState<'setTotal' | 'addDelta'>(\n    'setTotal'\n  );\n  const [bulkUpdateData, setBulkUpdateData] = useState<{\n    [key: string]: {\n      value: string;\n      meterReplaced: boolean;\n      oldMeterFinal: string;\n      newMeterStart: string;\n    };\n  }>({});\n  const [bulkUpdateErrors, setBulkUpdateErrors] = useState<{\n    [key: string]: string;\n  }>({});\n\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const vesselId = 'V001'; // Default vessel ID\n\n  // Fetch components data from MySQL database\n  const { data: components, isLoading } = useQuery<any[]>({\n    queryKey: ['/api/running-hours/components', vesselId],\n    queryFn: async () => {\n      const response = await apiRequest(\n        'GET',\n        `/api/running-hours/components/${vesselId}`\n      );\n      return await response.json();\n    },\n  });\n\n  // Transform components data to RunningHoursData format\n  const runningHoursData: RunningHoursData[] = useMemo(() => {\n    if (!components || !Array.isArray(components)) return [];\n\n    return components.map((component: any) => ({\n      id: component.id,\n      component: component.name,\n      componentCode: component.componentCode,\n      componentCategory: getComponentCategory(component.componentCode || ''),\n      runningHours: component.currentCumulativeRH\n        ? `${parseInt(component.currentCumulativeRH).toLocaleString()} hrs`\n        : '0 hrs',\n      lastUpdated: component.lastUpdated || 'Never',\n      utilizationRate: null, // Will be loaded separately\n    }));\n  }, [components]);\n\n  // Fetch utilization rates from MySQL database\n  const { data: utilizationRates } = useQuery<Record<string, number | null>>({\n    queryKey: ['/api/running-hours/utilization-rates', vesselId],\n    queryFn: async () => {\n      if (!components || !Array.isArray(components)) return {};\n\n      const componentIds = components.map((c: any) => c.id);\n      if (componentIds.length === 0) return {};\n\n      const response = await apiRequest(\n        'POST',\n        '/api/running-hours/utilization-rates',\n        {\n          componentIds,\n        }\n      );\n      return await response.json();\n    },\n    enabled: !!components && Array.isArray(components) && components.length > 0,\n    staleTime: 15 * 60 * 1000, // Cache for 15 minutes\n  });\n\n  // Combine data with utilization rates\n  const runningHoursDataWithRates = useMemo(() => {\n    if (!utilizationRates) return runningHoursData;\n\n    return runningHoursData.map(item => ({\n      ...item,\n      utilizationRate: utilizationRates[item.id] || null,\n    }));\n  }, [runningHoursData, utilizationRates]);\n\n  // Mutation for single update - Real MySQL API call\n  const updateRunningHours = useMutation({\n    mutationFn: async (data: any) => {\n      const response = await apiRequest(\n        'POST',\n        `/api/running-hours/update/${data.componentId}`,\n        data\n      );\n      return await response.json();\n    },\n    onSuccess: () => {\n      // Invalidate and refetch data\n      queryClient.invalidateQueries({\n        queryKey: ['/api/running-hours/components', vesselId],\n      });\n      queryClient.invalidateQueries({\n        queryKey: ['/api/running-hours/utilization-rates', vesselId],\n      });\n\n      toast({\n        title: 'Success',\n        description: 'Running hours updated successfully',\n      });\n      setIsUpdateDialogOpen(false);\n      handleCancelUpdate();\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to update running hours',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Mutation for bulk update - Real MySQL API call\n  const bulkUpdateRunningHours = useMutation({\n    mutationFn: async (data: any) => {\n      const response = await apiRequest(\n        'POST',\n        '/api/running-hours/bulk-update',\n        data\n      );\n      return await response.json();\n    },\n    onSuccess: () => {\n      // Invalidate and refetch data\n      queryClient.invalidateQueries({\n        queryKey: ['/api/running-hours/components', vesselId],\n      });\n      queryClient.invalidateQueries({\n        queryKey: ['/api/running-hours/utilization-rates', vesselId],\n      });\n\n      toast({\n        title: 'Success',\n        description: 'Bulk update completed successfully',\n      });\n      setIsBulkUpdateOpen(false);\n      setBulkUpdateData({});\n      setBulkUpdateErrors({});\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to perform bulk update',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const clearFilters = () => {\n    setSearchTerm('');\n  };\n\n  // Export to CSV function\n  const exportToCSV = () => {\n    // Filter data based on current filters\n    const filteredData = runningHoursDataWithRates.filter(item => {\n      if (\n        searchTerm &&\n        !item.component.toLowerCase().includes(searchTerm.toLowerCase())\n      ) {\n        return false;\n      }\n      return true;\n    });\n\n    // Prepare CSV headers\n    const headers = [\n      'Vessel',\n      'Component',\n      'Component Code',\n      'Component Category',\n      'Running Hours (cumulative)',\n      'Last Updated (local)',\n      'Utilization Rate (hrs/day)',\n      'Notes',\n    ];\n\n    // Prepare CSV rows\n    const rows = filteredData.map(item => [\n      vesselId,\n      item.component,\n      item.componentCode || '',\n      item.componentCategory,\n      item.runningHours.replace(' hrs', ''),\n      item.lastUpdated,\n      item.utilizationRate !== null && item.utilizationRate !== undefined\n        ? item.utilizationRate.toString()\n        : '',\n      '', // Notes field (empty for now)\n    ]);\n\n    // Convert to CSV format\n    const csvContent = [\n      headers.join(','),\n      ...rows.map(row => row.map(cell => `\"${cell}\"`).join(',')),\n    ].join('\\n');\n\n    // Create blob and download\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const now = new Date();\n    const filename = `running-hours_${now.getFullYear()}${String(now.getMonth() + 1).padStart(2, '0')}${String(now.getDate()).padStart(2, '0')}_${String(now.getHours()).padStart(2, '0')}${String(now.getMinutes()).padStart(2, '0')}.csv`;\n\n    link.href = URL.createObjectURL(blob);\n    link.download = filename;\n    link.click();\n\n    toast({\n      title: 'Export Complete',\n      description: `Exported ${filteredData.length} records to ${filename}`,\n    });\n  };\n\n  const openUpdateDialog = (component: RunningHoursData) => {\n    setSelectedComponent(component);\n    setUpdateForm({\n      oldValue: component.runningHours.replace(' hrs', '').replace(/,/g, ''),\n      newValue: '',\n      dateUpdated: '',\n      comments: '',\n      oldMeterFinal: '',\n      newMeterStart: '0',\n    });\n    setUpdateMode('setTotal');\n    setMeterReplaced(false);\n    setIsUpdateDialogOpen(true);\n  };\n\n  const handleUpdateFormChange = (field: string, value: string) => {\n    setUpdateForm(prev => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  const handleSaveUpdate = () => {\n    if (!selectedComponent) return;\n\n    // Validate date not in future\n    const selectedDate = new Date(updateForm.dateUpdated);\n    const today = new Date();\n    today.setHours(23, 59, 59, 999);\n\n    if (selectedDate > today) {\n      toast({\n        title: 'Error',\n        description: 'Date cannot be in the future',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    // Calculate new total\n    const previousValue = parseFloat(updateForm.oldValue);\n    const inputValue = parseFloat(updateForm.newValue);\n    let newTotal: number;\n\n    if (updateMode === 'addDelta') {\n      newTotal = previousValue + inputValue;\n    } else {\n      newTotal = inputValue;\n    }\n\n    // Validation: new hours must be >= previous unless meter replaced\n    if (!meterReplaced && newTotal < previousValue) {\n      toast({\n        title: 'Validation Error',\n        description:\n          \"New hours must be ≥ previous hours. Use 'Meter replaced?' if the counter was reset.\",\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    // Format date in vessel local time\n    const dateLocal = `${selectedDate.toLocaleDateString('en-GB', {\n      day: '2-digit',\n      month: 'short',\n      year: 'numeric',\n    })} ${selectedDate.toLocaleTimeString('en-GB', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: false,\n    })}`;\n\n    // Prepare audit data\n    const auditData = {\n      vesselId,\n      componentId: selectedComponent.id,\n      previousRH: previousValue,\n      newRH: newTotal,\n      cumulativeRH: meterReplaced\n        ? previousValue +\n          (inputValue - parseFloat(updateForm.newMeterStart || '0'))\n        : newTotal,\n      dateUpdatedLocal: dateLocal,\n      dateUpdatedTZ: 'Asia/Kolkata', // Default timezone\n      enteredAtUTC: new Date(),\n      userId: 'current-user', // Placeholder\n      source: 'single' as const,\n      notes: updateForm.comments,\n      meterReplaced,\n      oldMeterFinal: meterReplaced\n        ? parseFloat(updateForm.oldMeterFinal)\n        : null,\n      newMeterStart: meterReplaced\n        ? parseFloat(updateForm.newMeterStart)\n        : null,\n      version: 1,\n    };\n\n    updateRunningHours.mutate({\n      componentId: selectedComponent.id,\n      audit: auditData,\n      cumulativeRH: auditData.cumulativeRH,\n      dateUpdatedLocal: dateLocal,\n    });\n  };\n\n  const handleCancelUpdate = () => {\n    setIsUpdateDialogOpen(false);\n    setSelectedComponent(null);\n    setUpdateForm({\n      oldValue: '',\n      newValue: '',\n      dateUpdated: '',\n      comments: '',\n      oldMeterFinal: '',\n      newMeterStart: '0',\n    });\n    setUpdateMode('setTotal');\n    setMeterReplaced(false);\n  };\n\n  const openBulkUpdate = () => {\n    setBulkUpdateData({});\n    setBulkUpdateErrors({});\n    setIsBulkUpdateOpen(true);\n  };\n\n  const handleBulkUpdateChange = (\n    componentId: string,\n    field: string,\n    value: any\n  ) => {\n    setBulkUpdateData(prev => ({\n      ...prev,\n      [componentId]: {\n        ...prev[componentId],\n        [field]: value,\n      },\n    }));\n    // Clear error when user starts typing\n    if (bulkUpdateErrors[componentId] && field === 'value') {\n      setBulkUpdateErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[componentId];\n        return newErrors;\n      });\n    }\n  };\n\n  const handleBulkSave = () => {\n    const errors: { [key: string]: string } = {};\n    const updates = [];\n    const today = new Date();\n    today.setHours(23, 59, 59, 999);\n\n    // Process each component with updates\n    for (const component of runningHoursData) {\n      const updateData = bulkUpdateData[component.id];\n      if (!updateData || !updateData.value || updateData.value.trim() === '')\n        continue;\n\n      // Validate numeric input\n      const inputValue = parseFloat(updateData.value.replace(/,/g, ''));\n      if (isNaN(inputValue)) {\n        errors[component.id] = 'Please enter a valid number';\n        continue;\n      }\n\n      const previousValue = parseFloat(\n        component.runningHours.replace(' hrs', '').replace(/,/g, '')\n      );\n      let newTotal: number;\n\n      if (bulkUpdateMode === 'addDelta') {\n        newTotal = previousValue + inputValue;\n      } else {\n        newTotal = inputValue;\n      }\n\n      // Validation: new hours must be >= previous unless meter replaced\n      if (!updateData.meterReplaced && newTotal < previousValue) {\n        errors[component.id] =\n          \"New hours must be ≥ previous hours. Check 'Meter replaced?' if the counter was reset.\";\n        continue;\n      }\n\n      // Format date in vessel local time\n      const dateLocal = `${today.toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: 'short',\n        year: 'numeric',\n      })} ${today.toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false,\n      })}`;\n\n      // Prepare audit data\n      const auditData = {\n        vesselId,\n        componentId: component.id,\n        previousRH: previousValue,\n        newRH: newTotal,\n        cumulativeRH: updateData.meterReplaced\n          ? previousValue +\n            (inputValue - parseFloat(updateData.newMeterStart || '0'))\n          : newTotal,\n        dateUpdatedLocal: dateLocal,\n        dateUpdatedTZ: 'Asia/Kolkata',\n        enteredAtUTC: new Date(),\n        userId: 'current-user',\n        source: 'bulk' as const,\n        notes: '',\n        meterReplaced: updateData.meterReplaced || false,\n        oldMeterFinal: updateData.meterReplaced\n          ? parseFloat(updateData.oldMeterFinal)\n          : null,\n        newMeterStart: updateData.meterReplaced\n          ? parseFloat(updateData.newMeterStart)\n          : null,\n        version: 1,\n      };\n\n      updates.push({\n        componentId: component.id,\n        audit: auditData,\n        cumulativeRH: auditData.cumulativeRH,\n        dateUpdatedLocal: dateLocal,\n      });\n    }\n\n    if (Object.keys(errors).length > 0) {\n      setBulkUpdateErrors(errors);\n      return;\n    }\n\n    if (updates.length === 0) {\n      toast({\n        title: 'No changes',\n        description: 'No values were entered for update',\n      });\n      return;\n    }\n\n    bulkUpdateRunningHours.mutate({ updates });\n  };\n\n  // Filtered data for AG Grid\n  const filteredData = useMemo(() => {\n    return runningHoursDataWithRates.filter(\n      item =>\n        !searchTerm ||\n        item.component.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  }, [runningHoursDataWithRates, searchTerm]);\n\n  // AG Grid column definitions\n  const columnDefs = useMemo(\n    (): ColDef[] => [\n      {\n        headerName: 'Component',\n        field: 'component',\n        width: 200,\n        pinned: 'left',\n      },\n      {\n        headerName: 'Component Code',\n        field: 'componentCode',\n        width: 150,\n      },\n      {\n        headerName: 'Component Category',\n        field: 'componentCategory',\n        width: 180,\n      },\n      {\n        headerName: 'Running Hours',\n        field: 'runningHours',\n        width: 150,\n        cellRenderer: (params: any) => {\n          return <span className='font-medium'>{params.value}</span>;\n        },\n      },\n      {\n        headerName: 'Last Updated',\n        field: 'lastUpdated',\n        width: 140,\n        cellRenderer: DateCellRenderer,\n      },\n      {\n        headerName: 'Utilization Rate',\n        field: 'utilizationRate',\n        width: 150,\n        cellRenderer: UtilizationRateCellRenderer,\n        tooltip: 'Computed from last 30 days of RH entries',\n      },\n      {\n        headerName: 'Update RH',\n        field: 'actions',\n        width: 140,\n        cellRenderer: RunningHoursActionsCellRenderer,\n        sortable: false,\n        filter: false,\n        pinned: 'right',\n      },\n    ],\n    []\n  );\n\n  // AG Grid context for action handlers\n  const gridContext = useMemo(\n    () => ({\n      onUpdate: openUpdateDialog,\n    }),\n    []\n  );\n\n  return (\n    <div className='space-y-6'>\n      {/* Header */}\n      <div className='flex items-center justify-between'>\n        <h1 className='text-2xl font-semibold text-gray-900'>Running Hours</h1>\n        <Button\n          className='bg-green-600 hover:bg-green-700 text-white ml-[228px] mr-[228px]'\n          onClick={openBulkUpdate}\n        >\n          <span className='mr-2'>+</span>\n          Bulk Update RH\n        </Button>\n      </div>\n\n      {/* Search and Export Row */}\n      <div className='flex items-center gap-4'>\n        <div className='relative flex-1 max-w-md'>\n          <Search className='absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4' />\n          <Input\n            placeholder='Search Component'\n            value={searchTerm}\n            onChange={e => setSearchTerm(e.target.value)}\n            className='pl-10'\n          />\n        </div>\n\n        <Button\n          variant='outline'\n          className='flex items-center gap-2'\n          onClick={exportToCSV}\n        >\n          <FileSpreadsheet className='h-4 w-4' />\n          Export\n        </Button>\n\n        <Button\n          variant='outline'\n          onClick={clearFilters}\n          className='flex items-center gap-2'\n        >\n          Clear\n        </Button>\n      </div>\n\n      {/* Table */}\n      <div className='bg-white rounded-lg'>\n        {isLoading ? (\n          <div className='flex items-center justify-center h-64'>\n            <div className='text-gray-500'>\n              Loading running hours data from database...\n            </div>\n          </div>\n        ) : (\n          <AgGridTable\n            rowData={filteredData}\n            columnDefs={columnDefs}\n            context={gridContext}\n            height='calc(100vh - 320px)'\n            enableExport={true}\n            enableSideBar={true}\n            enableStatusBar={true}\n            pagination={true}\n            paginationPageSize={50}\n            animateRows={true}\n            suppressRowClickSelection={true}\n            className='rounded-lg shadow-sm'\n          />\n        )}\n      </div>\n\n      {/* Update Running Hours Dialog */}\n      <Dialog open={isUpdateDialogOpen} onOpenChange={setIsUpdateDialogOpen}>\n        <DialogContent className='max-w-md'>\n          <DialogHeader>\n            <DialogTitle className='text-[#52baf3] border-b border-[#52baf3] pb-2'>\n              Update Running Hours - {selectedComponent?.component}\n            </DialogTitle>\n          </DialogHeader>\n          <div className='space-y-4 py-4'>\n            {/* Mode Toggle */}\n            <div>\n              <Label className='text-sm text-gray-600'>Mode</Label>\n              <RadioGroup\n                value={updateMode}\n                onValueChange={(value: any) => setUpdateMode(value)}\n                className='mt-2'\n              >\n                <div className='flex items-center space-x-4'>\n                  <div className='flex items-center space-x-2'>\n                    <RadioGroupItem value='setTotal' id='setTotal' />\n                    <Label htmlFor='setTotal'>Set Total</Label>\n                  </div>\n                  <div className='flex items-center space-x-2'>\n                    <RadioGroupItem value='addDelta' id='addDelta' />\n                    <Label htmlFor='addDelta'>Add Delta</Label>\n                  </div>\n                </div>\n              </RadioGroup>\n            </div>\n\n            <div className='grid grid-cols-2 gap-4'>\n              <div>\n                <Label className='text-sm text-gray-600'>Old Value</Label>\n                <Input\n                  value={updateForm.oldValue}\n                  readOnly\n                  className='mt-1 bg-gray-100'\n                />\n              </div>\n              <div>\n                <Label className='text-sm text-gray-600'>\n                  {updateMode === 'addDelta' ? 'Delta Value' : 'New Value'}\n                </Label>\n                <Input\n                  type='number'\n                  value={updateForm.newValue}\n                  onChange={e =>\n                    handleUpdateFormChange('newValue', e.target.value)\n                  }\n                  className='mt-1'\n                  placeholder={updateMode === 'addDelta' ? '100' : '20000'}\n                />\n              </div>\n            </div>\n\n            <div>\n              <Label className='text-sm text-gray-600'>Date Updated</Label>\n              <Input\n                type='date'\n                value={updateForm.dateUpdated}\n                onChange={e =>\n                  handleUpdateFormChange('dateUpdated', e.target.value)\n                }\n                className='mt-1'\n                max={new Date().toISOString().split('T')[0]}\n              />\n            </div>\n\n            {/* Meter Replaced Checkbox */}\n            <div className='flex items-center space-x-2'>\n              <Checkbox\n                id='meterReplaced'\n                checked={meterReplaced}\n                onCheckedChange={checked =>\n                  setMeterReplaced(checked as boolean)\n                }\n              />\n              <Label htmlFor='meterReplaced' className='text-sm'>\n                Meter replaced?\n              </Label>\n            </div>\n\n            {/* Meter Replacement Fields */}\n            {meterReplaced && (\n              <div className='grid grid-cols-2 gap-4 p-3 bg-gray-50 rounded'>\n                <div>\n                  <Label className='text-sm text-gray-600'>\n                    Old Meter Final *\n                  </Label>\n                  <Input\n                    type='number'\n                    value={updateForm.oldMeterFinal}\n                    onChange={e =>\n                      handleUpdateFormChange('oldMeterFinal', e.target.value)\n                    }\n                    className='mt-1'\n                    placeholder='Final reading'\n                    required\n                  />\n                </div>\n                <div>\n                  <Label className='text-sm text-gray-600'>\n                    New Meter Start *\n                  </Label>\n                  <Input\n                    type='number'\n                    value={updateForm.newMeterStart}\n                    onChange={e =>\n                      handleUpdateFormChange('newMeterStart', e.target.value)\n                    }\n                    className='mt-1'\n                    placeholder='0'\n                  />\n                </div>\n              </div>\n            )}\n\n            <div>\n              <Label className='text-sm text-gray-600'>Comments</Label>\n              <Textarea\n                value={updateForm.comments}\n                onChange={e =>\n                  handleUpdateFormChange('comments', e.target.value)\n                }\n                className='mt-1 resize-none'\n                rows={3}\n                placeholder={\n                  meterReplaced ? 'Reason for meter replacement' : 'Comments'\n                }\n              />\n            </div>\n          </div>\n\n          <div className='flex justify-end gap-2 pt-4'>\n            <Button variant='outline' onClick={handleCancelUpdate}>\n              Cancel\n            </Button>\n            <Button\n              className='bg-[#52baf3] hover:bg-[#4aa3d9] text-white'\n              onClick={handleSaveUpdate}\n            >\n              Save\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* Bulk Update Dialog */}\n      <Dialog open={isBulkUpdateOpen} onOpenChange={setIsBulkUpdateOpen}>\n        <DialogContent className='w-[90vw] max-w-none h-[90vh] flex flex-col'>\n          <DialogHeader className='pb-4 space-y-3'>\n            <DialogTitle className='text-[#52baf3] text-xl'>\n              Bulk Update Running Hours\n            </DialogTitle>\n            {/* Mode Toggle for Bulk Update */}\n            <div className='flex items-center space-x-4'>\n              <Label className='text-sm text-gray-600'>Mode:</Label>\n              <RadioGroup\n                value={bulkUpdateMode}\n                onValueChange={(value: any) => setBulkUpdateMode(value)}\n                className='flex flex-row space-x-4'\n              >\n                <div className='flex items-center space-x-2'>\n                  <RadioGroupItem value='setTotal' id='bulkSetTotal' />\n                  <Label htmlFor='bulkSetTotal'>Set Total</Label>\n                </div>\n                <div className='flex items-center space-x-2'>\n                  <RadioGroupItem value='addDelta' id='bulkAddDelta' />\n                  <Label htmlFor='bulkAddDelta'>Add Delta</Label>\n                </div>\n              </RadioGroup>\n            </div>\n          </DialogHeader>\n\n          <div className='flex-1 overflow-auto'>\n            <div className='bg-white rounded-lg border border-gray-200'>\n              {/* Table Header */}\n              <div className='bg-[#52baf3] text-white px-4 py-3'>\n                <div className='grid grid-cols-5 gap-4 text-sm font-medium'>\n                  <div>Component Name</div>\n                  <div>Previous Running Hours</div>\n                  <div>\n                    {bulkUpdateMode === 'addDelta'\n                      ? 'Delta Hours'\n                      : 'Present Running Hours'}\n                  </div>\n                  <div>Meter Replaced?</div>\n                  <div>Status</div>\n                </div>\n              </div>\n\n              {/* Table Body */}\n              <div className='divide-y divide-gray-200'>\n                {runningHoursData.map(item => {\n                  const updateData = bulkUpdateData[item.id] || {\n                    value: '',\n                    meterReplaced: false,\n                  };\n                  return (\n                    <div key={item.id} className='px-4 py-3'>\n                      <div className='grid grid-cols-5 gap-4 text-sm items-center'>\n                        <div className='text-gray-900 font-medium'>\n                          {item.component}\n                        </div>\n                        <div className='text-gray-700'>{item.runningHours}</div>\n                        <div className='space-y-1'>\n                          <Input\n                            type='number'\n                            value={updateData.value || ''}\n                            onChange={e =>\n                              handleBulkUpdateChange(\n                                item.id,\n                                'value',\n                                e.target.value\n                              )\n                            }\n                            placeholder={\n                              bulkUpdateMode === 'addDelta'\n                                ? 'Enter delta'\n                                : 'Enter new value'\n                            }\n                            className='w-full'\n                          />\n                          {bulkUpdateErrors[item.id] && (\n                            <div className='text-red-500 text-xs'>\n                              {bulkUpdateErrors[item.id]}\n                            </div>\n                          )}\n                        </div>\n                        <div className='flex items-center justify-center'>\n                          <Checkbox\n                            checked={updateData.meterReplaced || false}\n                            onCheckedChange={checked =>\n                              handleBulkUpdateChange(\n                                item.id,\n                                'meterReplaced',\n                                checked\n                              )\n                            }\n                          />\n                        </div>\n                        <div className='text-gray-500'>\n                          {updateData.value && updateData.value.trim() !== ''\n                            ? 'Ready to update'\n                            : 'No change'}\n                        </div>\n                      </div>\n                      {/* Meter replacement fields if checkbox is checked */}\n                      {updateData.meterReplaced && (\n                        <div className='grid grid-cols-2 gap-4 mt-2 pl-10 pr-4'>\n                          <div>\n                            <Label className='text-xs text-gray-600'>\n                              Old Meter Final\n                            </Label>\n                            <Input\n                              type='number'\n                              value={updateData.oldMeterFinal || ''}\n                              onChange={e =>\n                                handleBulkUpdateChange(\n                                  item.id,\n                                  'oldMeterFinal',\n                                  e.target.value\n                                )\n                              }\n                              placeholder='Final reading'\n                              className='h-8 text-sm'\n                            />\n                          </div>\n                          <div>\n                            <Label className='text-xs text-gray-600'>\n                              New Meter Start\n                            </Label>\n                            <Input\n                              type='number'\n                              value={updateData.newMeterStart || ''}\n                              onChange={e =>\n                                handleBulkUpdateChange(\n                                  item.id,\n                                  'newMeterStart',\n                                  e.target.value\n                                )\n                              }\n                              placeholder='0'\n                              className='h-8 text-sm'\n                            />\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n\n          <div className='flex justify-end gap-2 pt-4 border-t'>\n            <Button\n              variant='outline'\n              onClick={() => setIsBulkUpdateOpen(false)}\n            >\n              Cancel\n            </Button>\n            <Button\n              className='bg-[#52baf3] hover:bg-[#4aa3d9] text-white'\n              onClick={handleBulkSave}\n            >\n              Save\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* Modify Mode Sticky Footer */}\n      {isModifyMode && (\n        <ModifyStickyFooter\n          isVisible={true}\n          hasChanges={Object.keys(fieldChanges).length > 0}\n          changedFieldsCount={Object.keys(fieldChanges).length}\n          onCancel={() => {\n            window.location.href = '/pms/modify';\n          }}\n          onSubmitChangeRequest={() => {\n            // Submit change request logic will be implemented\n            console.log('Submitting changes:', fieldChanges);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default RunningHours;\n"]}