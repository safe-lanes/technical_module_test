{"version":3,"file":"RunningHours.jsx","sourceRoot":"","sources":["RunningHours.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Search, FileSpreadsheet, Calendar } from \"lucide-react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { getComponentCategory } from \"@/utils/componentUtils\";\nimport { useModifyMode } from \"@/hooks/useModifyMode\";\nimport { ModifyFieldWrapper } from \"@/components/modify/ModifyFieldWrapper\";\nimport { ModifyStickyFooter } from \"@/components/modify/ModifyStickyFooter\";\n\ninterface RunningHoursData {\n  id: string;\n  component: string;\n  componentCode?: string;\n  componentCategory: string;\n  runningHours: string;\n  lastUpdated: string;\n  utilizationRate?: number | null;\n}\n\nconst RunningHours = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isUpdateDialogOpen, setIsUpdateDialogOpen] = useState(false);\n  const [selectedComponent, setSelectedComponent] = useState<RunningHoursData | null>(null);\n  \n  // Modify mode integration  \n  const { isModifyMode, targetId, fieldChanges } = useModifyMode();\n  const [updateMode, setUpdateMode] = useState<\"setTotal\" | \"addDelta\">(\"setTotal\");\n  const [meterReplaced, setMeterReplaced] = useState(false);\n  const [updateForm, setUpdateForm] = useState({\n    oldValue: \"\",\n    newValue: \"\",\n    dateUpdated: \"\",\n    comments: \"\",\n    oldMeterFinal: \"\",\n    newMeterStart: \"0\"\n  });\n  const [isBulkUpdateOpen, setIsBulkUpdateOpen] = useState(false);\n  const [bulkUpdateMode, setBulkUpdateMode] = useState<\"setTotal\" | \"addDelta\">(\"setTotal\");\n  const [bulkUpdateData, setBulkUpdateData] = useState<{[key: string]: {\n    value: string;\n    meterReplaced: boolean;\n    oldMeterFinal: string;\n    newMeterStart: string;\n  }}>({});\n  const [bulkUpdateErrors, setBulkUpdateErrors] = useState<{[key: string]: string}>({});\n  \n  const { toast } = useToast();\n  const vesselId = \"V001\"; // Default vessel ID\n  \n  // Utilization rate cache (15 minutes)\n  const [utilizationCache, setUtilizationCache] = useState<{\n    data: Record<string, number | null>;\n    timestamp: number;\n  } | null>(null);\n\n  // Mock data with Component Category derived from tree structure\n  // These component codes map to tree positions for category derivation\n  const mockData: RunningHoursData[] = [\n    { id: \"1\", component: \"Radar System\", componentCode: \"4.1.1\", componentCategory: getComponentCategory(\"4.1.1\"), runningHours: \"18,560 hrs\", lastUpdated: \"02-Jun-2025\", utilizationRate: null },\n    { id: \"2\", component: \"Diesel Generator 1\", componentCode: \"7.2.1\", componentCategory: getComponentCategory(\"7.2.1\"), runningHours: \"15,670 hrs\", lastUpdated: \"09-Jun-2025\", utilizationRate: null },\n    { id: \"3\", component: \"Diesel Generator 2\", componentCode: \"7.2.2\", componentCategory: getComponentCategory(\"7.2.2\"), runningHours: \"14,980 hrs\", lastUpdated: \"16-Jun-2025\", utilizationRate: null },\n    { id: \"4\", component: \"Main Cooling Seawater Pump\", componentCode: \"8.3.1\", componentCategory: getComponentCategory(\"8.3.1\"), runningHours: \"12,800 hrs\", lastUpdated: \"23-Jun-2025\", utilizationRate: null },\n    { id: \"5\", component: \"Main Engine\", componentCode: \"6.1.1\", componentCategory: getComponentCategory(\"6.1.1\"), runningHours: \"12,580 hrs\", lastUpdated: \"30-Jun-2025\", utilizationRate: null },\n    { id: \"6\", component: \"Propeller System\", componentCode: \"6.2.1\", componentCategory: getComponentCategory(\"6.2.1\"), runningHours: \"12,580 hrs\", lastUpdated: \"02-Jun-2025\", utilizationRate: null },\n    { id: \"7\", component: \"Main Lubrication Oil Pump\", componentCode: \"7.3.1\", componentCategory: getComponentCategory(\"7.3.1\"), runningHours: \"12,450 hrs\", lastUpdated: \"09-Jun-2025\", utilizationRate: null },\n    { id: \"8\", component: \"Steering Gear\", componentCode: \"4.3.1\", componentCategory: getComponentCategory(\"4.3.1\"), runningHours: \"11,240 hrs\", lastUpdated: \"16-Jun-2025\", utilizationRate: null },\n    { id: \"9\", component: \"Main Air Compressor\", componentCode: \"8.1.1\", componentCategory: getComponentCategory(\"8.1.1\"), runningHours: \"10,840 hrs\", lastUpdated: \"23-Jun-2025\", utilizationRate: null },\n    { id: \"10\", component: \"Bow Thruster\", componentCode: \"6.3.1\", componentCategory: getComponentCategory(\"6.3.1\"), runningHours: \"10,450 hrs\", lastUpdated: \"30-Jun-2025\", utilizationRate: null },\n  ];\n  \n  const [runningHoursData, setRunningHoursData] = useState<RunningHoursData[]>(mockData);\n\n  // Fetch utilization rates asynchronously (non-blocking)\n  useEffect(() => {\n    const fetchUtilizationRates = async () => {\n      // Check cache first\n      if (utilizationCache && (Date.now() - utilizationCache.timestamp < 15 * 60 * 1000)) {\n        // Apply cached rates to data\n        setRunningHoursData(prev => prev.map(item => ({\n          ...item,\n          utilizationRate: utilizationCache.data[item.id] || null\n        })));\n        return;\n      }\n      \n      try {\n        // Simulate async calculation with timeout\n        await new Promise(resolve => setTimeout(resolve, 500));\n        \n        // Mock utilization rates calculation\n        const rates: Record<string, number> = {};\n        runningHoursData.forEach(item => {\n          // Mock calculation: random rate between 0-24 hrs/day\n          rates[item.id] = Math.round((Math.random() * 24) * 10) / 10;\n        });\n        \n        // Update cache\n        setUtilizationCache({\n          data: rates,\n          timestamp: Date.now()\n        });\n        \n        // Apply rates to data\n        setRunningHoursData(prev => prev.map(item => ({\n          ...item,\n          utilizationRate: rates[item.id] || null\n        })));\n      } catch (error) {\n        // Silently fail - utilization rates remain null\n        console.error('Failed to fetch utilization rates:', error);\n      }\n    };\n    \n    fetchUtilizationRates();\n  }, []); // Run once on mount\n\n  // Mutation for single update\n  const updateRunningHours = useMutation({\n    mutationFn: async (data: any) => {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 500));\n      return { success: true };\n    },\n    onSuccess: (_, variables) => {\n      // Update local data\n      setRunningHoursData(prev => prev.map(item => \n        item.id === variables.componentId \n          ? { ...item, runningHours: `${variables.audit.cumulativeRH.toLocaleString()} hrs`, lastUpdated: variables.dateUpdatedLocal }\n          : item\n      ));\n      // Bust cache\n      setUtilizationCache(null);\n      toast({\n        title: \"Success\",\n        description: \"Running hours updated successfully\",\n      });\n      setIsUpdateDialogOpen(false);\n      handleCancelUpdate();\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Error\",\n        description: error.message || \"Failed to update running hours\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Mutation for bulk update\n  const bulkUpdateRunningHours = useMutation({\n    mutationFn: async (data: any) => {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 500));\n      return { success: true };\n    },\n    onSuccess: (_, variables) => {\n      // Update local data for all updated components\n      if (variables.updates) {\n        setRunningHoursData(prev => {\n          const updatedData = [...prev];\n          variables.updates.forEach((update: any) => {\n            const index = updatedData.findIndex(item => item.id === update.componentId);\n            if (index !== -1) {\n              updatedData[index] = {\n                ...updatedData[index],\n                runningHours: `${update.cumulativeRH.toLocaleString()} hrs`,\n                lastUpdated: update.dateUpdatedLocal\n              };\n            }\n          });\n          return updatedData;\n        });\n      }\n      // Bust cache\n      setUtilizationCache(null);\n      toast({\n        title: \"Success\",\n        description: \"Bulk update completed successfully\",\n      });\n      setIsBulkUpdateOpen(false);\n      setBulkUpdateData({});\n      setBulkUpdateErrors({});\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Error\",\n        description: error.message || \"Failed to perform bulk update\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const clearFilters = () => {\n    setSearchTerm(\"\");\n  };\n\n  // Export to CSV function\n  const exportToCSV = () => {\n    // Filter data based on current filters\n    const filteredData = runningHoursData.filter(item => {\n      if (searchTerm && !item.component.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return false;\n      }\n      return true;\n    });\n\n    // Prepare CSV headers\n    const headers = [\n      \"Vessel\",\n      \"Component\",\n      \"Component Code\",\n      \"Component Category\",\n      \"Running Hours (cumulative)\",\n      \"Last Updated (local)\",\n      \"Utilization Rate (hrs/day)\",\n      \"Notes\"\n    ];\n\n    // Prepare CSV rows\n    const rows = filteredData.map(item => [\n      vesselId,\n      item.component,\n      item.componentCode || \"\",\n      item.componentCategory,\n      item.runningHours.replace(\" hrs\", \"\"),\n      item.lastUpdated,\n      item.utilizationRate !== null && item.utilizationRate !== undefined ? item.utilizationRate.toString() : \"\",\n      \"\" // Notes field (empty for now)\n    ]);\n\n    // Convert to CSV format\n    const csvContent = [\n      headers.join(\",\"),\n      ...rows.map(row => row.map(cell => `\"${cell}\"`).join(\",\"))\n    ].join(\"\\n\");\n\n    // Create blob and download\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\n    const link = document.createElement(\"a\");\n    const now = new Date();\n    const filename = `running-hours_${now.getFullYear()}${String(now.getMonth() + 1).padStart(2, '0')}${String(now.getDate()).padStart(2, '0')}_${String(now.getHours()).padStart(2, '0')}${String(now.getMinutes()).padStart(2, '0')}.csv`;\n    \n    link.href = URL.createObjectURL(blob);\n    link.download = filename;\n    link.click();\n    \n    toast({\n      title: \"Export Complete\",\n      description: `Exported ${filteredData.length} records to ${filename}`,\n    });\n  };\n\n  const openUpdateDialog = (component: RunningHoursData) => {\n    setSelectedComponent(component);\n    setUpdateForm({\n      oldValue: component.runningHours.replace(\" hrs\", \"\").replace(/,/g, \"\"),\n      newValue: \"\",\n      dateUpdated: \"\",\n      comments: \"\",\n      oldMeterFinal: \"\",\n      newMeterStart: \"0\"\n    });\n    setUpdateMode(\"setTotal\");\n    setMeterReplaced(false);\n    setIsUpdateDialogOpen(true);\n  };\n\n  const handleUpdateFormChange = (field: string, value: string) => {\n    setUpdateForm(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleSaveUpdate = () => {\n    if (!selectedComponent) return;\n    \n    // Validate date not in future\n    const selectedDate = new Date(updateForm.dateUpdated);\n    const today = new Date();\n    today.setHours(23, 59, 59, 999);\n    \n    if (selectedDate > today) {\n      toast({\n        title: \"Error\",\n        description: \"Date cannot be in the future\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    \n    // Calculate new total\n    const previousValue = parseFloat(updateForm.oldValue);\n    const inputValue = parseFloat(updateForm.newValue);\n    let newTotal: number;\n    \n    if (updateMode === \"addDelta\") {\n      newTotal = previousValue + inputValue;\n    } else {\n      newTotal = inputValue;\n    }\n    \n    // Validation: new hours must be >= previous unless meter replaced\n    if (!meterReplaced && newTotal < previousValue) {\n      toast({\n        title: \"Validation Error\",\n        description: \"New hours must be ≥ previous hours. Use 'Meter replaced?' if the counter was reset.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    \n    // Format date in vessel local time\n    const dateLocal = selectedDate.toLocaleDateString('en-GB', {\n      day: '2-digit',\n      month: 'short',\n      year: 'numeric'\n    }) + ' ' + selectedDate.toLocaleTimeString('en-GB', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: false\n    });\n    \n    // Prepare audit data\n    const auditData = {\n      vesselId: vesselId,\n      componentId: selectedComponent.id,\n      previousRH: previousValue,\n      newRH: newTotal,\n      cumulativeRH: meterReplaced ? \n        previousValue + (inputValue - parseFloat(updateForm.newMeterStart || \"0\")) : \n        newTotal,\n      dateUpdatedLocal: dateLocal,\n      dateUpdatedTZ: \"Asia/Kolkata\", // Default timezone\n      enteredAtUTC: new Date(),\n      userId: \"current-user\", // Placeholder\n      source: \"single\" as const,\n      notes: updateForm.comments,\n      meterReplaced: meterReplaced,\n      oldMeterFinal: meterReplaced ? parseFloat(updateForm.oldMeterFinal) : null,\n      newMeterStart: meterReplaced ? parseFloat(updateForm.newMeterStart) : null,\n      version: 1\n    };\n    \n    updateRunningHours.mutate({\n      componentId: selectedComponent.id,\n      audit: auditData,\n      cumulativeRH: auditData.cumulativeRH,\n      dateUpdatedLocal: dateLocal\n    });\n  };\n\n  const handleCancelUpdate = () => {\n    setIsUpdateDialogOpen(false);\n    setSelectedComponent(null);\n    setUpdateForm({\n      oldValue: \"\",\n      newValue: \"\",\n      dateUpdated: \"\",\n      comments: \"\",\n      oldMeterFinal: \"\",\n      newMeterStart: \"0\"\n    });\n    setUpdateMode(\"setTotal\");\n    setMeterReplaced(false);\n  };\n\n  const openBulkUpdate = () => {\n    setBulkUpdateData({});\n    setBulkUpdateErrors({});\n    setIsBulkUpdateOpen(true);\n  };\n\n  const handleBulkUpdateChange = (componentId: string, field: string, value: any) => {\n    setBulkUpdateData(prev => ({\n      ...prev,\n      [componentId]: {\n        ...prev[componentId],\n        [field]: value\n      }\n    }));\n    // Clear error when user starts typing\n    if (bulkUpdateErrors[componentId] && field === 'value') {\n      setBulkUpdateErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[componentId];\n        return newErrors;\n      });\n    }\n  };\n\n  const handleBulkSave = () => {\n    const errors: {[key: string]: string} = {};\n    const updates = [];\n    const today = new Date();\n    today.setHours(23, 59, 59, 999);\n    \n    // Process each component with updates\n    for (const component of runningHoursData) {\n      const updateData = bulkUpdateData[component.id];\n      if (!updateData || !updateData.value || updateData.value.trim() === \"\") continue;\n      \n      // Validate numeric input\n      const inputValue = parseFloat(updateData.value.replace(/,/g, ''));\n      if (isNaN(inputValue)) {\n        errors[component.id] = \"Please enter a valid number\";\n        continue;\n      }\n      \n      const previousValue = parseFloat(component.runningHours.replace(\" hrs\", \"\").replace(/,/g, \"\"));\n      let newTotal: number;\n      \n      if (bulkUpdateMode === \"addDelta\") {\n        newTotal = previousValue + inputValue;\n      } else {\n        newTotal = inputValue;\n      }\n      \n      // Validation: new hours must be >= previous unless meter replaced\n      if (!updateData.meterReplaced && newTotal < previousValue) {\n        errors[component.id] = \"New hours must be ≥ previous hours. Check 'Meter replaced?' if the counter was reset.\";\n        continue;\n      }\n      \n      // Format date in vessel local time\n      const dateLocal = today.toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: 'short',\n        year: 'numeric'\n      }) + ' ' + today.toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n      });\n      \n      // Prepare audit data\n      const auditData = {\n        vesselId: vesselId,\n        componentId: component.id,\n        previousRH: previousValue,\n        newRH: newTotal,\n        cumulativeRH: updateData.meterReplaced ? \n          previousValue + (inputValue - parseFloat(updateData.newMeterStart || \"0\")) : \n          newTotal,\n        dateUpdatedLocal: dateLocal,\n        dateUpdatedTZ: \"Asia/Kolkata\",\n        enteredAtUTC: new Date(),\n        userId: \"current-user\",\n        source: \"bulk\" as const,\n        notes: \"\",\n        meterReplaced: updateData.meterReplaced || false,\n        oldMeterFinal: updateData.meterReplaced ? parseFloat(updateData.oldMeterFinal) : null,\n        newMeterStart: updateData.meterReplaced ? parseFloat(updateData.newMeterStart) : null,\n        version: 1\n      };\n      \n      updates.push({\n        componentId: component.id,\n        audit: auditData,\n        cumulativeRH: auditData.cumulativeRH,\n        dateUpdatedLocal: dateLocal\n      });\n    }\n    \n    if (Object.keys(errors).length > 0) {\n      setBulkUpdateErrors(errors);\n      return;\n    }\n    \n    if (updates.length === 0) {\n      toast({\n        title: \"No changes\",\n        description: \"No values were entered for update\",\n      });\n      return;\n    }\n    \n    bulkUpdateRunningHours.mutate({ updates });\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <h1 className=\"text-2xl font-semibold text-gray-900\">Running Hours</h1>\n        <Button \n          className=\"bg-green-600 hover:bg-green-700 text-white ml-[228px] mr-[228px]\"\n          onClick={openBulkUpdate}\n        >\n          <span className=\"mr-2\">+</span>\n          Bulk Update RH\n        </Button>\n      </div>\n\n      {/* Search and Export Row */}\n      <div className=\"flex items-center gap-4\">\n        <div className=\"relative flex-1 max-w-md\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\n          <Input\n            placeholder=\"Search Component\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"pl-10\"\n          />\n        </div>\n\n        <Button variant=\"outline\" className=\"flex items-center gap-2\" onClick={exportToCSV}>\n          <FileSpreadsheet className=\"h-4 w-4\" />\n          Export\n        </Button>\n\n        <Button variant=\"outline\" onClick={clearFilters} className=\"flex items-center gap-2\">\n          Clear\n        </Button>\n      </div>\n\n      {/* Table */}\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        {/* Table Header */}\n        <div className=\"bg-[#52baf3] text-white px-4 py-3\">\n          <div className=\"grid grid-cols-7 gap-4 text-sm font-medium\">\n            <div>Component</div>\n            <div>Component Category</div>\n            <div>Running Hours</div>\n            <div>last Updated</div>\n            <div>Utilization Rate</div>\n            <div className=\"col-span-2\">Update RH</div>\n          </div>\n        </div>\n\n        {/* Table Body */}\n        <div className=\"divide-y divide-gray-200\">\n          {(() => {\n            const filteredData = runningHoursData.filter(item => \n              !searchTerm || item.component.toLowerCase().includes(searchTerm.toLowerCase())\n            );\n            \n            if (filteredData.length === 0 && searchTerm) {\n              return (\n                <div className=\"px-4 py-8 text-center text-gray-500\">\n                  No results found. <button onClick={clearFilters} className=\"text-blue-600 underline\">Reset</button>\n                </div>\n              );\n            }\n            \n            return filteredData.map((item) => (\n              <div key={item.id} className=\"px-4 py-3 hover:bg-gray-50\">\n              <div className=\"grid grid-cols-7 gap-4 text-sm items-center\">\n                <div className=\"text-gray-900\">{item.component}</div>\n                <div className=\"text-gray-700\">{item.componentCategory}</div>\n                <div className=\"text-gray-900 font-medium\">{item.runningHours}</div>\n                <div className=\"text-gray-700\">{item.lastUpdated}</div>\n                <div className=\"text-gray-700\" title=\"Computed from last 30 days of RH entries\">\n                  {item.utilizationRate !== null ? `${item.utilizationRate} hrs/day` : \"—\"}\n                </div>\n                <div className=\"col-span-2\">\n                  <Button \n                    variant=\"outline\" \n                    size=\"sm\" \n                    className=\"h-8 w-8 p-0\"\n                    onClick={() => openUpdateDialog(item)}\n                  >\n                    <span className=\"text-gray-600\">⚙</span>\n                  </Button>\n                </div>\n              </div>\n            </div>\n            ));\n          })()}\n        </div>\n      </div>\n\n      {/* Pagination */}\n      <div className=\"flex justify-end text-sm text-gray-500\">\n        Page 6 of 6\n      </div>\n\n      {/* Update Running Hours Dialog */}\n      <Dialog open={isUpdateDialogOpen} onOpenChange={setIsUpdateDialogOpen}>\n        <DialogContent className=\"max-w-md\">\n          <DialogHeader>\n            <DialogTitle className=\"text-[#52baf3] border-b border-[#52baf3] pb-2\">\n              Update Running Hours - {selectedComponent?.component}\n            </DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4 py-4\">\n            {/* Mode Toggle */}\n            <div>\n              <Label className=\"text-sm text-gray-600\">Mode</Label>\n              <RadioGroup value={updateMode} onValueChange={(value: any) => setUpdateMode(value)} className=\"mt-2\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"flex items-center space-x-2\">\n                    <RadioGroupItem value=\"setTotal\" id=\"setTotal\" />\n                    <Label htmlFor=\"setTotal\">Set Total</Label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <RadioGroupItem value=\"addDelta\" id=\"addDelta\" />\n                    <Label htmlFor=\"addDelta\">Add Delta</Label>\n                  </div>\n                </div>\n              </RadioGroup>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <Label className=\"text-sm text-gray-600\">Old Value</Label>\n                <Input \n                  value={updateForm.oldValue}\n                  readOnly\n                  className=\"mt-1 bg-gray-100\"\n                />\n              </div>\n              <div>\n                <Label className=\"text-sm text-gray-600\">\n                  {updateMode === \"addDelta\" ? \"Delta Value\" : \"New Value\"}\n                </Label>\n                <Input \n                  type=\"number\"\n                  value={updateForm.newValue}\n                  onChange={(e) => handleUpdateFormChange('newValue', e.target.value)}\n                  className=\"mt-1\"\n                  placeholder={updateMode === \"addDelta\" ? \"100\" : \"20000\"}\n                />\n              </div>\n            </div>\n            \n            <div>\n              <Label className=\"text-sm text-gray-600\">Date Updated</Label>\n              <Input \n                type=\"date\"\n                value={updateForm.dateUpdated}\n                onChange={(e) => handleUpdateFormChange('dateUpdated', e.target.value)}\n                className=\"mt-1\"\n                max={new Date().toISOString().split('T')[0]}\n              />\n            </div>\n\n            {/* Meter Replaced Checkbox */}\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox \n                id=\"meterReplaced\"\n                checked={meterReplaced}\n                onCheckedChange={(checked) => setMeterReplaced(checked as boolean)}\n              />\n              <Label htmlFor=\"meterReplaced\" className=\"text-sm\">Meter replaced?</Label>\n            </div>\n\n            {/* Meter Replacement Fields */}\n            {meterReplaced && (\n              <div className=\"grid grid-cols-2 gap-4 p-3 bg-gray-50 rounded\">\n                <div>\n                  <Label className=\"text-sm text-gray-600\">Old Meter Final *</Label>\n                  <Input \n                    type=\"number\"\n                    value={updateForm.oldMeterFinal}\n                    onChange={(e) => handleUpdateFormChange('oldMeterFinal', e.target.value)}\n                    className=\"mt-1\"\n                    placeholder=\"Final reading\"\n                    required\n                  />\n                </div>\n                <div>\n                  <Label className=\"text-sm text-gray-600\">New Meter Start *</Label>\n                  <Input \n                    type=\"number\"\n                    value={updateForm.newMeterStart}\n                    onChange={(e) => handleUpdateFormChange('newMeterStart', e.target.value)}\n                    className=\"mt-1\"\n                    placeholder=\"0\"\n                  />\n                </div>\n              </div>\n            )}\n\n            <div>\n              <Label className=\"text-sm text-gray-600\">Comments</Label>\n              <Textarea \n                value={updateForm.comments}\n                onChange={(e) => handleUpdateFormChange('comments', e.target.value)}\n                className=\"mt-1 resize-none\"\n                rows={3}\n                placeholder={meterReplaced ? \"Reason for meter replacement\" : \"Comments\"}\n              />\n            </div>\n          </div>\n          \n          <div className=\"flex justify-end gap-2 pt-4\">\n            <Button variant=\"outline\" onClick={handleCancelUpdate}>\n              Cancel\n            </Button>\n            <Button \n              className=\"bg-[#52baf3] hover:bg-[#4aa3d9] text-white\" \n              onClick={handleSaveUpdate}\n            >\n              Save\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* Bulk Update Dialog */}\n      <Dialog open={isBulkUpdateOpen} onOpenChange={setIsBulkUpdateOpen}>\n        <DialogContent className=\"w-[90vw] max-w-none h-[90vh] flex flex-col\">\n          <DialogHeader className=\"pb-4 space-y-3\">\n            <DialogTitle className=\"text-[#52baf3] text-xl\">\n              Bulk Update Running Hours\n            </DialogTitle>\n            {/* Mode Toggle for Bulk Update */}\n            <div className=\"flex items-center space-x-4\">\n              <Label className=\"text-sm text-gray-600\">Mode:</Label>\n              <RadioGroup value={bulkUpdateMode} onValueChange={(value: any) => setBulkUpdateMode(value)} className=\"flex flex-row space-x-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"setTotal\" id=\"bulkSetTotal\" />\n                  <Label htmlFor=\"bulkSetTotal\">Set Total</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"addDelta\" id=\"bulkAddDelta\" />\n                  <Label htmlFor=\"bulkAddDelta\">Add Delta</Label>\n                </div>\n              </RadioGroup>\n            </div>\n          </DialogHeader>\n          \n          <div className=\"flex-1 overflow-auto\">\n            <div className=\"bg-white rounded-lg border border-gray-200\">\n              {/* Table Header */}\n              <div className=\"bg-[#52baf3] text-white px-4 py-3\">\n                <div className=\"grid grid-cols-5 gap-4 text-sm font-medium\">\n                  <div>Component Name</div>\n                  <div>Previous Running Hours</div>\n                  <div>{bulkUpdateMode === \"addDelta\" ? \"Delta Hours\" : \"Present Running Hours\"}</div>\n                  <div>Meter Replaced?</div>\n                  <div>Status</div>\n                </div>\n              </div>\n\n              {/* Table Body */}\n              <div className=\"divide-y divide-gray-200\">\n                {runningHoursData.map((item) => {\n                  const updateData = bulkUpdateData[item.id] || { value: \"\", meterReplaced: false };\n                  return (\n                    <div key={item.id} className=\"px-4 py-3\">\n                      <div className=\"grid grid-cols-5 gap-4 text-sm items-center\">\n                        <div className=\"text-gray-900 font-medium\">{item.component}</div>\n                        <div className=\"text-gray-700\">{item.runningHours}</div>\n                        <div className=\"space-y-1\">\n                          <Input \n                            type=\"number\"\n                            value={updateData.value || \"\"}\n                            onChange={(e) => handleBulkUpdateChange(item.id, 'value', e.target.value)}\n                            placeholder={bulkUpdateMode === \"addDelta\" ? \"Enter delta\" : \"Enter new value\"}\n                            className=\"w-full\"\n                          />\n                          {bulkUpdateErrors[item.id] && (\n                            <div className=\"text-red-500 text-xs\">\n                              {bulkUpdateErrors[item.id]}\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"flex items-center justify-center\">\n                          <Checkbox \n                            checked={updateData.meterReplaced || false}\n                            onCheckedChange={(checked) => handleBulkUpdateChange(item.id, 'meterReplaced', checked)}\n                          />\n                        </div>\n                        <div className=\"text-gray-500\">\n                          {updateData.value && updateData.value.trim() !== \"\" ? \"Ready to update\" : \"No change\"}\n                        </div>\n                      </div>\n                      {/* Meter replacement fields if checkbox is checked */}\n                      {updateData.meterReplaced && (\n                        <div className=\"grid grid-cols-2 gap-4 mt-2 pl-10 pr-4\">\n                          <div>\n                            <Label className=\"text-xs text-gray-600\">Old Meter Final</Label>\n                            <Input \n                              type=\"number\"\n                              value={updateData.oldMeterFinal || \"\"}\n                              onChange={(e) => handleBulkUpdateChange(item.id, 'oldMeterFinal', e.target.value)}\n                              placeholder=\"Final reading\"\n                              className=\"h-8 text-sm\"\n                            />\n                          </div>\n                          <div>\n                            <Label className=\"text-xs text-gray-600\">New Meter Start</Label>\n                            <Input \n                              type=\"number\"\n                              value={updateData.newMeterStart || \"\"}\n                              onChange={(e) => handleBulkUpdateChange(item.id, 'newMeterStart', e.target.value)}\n                              placeholder=\"0\"\n                              className=\"h-8 text-sm\"\n                            />\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"flex justify-end gap-2 pt-4 border-t\">\n            <Button variant=\"outline\" onClick={() => setIsBulkUpdateOpen(false)}>\n              Cancel\n            </Button>\n            <Button \n              className=\"bg-[#52baf3] hover:bg-[#4aa3d9] text-white\" \n              onClick={handleBulkSave}\n            >\n              Save\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* Modify Mode Sticky Footer */}\n      {isModifyMode && (\n        <ModifyStickyFooter\n          isVisible={true}\n          hasChanges={Object.keys(fieldChanges).length > 0}\n          changedFieldsCount={Object.keys(fieldChanges).length}\n          onCancel={() => { window.location.href = '/pms/modify'; }}\n          onSubmitChangeRequest={() => {\n            // Submit change request logic will be implemented\n            console.log('Submitting changes:', fieldChanges);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default RunningHours;"]}