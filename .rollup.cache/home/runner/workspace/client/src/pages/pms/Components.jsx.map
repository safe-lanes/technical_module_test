{"version":3,"file":"Components.jsx","sourceRoot":"","sources":["Components.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Search,\n  ChevronRight,\n  ChevronDown,\n  Edit2,\n  FileText,\n  ArrowLeft,\n  Plus,\n  Check,\n  Package,\n  X,\n} from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport ComponentRegisterForm from '@/components/ComponentRegisterForm';\nimport ComponentRegisterFormCR from '@/components/ComponentRegisterFormCR';\nimport WorkOrderForm from '@/components/WorkOrderForm';\nimport { ReviewChangesDrawer } from '@/components/ReviewChangesDrawer';\nimport { useChangeRequest } from '@/contexts/ChangeRequestContext';\nimport { useChangeMode } from '@/contexts/ChangeModeContext';\nimport { useLocation } from 'wouter';\nimport { getComponentCategory } from '@/utils/componentUtils';\nimport { useToast } from '@/hooks/use-toast';\nimport { useModifyMode } from '@/hooks/useModifyMode';\nimport { ModifyFieldWrapper } from '@/components/modify/ModifyFieldWrapper';\nimport { ModifyStickyFooter } from '@/components/modify/ModifyStickyFooter';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from '@/components/ui/collapsible';\n\ninterface ComponentNode {\n  id: string;\n  code: string;\n  name: string;\n  children?: ComponentNode[];\n  isExpanded?: boolean;\n}\n\nconst dummyComponents: ComponentNode[] = [\n  {\n    id: '1',\n    code: '1',\n    name: 'Ship General',\n    children: [\n      {\n        id: '1.1',\n        code: '1.1',\n        name: 'Fresh Water System',\n        children: [\n          {\n            id: '1.1.1',\n            code: '1.1.1',\n            name: 'Hydrophore Unit',\n            children: [\n              {\n                id: '1.1.1.1',\n                code: '1.1.1.1',\n                name: 'Pressure Vessel',\n              },\n              {\n                id: '1.1.1.2',\n                code: '1.1.1.2',\n                name: 'Feed Pump',\n              },\n              {\n                id: '1.1.1.3',\n                code: '1.1.1.3',\n                name: 'Pressure Switch',\n              },\n            ],\n          },\n          {\n            id: '1.1.2',\n            code: '1.1.2',\n            name: 'Potable Water Maker',\n            children: [],\n          },\n          {\n            id: '1.1.3',\n            code: '1.1.3',\n            name: 'UV Sterilizer',\n            children: [],\n          },\n        ],\n      },\n      {\n        id: '1.2',\n        code: '1.2',\n        name: 'Sewage Treatment System',\n        children: [],\n      },\n      {\n        id: '1.3',\n        code: '1.3',\n        name: 'HVAC – Accommodation',\n        children: [],\n      },\n    ],\n  },\n  {\n    id: '2',\n    code: '2',\n    name: 'Hull',\n    children: [\n      {\n        id: '2.1',\n        code: '2.1',\n        name: 'Ballast Tanks',\n        children: [],\n      },\n      {\n        id: '2.2',\n        code: '2.2',\n        name: 'Cathodic Protection',\n        children: [],\n      },\n      {\n        id: '2.3',\n        code: '2.3',\n        name: 'Hull Openings – Hatches',\n        children: [],\n      },\n    ],\n  },\n  {\n    id: '3',\n    code: '3',\n    name: 'Equipment for Cargo',\n    children: [\n      {\n        id: '3.1',\n        code: '3.1',\n        name: 'Cargo Cranes',\n        children: [],\n      },\n      {\n        id: '3.2',\n        code: '3.2',\n        name: 'Hatch Cover Hydraulics',\n        children: [],\n      },\n      {\n        id: '3.3',\n        code: '3.3',\n        name: 'Cargo Hold Ventilation',\n        children: [],\n      },\n    ],\n  },\n  {\n    id: '4',\n    code: '4',\n    name: \"Ship's Equipment\",\n    children: [\n      {\n        id: '4.1',\n        code: '4.1',\n        name: 'Mooring System',\n        children: [],\n      },\n      {\n        id: '4.2',\n        code: '4.2',\n        name: 'Windlass',\n        children: [],\n      },\n      {\n        id: '4.3',\n        code: '4.3',\n        name: 'Steering Gear',\n        children: [],\n      },\n    ],\n  },\n  {\n    id: '5',\n    code: '5',\n    name: 'Equipment for Crew & Passengers',\n    children: [\n      {\n        id: '5.1',\n        code: '5.1',\n        name: 'Lifeboat System',\n        children: [],\n      },\n      {\n        id: '5.2',\n        code: '5.2',\n        name: 'Fire Main System',\n        children: [],\n      },\n      {\n        id: '5.3',\n        code: '5.3',\n        name: 'Emergency Lighting',\n        children: [],\n      },\n    ],\n  },\n  {\n    id: '6',\n    code: '6',\n    name: 'Machinery Main Components',\n    isExpanded: true,\n    children: [\n      {\n        id: '6.1',\n        code: '6.1',\n        name: 'Main Engine',\n        isExpanded: true,\n        children: [\n          {\n            id: '6.1.1',\n            code: '6.1.1',\n            name: 'Cylinder Head',\n            isExpanded: true,\n            children: [\n              {\n                id: '6.1.1.1',\n                code: '6.1.1.1',\n                name: 'Valve Seats',\n              },\n              {\n                id: '6.1.1.2',\n                code: '6.1.1.2',\n                name: 'Injector Sleeve',\n              },\n              {\n                id: '6.1.1.3',\n                code: '6.1.1.3',\n                name: 'Rocker Arm',\n              },\n            ],\n          },\n          {\n            id: '6.1.2',\n            code: '6.1.2',\n            name: 'Main Bearings',\n            children: [],\n          },\n          {\n            id: '6.1.3',\n            code: '6.1.3',\n            name: 'Cylinder Liners',\n            children: [],\n          },\n        ],\n      },\n      {\n        id: '6.2',\n        code: '6.2',\n        name: 'Diesel Generators',\n        children: [\n          {\n            id: '6.2.1',\n            code: '6.2.1',\n            name: 'DG #1',\n            children: [],\n          },\n          {\n            id: '6.2.2',\n            code: '6.2.2',\n            name: 'DG #2',\n            children: [],\n          },\n          {\n            id: '6.2.3',\n            code: '6.2.3',\n            name: 'DG #3',\n            children: [],\n          },\n        ],\n      },\n      {\n        id: '6.3',\n        code: '6.3',\n        name: 'Auxiliary Boiler',\n        children: [],\n      },\n    ],\n  },\n  {\n    id: '7',\n    code: '7',\n    name: 'Systems for Machinery Main Components',\n    children: [\n      {\n        id: '7.1',\n        code: '7.1',\n        name: 'Fuel Oil System',\n        children: [],\n      },\n    ],\n  },\n  {\n    id: '8',\n    code: '8',\n    name: 'Ship Common Systems',\n    children: [],\n  },\n];\n\n// Function to get mock data for a component based on its code\nconst getComponentMockData = (code: string) => {\n  // Generate realistic mock data based on component code and type\n  const getComponentDetails = (code: string, name?: string) => {\n    // Parse component hierarchy from code\n    const levels = code.split('.');\n    const topLevel = levels[0];\n\n    // Department mapping based on top-level code\n    const departmentMap: { [key: string]: string } = {\n      '1': 'Hull & Deck',\n      '2': 'Deck Machinery',\n      '3': 'Accommodation',\n      '4': \"Ship's Equipment\",\n      '5': 'Safety Equipment',\n      '6': 'Engine Department',\n      '7': 'Engine Systems',\n      '8': 'Common Systems',\n    };\n\n    // Location mapping\n    const locationMap: { [key: string]: string } = {\n      '1': 'Main Deck',\n      '2': 'Fore Deck',\n      '3': 'Accommodation Block',\n      '4': 'Main Deck',\n      '5': 'Bridge/Safety Station',\n      '6': 'Engine Room',\n      '7': 'Engine Room',\n      '8': 'Various',\n    };\n\n    // Criticality based on component level and type\n    const isCritical =\n      topLevel === '6' ||\n      topLevel === '7' ||\n      (topLevel === '1' && levels.length > 2);\n\n    // Generate appropriate maker based on component type\n    const getMaker = () => {\n      if (topLevel === '6')\n        return ['MAN B&W', 'Wärtsilä', 'Caterpillar', 'Yanmar'][\n          Math.floor(Math.random() * 4)\n        ];\n      if (topLevel === '1')\n        return ['Hyundai', 'Samsung', 'Daewoo'][Math.floor(Math.random() * 3)];\n      if (topLevel === '2')\n        return ['MacGregor', 'TTS Marine', 'Rolls-Royce'][\n          Math.floor(Math.random() * 3)\n        ];\n      if (topLevel === '3')\n        return ['Marine Air Systems', 'Novenco', 'Heinen & Hopman'][\n          Math.floor(Math.random() * 3)\n        ];\n      if (topLevel === '4')\n        return ['Kongsberg', 'Furuno', 'JRC'][Math.floor(Math.random() * 3)];\n      if (topLevel === '5')\n        return ['Viking', 'Survitec', 'LALIZAS'][Math.floor(Math.random() * 3)];\n      return 'OEM Manufacturer';\n    };\n\n    // Generate model based on code\n    const model = `${getMaker().split(' ')[0].toUpperCase()}-${code.replace(/\\./g, '')}-${levels.length > 2 ? 'ADV' : 'STD'}`;\n\n    // Generate serial number\n    const serialNo = `SN-${new Date().getFullYear()}-${code.replace(/\\./g, '')}-${Math.floor(\n      Math.random() * 9999\n    )\n      .toString()\n      .padStart(4, '0')}`;\n\n    // Rating based on component type\n    const getRating = () => {\n      if (topLevel === '6' && levels.length === 3) return '7,200 kW';\n      if (topLevel === '6' && levels.length === 4) return 'High Performance';\n      if (topLevel === '2') return 'SWL 25 MT';\n      if (topLevel === '7') return 'Medium Pressure';\n      return 'Standard';\n    };\n\n    return {\n      maker: getMaker(),\n      model,\n      serialNo,\n      department: departmentMap[topLevel] || 'General',\n      critical: isCritical ? 'Yes' : 'No',\n      classItem: isCritical ? 'Yes' : 'No',\n      location: locationMap[topLevel] || 'Ship',\n      commissionedDate: '2020-01-15',\n      installationDate: '2019-12-20',\n      rating: getRating(),\n      conditionBased: levels.length > 2 ? 'Yes' : 'No',\n      noOfUnits: levels.length === 4 ? '6' : levels.length === 3 ? '2' : '1',\n      eqptSystemDept: departmentMap[topLevel] || 'General',\n      parentComponent:\n        levels.length > 1\n          ? `Level ${levels.slice(0, -1).join('.')}`\n          : 'Ship Structure',\n      dimensionsSize:\n        levels.length === 4\n          ? '0.5m x 0.3m'\n          : levels.length === 3\n            ? '2m x 1m'\n            : '5m x 3m',\n      notes: `Component ${code} - ${isCritical ? 'Critical for vessel operations' : 'Standard equipment'}`,\n    };\n  };\n\n  // Special cases for specific well-known components\n  const specialCases: { [key: string]: any } = {\n    '6.1.1': {\n      maker: 'MAN Energy Solutions',\n      model: '6S60MC-C',\n      serialNo: 'ME-2020-001',\n      department: 'Engine Department',\n      critical: 'Yes',\n      classItem: 'Yes',\n      location: 'Engine Room',\n      commissionedDate: '2020-02-01',\n      installationDate: '2020-01-15',\n      rating: '7,200 kW @ 105 RPM',\n      conditionBased: 'Yes',\n      noOfUnits: '1',\n      eqptSystemDept: 'Engine Department',\n      parentComponent: '6.1 Main Engine',\n      dimensionsSize: '15m x 3m x 4m',\n      notes: 'Main propulsion engine - 6 cylinder, 2-stroke diesel',\n    },\n    '1.1': {\n      maker: 'Hyundai Heavy Industries',\n      model: 'HHI-HULL-2020',\n      serialNo: 'HULL-001',\n      department: 'Hull & Deck',\n      critical: 'Yes',\n      classItem: 'Yes',\n      location: 'Ship Structure',\n      commissionedDate: '2020-01-01',\n      installationDate: '2019-06-01',\n      rating: 'Double Hull',\n      conditionBased: 'Yes',\n      noOfUnits: '1',\n      eqptSystemDept: 'Hull & Structure',\n      parentComponent: \"1. Ship's Structure\",\n      dimensionsSize: '180m x 32m x 18m',\n      notes: 'Main hull structure - double bottom design',\n    },\n    '2.1': {\n      maker: 'MacGregor',\n      model: 'MG-CRANE-45T',\n      serialNo: 'CR-2020-001',\n      department: 'Deck Machinery',\n      critical: 'Yes',\n      classItem: 'Yes',\n      location: 'Main Deck Port',\n      commissionedDate: '2020-01-15',\n      installationDate: '2019-12-01',\n      rating: 'SWL 45 MT',\n      conditionBased: 'Yes',\n      noOfUnits: '1',\n      eqptSystemDept: 'Deck Department',\n      parentComponent: '2. Deck Machinery',\n      dimensionsSize: '25m boom length',\n      notes: 'Main cargo crane - hydraulic operation',\n    },\n  };\n\n  // Return special case if exists, otherwise generate based on pattern\n  return specialCases[code] || getComponentDetails(code);\n};\n\nconst ComponentInformationSection: React.FC<{\n  isExpanded: boolean;\n  selectedComponent: ComponentNode | null;\n  isModifyMode?: boolean;\n  onDataChange?: (data: any) => void;\n  previewChanges?: any[];\n  isPreviewMode?: boolean;\n}> = ({\n  isExpanded,\n  selectedComponent,\n  isModifyMode = false,\n  onDataChange,\n  previewChanges = [],\n  isPreviewMode = false,\n}) => {\n  const { isChangeRequestMode } = useChangeRequest();\n  const { collectDiff } = useChangeMode();\n  const isChangeMode = isModifyMode;\n\n  // Helper function to check if a field has changes in preview mode\n  const hasPreviewChange = (fieldName: string) => {\n    if (!isPreviewMode || !previewChanges) return false;\n    return previewChanges.some(\n      change =>\n        change.field === fieldName ||\n        change.fieldName === fieldName ||\n        change.field === `componentInfo.${fieldName}` ||\n        change.fieldName === `componentInfo.${fieldName}`\n    );\n  };\n\n  // Helper function to get the new value from preview changes\n  const getPreviewValue = (fieldName: string) => {\n    if (!isPreviewMode || !previewChanges) return null;\n    const change = previewChanges.find(\n      change =>\n        change.field === fieldName ||\n        change.fieldName === fieldName ||\n        change.field === `componentInfo.${fieldName}` ||\n        change.fieldName === `componentInfo.${fieldName}`\n    );\n    return change ? change.newValue || change.currentValue : null;\n  };\n\n  // Derive Component Category from the component's tree position\n  const componentCategory = selectedComponent\n    ? getComponentCategory(selectedComponent.id)\n    : '';\n\n  // Component data - uses selected component code or defaults\n  const [componentData, setComponentData] = useState({\n    maker: '',\n    model: '',\n    serialNo: '',\n    department: '',\n    componentCategory: '',\n    componentCode: '',\n    critical: 'No',\n    classItem: 'No',\n    location: '',\n    commissionedDate: '',\n    installationDate: '',\n    rating: '',\n    conditionBased: 'No',\n    noOfUnits: '',\n    eqptSystemDept: '',\n    parentComponent: '',\n    dimensionsSize: '',\n    notes: '',\n  });\n\n  // Track original component data for modify mode\n  const [originalComponentData, setOriginalComponentData] = useState<\n    typeof componentData | null\n  >(null);\n\n  // Update component data when selected component changes\n  useEffect(() => {\n    if (selectedComponent) {\n      // Get mock data based on component code\n      const mockData = getComponentMockData(selectedComponent.code);\n      const newData = {\n        ...mockData,\n        componentCode: selectedComponent.code,\n        componentCategory: getComponentCategory(selectedComponent.id),\n      };\n      setComponentData(newData);\n\n      // Store original data for modify mode\n      if (isModifyMode || isChangeMode) {\n        setOriginalComponentData(newData);\n      }\n\n      // Reset changed fields when switching components\n      setChangedFields(new Set());\n    }\n  }, [selectedComponent, isModifyMode, isChangeMode]);\n\n  // Track which fields have been changed\n  const [changedFields, setChangedFields] = useState<Set<string>>(new Set());\n\n  const handleFieldChange = (fieldName: string, value: string) => {\n    if (!isChangeMode && !isModifyMode) return;\n\n    const originalValue =\n      componentData[fieldName as keyof typeof componentData];\n    setComponentData(prev => ({ ...prev, [fieldName]: value }));\n\n    // Component change tracking is handled through onDataChange callback\n\n    // Track the change\n    if (value !== originalValue) {\n      setChangedFields(prev => new Set(prev).add(fieldName));\n      if (isModifyMode && collectDiff) {\n        collectDiff(`componentInfo.${fieldName}`, originalValue, value);\n      }\n    } else {\n      setChangedFields(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(fieldName);\n        return newSet;\n      });\n    }\n\n    // Notify parent component of changes\n    if (onDataChange) {\n      onDataChange({ ...componentData, [fieldName]: value });\n    }\n  };\n\n  return (\n    <div className='space-y-4'>\n      {/* Always visible first 2 rows */}\n      <div className='grid grid-cols-4 gap-4'>\n        <div>\n          <label\n            className={`text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1`}\n          >\n            Maker\n          </label>\n          {isChangeMode ? (\n            <input\n              type='text'\n              value={componentData.maker}\n              onChange={e => handleFieldChange('maker', e.target.value)}\n              className={`text-sm w-full px-2 py-1 border rounded ${\n                changedFields.has('maker') || hasPreviewChange('maker')\n                  ? 'text-red-600 border-red-300'\n                  : 'text-[#52BAF3] border-[#52BAF3]'\n              }`}\n              data-field-value='maker'\n            />\n          ) : (\n            <div className='text-sm text-gray-900'>{componentData.maker}</div>\n          )}\n        </div>\n        <div>\n          <label\n            className={`text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1`}\n          >\n            Model\n          </label>\n          {isChangeMode ? (\n            <input\n              type='text'\n              value={componentData.model}\n              onChange={e => handleFieldChange('model', e.target.value)}\n              className={`text-sm w-full px-2 py-1 border rounded ${\n                changedFields.has('model') || hasPreviewChange('model')\n                  ? 'text-red-600 border-red-300'\n                  : 'text-[#52BAF3] border-[#52BAF3]'\n              }`}\n              data-field-value='model'\n            />\n          ) : (\n            <div className='text-sm text-gray-900'>{componentData.model}</div>\n          )}\n        </div>\n        <div>\n          <label\n            className={`text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1`}\n          >\n            Serial No\n          </label>\n          {isChangeMode ? (\n            <input\n              type='text'\n              value={componentData.serialNo}\n              onChange={e => handleFieldChange('serialNo', e.target.value)}\n              className={`text-sm w-full px-2 py-1 border rounded ${\n                changedFields.has('serialNo')\n                  ? 'text-red-600 border-red-300'\n                  : 'text-[#52BAF3] border-[#52BAF3]'\n              }`}\n              data-field-value='serialNo'\n            />\n          ) : (\n            <div className='text-sm text-gray-900'>\n              {componentData.serialNo}\n            </div>\n          )}\n        </div>\n        <div>\n          <label\n            className={`text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1`}\n          >\n            Department\n          </label>\n          {isChangeMode ? (\n            <input\n              type='text'\n              value={componentData.department}\n              onChange={e => handleFieldChange('department', e.target.value)}\n              className={`text-sm w-full px-2 py-1 border rounded ${\n                changedFields.has('department')\n                  ? 'text-red-600 border-red-300'\n                  : 'text-[#52BAF3] border-[#52BAF3]'\n              }`}\n              data-field-value='department'\n            />\n          ) : (\n            <div className='text-sm text-gray-900'>\n              {componentData.department}\n            </div>\n          )}\n        </div>\n      </div>\n      <div className='grid grid-cols-4 gap-4'>\n        <div>\n          <label\n            className={`text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1`}\n          >\n            Component Code\n          </label>\n          <div className='text-sm text-gray-900'>\n            {componentData.componentCode}\n          </div>\n        </div>\n        <div>\n          <label\n            className={`text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1`}\n          >\n            Component Category\n          </label>\n          <div className='text-sm text-gray-900'>\n            {componentData.componentCategory}\n          </div>\n        </div>\n        <div>\n          <label\n            className={`text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1`}\n          >\n            Critical\n          </label>\n          {isChangeMode || isPreviewMode ? (\n            <select\n              value={\n                isPreviewMode && hasPreviewChange('critical')\n                  ? getPreviewValue('critical')\n                  : componentData.critical\n              }\n              onChange={e => handleFieldChange('critical', e.target.value)}\n              disabled={isPreviewMode}\n              className={`text-sm w-full px-2 py-1 border rounded ${\n                changedFields.has('critical') || hasPreviewChange('critical')\n                  ? 'text-red-600 border-red-300 bg-red-50'\n                  : 'text-[#52BAF3] border-[#52BAF3]'\n              } ${isPreviewMode ? 'bg-gray-50 cursor-not-allowed' : ''}`}\n              data-field-value='critical'\n            >\n              <option value='Yes'>Yes</option>\n              <option value='No'>No</option>\n            </select>\n          ) : (\n            <div className='text-sm text-gray-900'>\n              <span\n                className={`px-2 py-1 rounded-full text-xs font-medium ${\n                  componentData.critical === 'Yes'\n                    ? 'bg-red-100 text-red-800'\n                    : 'bg-gray-100 text-gray-800'\n                }`}\n              >\n                {componentData.critical}\n              </span>\n            </div>\n          )}\n        </div>\n        <div>\n          <label\n            className={`text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1`}\n          >\n            Class Item\n          </label>\n          {isChangeMode ? (\n            <select\n              value={componentData.classItem}\n              onChange={e => handleFieldChange('classItem', e.target.value)}\n              className={`text-sm w-full px-2 py-1 border rounded ${\n                changedFields.has('classItem')\n                  ? 'text-red-600 border-red-300'\n                  : 'text-[#52BAF3] border-[#52BAF3]'\n              }`}\n              data-field-value='classItem'\n            >\n              <option value='Yes'>Yes</option>\n              <option value='No'>No</option>\n            </select>\n          ) : (\n            <div className='text-sm text-gray-900'>\n              <span\n                className={`px-2 py-1 rounded-full text-xs font-medium ${\n                  componentData.classItem === 'Yes'\n                    ? 'bg-blue-100 text-blue-800'\n                    : 'bg-gray-100 text-gray-800'\n                }`}\n              >\n                {componentData.classItem}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Third row */}\n      <div className='grid grid-cols-4 gap-4'>\n        <div>\n          <label\n            className={`text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1`}\n          >\n            Location\n          </label>\n          <div className='text-sm text-gray-900'>{componentData.location}</div>\n        </div>\n        <div>\n          <label\n            className={`text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1`}\n          >\n            Commissioned Date\n          </label>\n          <div className='text-sm text-gray-900'>\n            {componentData.commissionedDate}\n          </div>\n        </div>\n        <div>\n          <label\n            className={`text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1`}\n          >\n            &nbsp;\n          </label>\n          <div className='text-sm text-gray-900'>&nbsp;</div>\n        </div>\n        <div>\n          <label\n            className={`text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1`}\n          >\n            &nbsp;\n          </label>\n          <div className='text-sm text-gray-900'>&nbsp;</div>\n        </div>\n      </div>\n\n      {/* Additional details - only visible when expanded */}\n      {isExpanded && (\n        <div className='space-y-4 pt-4'>\n          <div className='grid grid-cols-4 gap-4'>\n            <div>\n              <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n                Installation Date\n              </label>\n              {isModifyMode || isChangeMode ? (\n                <ModifyFieldWrapper\n                  originalValue={\n                    originalComponentData?.installationDate ||\n                    componentData.installationDate\n                  }\n                  currentValue={componentData.installationDate}\n                  fieldName='installationDate'\n                  isModifyMode={isModifyMode || isChangeMode}\n                  onFieldChange={(field, value) =>\n                    handleFieldChange('installationDate', value)\n                  }\n                >\n                  <input\n                    type='date'\n                    value={componentData.installationDate}\n                    onChange={e =>\n                      handleFieldChange('installationDate', e.target.value)\n                    }\n                    className='text-sm w-full px-2 py-1 border rounded'\n                  />\n                </ModifyFieldWrapper>\n              ) : (\n                <div className='text-sm text-gray-900'>\n                  {componentData.installationDate}\n                </div>\n              )}\n            </div>\n            <div>\n              <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n                Commissioned Date\n              </label>\n              {isModifyMode || isChangeMode ? (\n                <ModifyFieldWrapper\n                  originalValue={\n                    originalComponentData?.commissionedDate ||\n                    componentData.commissionedDate\n                  }\n                  currentValue={componentData.commissionedDate}\n                  fieldName='commissionedDate'\n                  isModifyMode={isModifyMode || isChangeMode}\n                  onFieldChange={(field, value) =>\n                    handleFieldChange('commissionedDate', value)\n                  }\n                >\n                  <input\n                    type='date'\n                    value={componentData.commissionedDate}\n                    onChange={e =>\n                      handleFieldChange('commissionedDate', e.target.value)\n                    }\n                    className='text-sm w-full px-2 py-1 border rounded'\n                  />\n                </ModifyFieldWrapper>\n              ) : (\n                <div className='text-sm text-gray-900'>\n                  {componentData.commissionedDate}\n                </div>\n              )}\n            </div>\n            <div>\n              <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n                Rating\n              </label>\n              {isModifyMode || isChangeMode ? (\n                <ModifyFieldWrapper\n                  originalValue={\n                    originalComponentData?.rating || componentData.rating\n                  }\n                  currentValue={componentData.rating}\n                  fieldName='rating'\n                  isModifyMode={isModifyMode || isChangeMode}\n                  onFieldChange={(field, value) =>\n                    handleFieldChange('rating', value)\n                  }\n                >\n                  <input\n                    type='text'\n                    value={componentData.rating}\n                    onChange={e => handleFieldChange('rating', e.target.value)}\n                    className='text-sm w-full px-2 py-1 border rounded'\n                    placeholder='e.g., High Performance'\n                  />\n                </ModifyFieldWrapper>\n              ) : (\n                <div className='text-sm text-gray-900'>\n                  {componentData.rating}\n                </div>\n              )}\n            </div>\n            <div>\n              <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n                Condition Based\n              </label>\n              {isModifyMode || isChangeMode ? (\n                <ModifyFieldWrapper\n                  originalValue={\n                    originalComponentData?.conditionBased ||\n                    componentData.conditionBased\n                  }\n                  currentValue={componentData.conditionBased}\n                  fieldName='conditionBased'\n                  isModifyMode={isModifyMode || isChangeMode}\n                  onFieldChange={(field, value) =>\n                    handleFieldChange('conditionBased', value)\n                  }\n                >\n                  <select\n                    value={componentData.conditionBased}\n                    onChange={e =>\n                      handleFieldChange('conditionBased', e.target.value)\n                    }\n                    className='text-sm w-full px-2 py-1 border rounded'\n                  >\n                    <option value='Yes'>Yes</option>\n                    <option value='No'>No</option>\n                  </select>\n                </ModifyFieldWrapper>\n              ) : (\n                <div className='text-sm text-gray-900'>\n                  {componentData.conditionBased}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className='grid grid-cols-4 gap-4'>\n            <div>\n              <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n                No of Units\n              </label>\n              {isModifyMode || isChangeMode ? (\n                <ModifyFieldWrapper\n                  originalValue={\n                    originalComponentData?.noOfUnits || componentData.noOfUnits\n                  }\n                  currentValue={componentData.noOfUnits}\n                  fieldName='noOfUnits'\n                  isModifyMode={isModifyMode || isChangeMode}\n                  onFieldChange={(field, value) =>\n                    handleFieldChange('noOfUnits', value)\n                  }\n                >\n                  <input\n                    type='text'\n                    value={componentData.noOfUnits}\n                    onChange={e =>\n                      handleFieldChange('noOfUnits', e.target.value)\n                    }\n                    className='text-sm w-full px-2 py-1 border rounded'\n                  />\n                </ModifyFieldWrapper>\n              ) : (\n                <div className='text-sm text-gray-900'>\n                  {componentData.noOfUnits}\n                </div>\n              )}\n            </div>\n            <div>\n              <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n                Eqpt. System / Dept.\n              </label>\n              <div className='text-sm text-gray-900'>\n                {componentData.eqptSystemDept}\n              </div>\n            </div>\n            <div>\n              <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n                Parent Component\n              </label>\n              {isModifyMode || isChangeMode ? (\n                <ModifyFieldWrapper\n                  originalValue={\n                    originalComponentData?.parentComponent ||\n                    componentData.parentComponent\n                  }\n                  currentValue={componentData.parentComponent}\n                  fieldName='parentComponent'\n                  isModifyMode={isModifyMode || isChangeMode}\n                  onFieldChange={(field, value) =>\n                    handleFieldChange('parentComponent', value)\n                  }\n                >\n                  <input\n                    type='text'\n                    value={componentData.parentComponent}\n                    onChange={e =>\n                      handleFieldChange('parentComponent', e.target.value)\n                    }\n                    className='text-sm w-full px-2 py-1 border rounded'\n                    placeholder='e.g., Level 6.1.1'\n                  />\n                </ModifyFieldWrapper>\n              ) : (\n                <div className='text-sm text-gray-900'>\n                  {componentData.parentComponent}\n                </div>\n              )}\n            </div>\n            <div>\n              <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n                Dimensions / Size\n              </label>\n              {isModifyMode || isChangeMode ? (\n                <ModifyFieldWrapper\n                  originalValue={\n                    originalComponentData?.dimensionsSize ||\n                    componentData.dimensionsSize\n                  }\n                  currentValue={componentData.dimensionsSize}\n                  fieldName='dimensionsSize'\n                  isModifyMode={isModifyMode || isChangeMode}\n                  onFieldChange={(field, value) =>\n                    handleFieldChange('dimensionsSize', value)\n                  }\n                >\n                  <input\n                    type='text'\n                    value={componentData.dimensionsSize}\n                    onChange={e =>\n                      handleFieldChange('dimensionsSize', e.target.value)\n                    }\n                    className='text-sm w-full px-2 py-1 border rounded'\n                    placeholder='e.g., 0.5m x 0.3m'\n                  />\n                </ModifyFieldWrapper>\n              ) : (\n                <div className='text-sm text-gray-900'>\n                  {componentData.dimensionsSize}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n              Notes\n            </label>\n            <div className='text-sm text-gray-900'>{componentData.notes}</div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst RunningHoursConditionSection: React.FC = () => {\n  const { isChangeRequestMode } = useChangeRequest();\n  const { isModifyMode } = useModifyMode();\n\n  // State for running hours data\n  const [runningHoursData, setRunningHoursData] = useState({\n    currentHours: '12580 hours',\n    updatedDate: '12-Jun-2025',\n    vibration: 40,\n    temperature: 60,\n    pressure: 80,\n  });\n\n  const [originalData] = useState(runningHoursData);\n\n  const handleFieldChange = (field: string, value: any) => {\n    setRunningHoursData(prev => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  return (\n    <div className='space-y-6'>\n      {/* Running Hours */}\n      <div className='flex items-start gap-8'>\n        <div className='flex items-center gap-2'>\n          <label className='text-sm font-medium text-gray-700'>\n            Running Hours:\n          </label>\n          <Edit2 className='h-4 w-4 text-gray-500' />\n        </div>\n        <div className='flex gap-12'>\n          <div>\n            <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n              Current\n            </label>\n            {isModifyMode ? (\n              <ModifyFieldWrapper\n                originalValue={originalData.currentHours}\n                currentValue={runningHoursData.currentHours}\n                fieldName='currentHours'\n                isModifyMode={isModifyMode}\n                onFieldChange={(field, value) =>\n                  handleFieldChange('currentHours', value)\n                }\n              >\n                <input\n                  type='text'\n                  value={runningHoursData.currentHours}\n                  onChange={e =>\n                    handleFieldChange('currentHours', e.target.value)\n                  }\n                  className='text-sm w-full px-2 py-1 border rounded'\n                />\n              </ModifyFieldWrapper>\n            ) : (\n              <div className='text-sm font-semibold text-gray-900'>\n                {runningHoursData.currentHours}\n              </div>\n            )}\n          </div>\n          <div>\n            <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n              Updated\n            </label>\n            {isModifyMode ? (\n              <ModifyFieldWrapper\n                originalValue={originalData.updatedDate}\n                currentValue={runningHoursData.updatedDate}\n                fieldName='updatedDate'\n                isModifyMode={isModifyMode}\n                onFieldChange={(field, value) =>\n                  handleFieldChange('updatedDate', value)\n                }\n              >\n                <input\n                  type='text'\n                  value={runningHoursData.updatedDate}\n                  onChange={e =>\n                    handleFieldChange('updatedDate', e.target.value)\n                  }\n                  className='text-sm w-full px-2 py-1 border rounded'\n                />\n              </ModifyFieldWrapper>\n            ) : (\n              <div className='text-sm font-semibold text-gray-900'>\n                {runningHoursData.updatedDate}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Condition Monitoring Metrics */}\n      <div>\n        <div className='mb-4'>\n          <label className='text-sm font-medium text-gray-700 block mb-2'>\n            Condition Monitoring Metrics:\n          </label>\n        </div>\n        <div className='grid grid-cols-3 gap-8'>\n          {/* Vibration */}\n          <div>\n            <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-2\">\n              Vibration\n            </label>\n            {isModifyMode ? (\n              <ModifyFieldWrapper\n                originalValue={originalData.vibration}\n                currentValue={runningHoursData.vibration}\n                fieldName='vibration'\n                isModifyMode={isModifyMode}\n                onFieldChange={(field, value) =>\n                  handleFieldChange('vibration', value)\n                }\n              >\n                <div>\n                  <input\n                    type='range'\n                    min='0'\n                    max='100'\n                    value={runningHoursData.vibration}\n                    onChange={e =>\n                      handleFieldChange('vibration', parseInt(e.target.value))\n                    }\n                    className='w-full'\n                  />\n                  <span className='text-xs'>{runningHoursData.vibration}%</span>\n                </div>\n              </ModifyFieldWrapper>\n            ) : (\n              <div className='w-full bg-gray-200 rounded-full h-2'>\n                <div\n                  className='bg-green-500 h-2 rounded-full'\n                  style={{ width: `${runningHoursData.vibration}%` }}\n                ></div>\n              </div>\n            )}\n          </div>\n\n          {/* Temperature */}\n          <div>\n            <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-2\">\n              Temperature\n            </label>\n            {isModifyMode ? (\n              <ModifyFieldWrapper\n                originalValue={originalData.temperature}\n                currentValue={runningHoursData.temperature}\n                fieldName='temperature'\n                isModifyMode={isModifyMode}\n                onFieldChange={(field, value) =>\n                  handleFieldChange('temperature', value)\n                }\n              >\n                <div>\n                  <input\n                    type='range'\n                    min='0'\n                    max='100'\n                    value={runningHoursData.temperature}\n                    onChange={e =>\n                      handleFieldChange('temperature', parseInt(e.target.value))\n                    }\n                    className='w-full'\n                  />\n                  <span className='text-xs'>\n                    {runningHoursData.temperature}%\n                  </span>\n                </div>\n              </ModifyFieldWrapper>\n            ) : (\n              <div className='w-full bg-gray-200 rounded-full h-2'>\n                <div\n                  className='bg-yellow-500 h-2 rounded-full'\n                  style={{ width: `${runningHoursData.temperature}%` }}\n                ></div>\n              </div>\n            )}\n          </div>\n\n          {/* Pressure */}\n          <div>\n            <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-2\">\n              Pressure\n            </label>\n            {isModifyMode ? (\n              <ModifyFieldWrapper\n                originalValue={originalData.pressure}\n                currentValue={runningHoursData.pressure}\n                fieldName='pressure'\n                isModifyMode={isModifyMode}\n                onFieldChange={(field, value) =>\n                  handleFieldChange('pressure', value)\n                }\n              >\n                <div>\n                  <input\n                    type='range'\n                    min='0'\n                    max='100'\n                    value={runningHoursData.pressure}\n                    onChange={e =>\n                      handleFieldChange('pressure', parseInt(e.target.value))\n                    }\n                    className='w-full'\n                  />\n                  <span className='text-xs'>{runningHoursData.pressure}%</span>\n                </div>\n              </ModifyFieldWrapper>\n            ) : (\n              <div className='w-full bg-gray-200 rounded-full h-2'>\n                <div\n                  className='bg-red-500 h-2 rounded-full'\n                  style={{ width: `${runningHoursData.pressure}%` }}\n                ></div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst WorkOrdersSection: React.FC<{\n  componentCode: string;\n  componentName: string;\n}> = ({ componentCode, componentName }) => {\n  const [isWorkOrderFormOpen, setIsWorkOrderFormOpen] = useState(false);\n  const [selectedWorkOrder, setSelectedWorkOrder] = useState<any>(null);\n\n  // Generate template code for existing data\n  const generateTemplateCode = (\n    componentCode: string,\n    taskType: string,\n    basis: string,\n    frequency: number,\n    unit?: string\n  ) => {\n    const taskCodes: Record<string, string> = {\n      Inspection: 'INS',\n      Overhaul: 'OH',\n      Service: 'SRV',\n      Testing: 'TST',\n    };\n\n    let freqTag = '';\n    if (basis === 'Calendar' && frequency && unit) {\n      const unitCode = unit[0].toUpperCase();\n      freqTag = `${unitCode}${frequency}`;\n    } else if (basis === 'Running Hours' && frequency) {\n      freqTag = `RH${frequency}`;\n    }\n\n    const taskCode = taskCodes[taskType] || '';\n    return `WO-${componentCode}-${taskCode}${freqTag}`.toUpperCase();\n  };\n\n  const workOrders = [\n    {\n      templateCode: generateTemplateCode(\n        componentCode,\n        'Overhaul',\n        'Calendar',\n        6,\n        'Months'\n      ),\n      jobTitle: 'Main Engine Overhaul - Replace Main Bearings',\n      assignedTo: 'Chief Engineer',\n      dueDate: '02-Jun-2025',\n      status: 'Due',\n      dateCompleted: '',\n      // Store template data for editing\n      taskType: 'Overhaul',\n      maintenanceBasis: 'Calendar',\n      frequencyValue: '6',\n      frequencyUnit: 'Months',\n    },\n    {\n      templateCode: generateTemplateCode(\n        componentCode,\n        'Overhaul',\n        'Calendar',\n        6,\n        'Months'\n      ),\n      jobTitle: 'Main Engine Overhaul - Replace Main Bearings',\n      assignedTo: 'Chief Engineer',\n      dueDate: '02-Jun-2025',\n      status: 'Due (Grace P)',\n      dateCompleted: '',\n      taskType: 'Overhaul',\n      maintenanceBasis: 'Calendar',\n      frequencyValue: '6',\n      frequencyUnit: 'Months',\n    },\n  ];\n\n  const handleAddWorkOrder = () => {\n    setSelectedWorkOrder(null);\n    setIsWorkOrderFormOpen(true);\n  };\n\n  const handleRowClick = (workOrder: any) => {\n    setSelectedWorkOrder(workOrder);\n    setIsWorkOrderFormOpen(true);\n  };\n\n  const handleWorkOrderSubmit = (formData: any) => {\n    console.log('Work Order submitted:', formData);\n    // Handle saving the work order\n    setIsWorkOrderFormOpen(false);\n  };\n\n  return (\n    <>\n      <div className='overflow-x-auto'>\n        <div className='flex justify-end mb-3'>\n          <Button\n            onClick={handleAddWorkOrder}\n            size='sm'\n            className='bg-[#0ea5e9] hover:bg-[#0284c7] text-white'\n          >\n            <Plus className='h-4 w-4 mr-1' />\n            Add WO\n          </Button>\n        </div>\n        <table className='w-full text-sm'>\n          <thead>\n            <tr className='border-b border-gray-200'>\n              <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n                W.O No.\n              </th>\n              <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n                Job Title\n              </th>\n              <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n                Assigned to\n              </th>\n              <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n                Due Date\n              </th>\n              <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n                Status\n              </th>\n              <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n                Date Completed\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {workOrders.map((order, index) => (\n              <tr\n                key={index}\n                className='border-b border-gray-100 hover:bg-gray-50 cursor-pointer'\n                onClick={() => handleRowClick(order)}\n              >\n                <td className='py-3 px-3 text-gray-900'>\n                  {order.templateCode}\n                </td>\n                <td className='py-3 px-3 text-gray-900'>{order.jobTitle}</td>\n                <td className='py-3 px-3 text-gray-900'>{order.assignedTo}</td>\n                <td className='py-3 px-3 text-gray-900'>{order.dueDate}</td>\n                <td className='py-3 px-3'>\n                  <span\n                    className={`px-3 py-1 rounded-full text-xs font-medium ${\n                      order.status === 'Due'\n                        ? 'bg-yellow-100 text-yellow-800'\n                        : 'bg-yellow-100 text-yellow-800'\n                    }`}\n                  >\n                    {order.status}\n                  </span>\n                </td>\n                <td className='py-3 px-3 text-gray-900'>\n                  {order.dateCompleted}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Work Order Form Dialog */}\n      <WorkOrderForm\n        isOpen={isWorkOrderFormOpen}\n        onClose={() => setIsWorkOrderFormOpen(false)}\n        onSubmit={handleWorkOrderSubmit}\n        component={{ code: componentCode, name: componentName }}\n        workOrder={selectedWorkOrder}\n      />\n    </>\n  );\n};\n\nconst MaintenanceHistorySection: React.FC = () => {\n  const maintenanceHistory = [\n    {\n      title: 'Main Engine Overhaul - Replace Main bearings',\n      workOrderNo: 'WO-2025-001',\n      assignedTo: '2nd Eng',\n      status: 'Completed',\n      dateCompleted: '02-Jun-2025',\n    },\n    {\n      title: 'Main Engine - Replace Piston Rings',\n      workOrderNo: 'WO-2024-013',\n      assignedTo: '2nd Eng',\n      status: 'Completed',\n      dateCompleted: '02-Feb-2025',\n    },\n  ];\n\n  return (\n    <div className='overflow-x-auto'>\n      <table className='w-full text-sm'>\n        <thead>\n          <tr className='border-b border-gray-200'>\n            <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n              Title\n            </th>\n            <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n              Work Order No\n            </th>\n            <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n              Assigned to\n            </th>\n            <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n              Status\n            </th>\n            <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n              Date Completed\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {maintenanceHistory.map((record, index) => (\n            <tr key={index} className='border-b border-gray-100'>\n              <td className='py-3 px-3 text-gray-900'>{record.title}</td>\n              <td className='py-3 px-3 text-gray-900'>{record.workOrderNo}</td>\n              <td className='py-3 px-3 text-gray-900'>{record.assignedTo}</td>\n              <td className='py-3 px-3'>\n                <span className='px-3 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800'>\n                  {record.status}\n                </span>\n              </td>\n              <td className='py-3 px-3 text-gray-900'>\n                {record.dateCompleted}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst SparesSection: React.FC = () => {\n  const { isModifyMode } = useModifyMode();\n\n  const [spares, setSpares] = useState([\n    {\n      partCode: 'SP-ME-001',\n      partName: 'Fuel Injector',\n      critical: 'Critical',\n      rob: '2',\n      min: '1',\n      stock: 'OK',\n      location: 'Store Room A',\n    },\n    {\n      partCode: 'SP-ME-002',\n      partName: 'Cylinder Head Gasket',\n      critical: '',\n      rob: '2',\n      min: '1',\n      stock: 'OK',\n      location: 'Store Room B',\n    },\n  ]);\n\n  const [originalSpares] = useState(JSON.parse(JSON.stringify(spares)));\n\n  const handleFieldChange = (index: number, field: string, value: string) => {\n    const updatedSpares = [...spares];\n    updatedSpares[index] = {\n      ...updatedSpares[index],\n      [field]: value,\n    };\n    setSpares(updatedSpares);\n  };\n\n  return (\n    <div className='overflow-x-auto'>\n      <table className='w-full text-sm'>\n        <thead>\n          <tr className='border-b border-gray-200'>\n            <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n              Part Code\n            </th>\n            <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n              Part Name\n            </th>\n            <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n              Critical\n            </th>\n            <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n              ROB\n            </th>\n            <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n              Min\n            </th>\n            <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n              Stock\n            </th>\n            <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n              Location\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {spares.map((spare, index) => (\n            <tr key={index} className='border-b border-gray-100'>\n              <td className='py-3 px-3 text-gray-900'>\n                {isModifyMode ? (\n                  <ModifyFieldWrapper\n                    originalValue={originalSpares[index].partCode}\n                    currentValue={spare.partCode}\n                    fieldName={`partCode-${index}`}\n                    isModifyMode={isModifyMode}\n                    onFieldChange={(field, value) =>\n                      handleFieldChange(index, 'partCode', value)\n                    }\n                  >\n                    <input\n                      type='text'\n                      value={spare.partCode}\n                      onChange={e =>\n                        handleFieldChange(index, 'partCode', e.target.value)\n                      }\n                      className='text-sm w-full px-2 py-1 border rounded'\n                    />\n                  </ModifyFieldWrapper>\n                ) : (\n                  spare.partCode\n                )}\n              </td>\n              <td className='py-3 px-3 text-gray-900'>\n                {isModifyMode ? (\n                  <ModifyFieldWrapper\n                    originalValue={originalSpares[index].partName}\n                    currentValue={spare.partName}\n                    fieldName={`partName-${index}`}\n                    isModifyMode={isModifyMode}\n                    onFieldChange={(field, value) =>\n                      handleFieldChange(index, 'partName', value)\n                    }\n                  >\n                    <input\n                      type='text'\n                      value={spare.partName}\n                      onChange={e =>\n                        handleFieldChange(index, 'partName', e.target.value)\n                      }\n                      className='text-sm w-full px-2 py-1 border rounded'\n                    />\n                  </ModifyFieldWrapper>\n                ) : (\n                  spare.partName\n                )}\n              </td>\n              <td className='py-3 px-3'>\n                {isModifyMode ? (\n                  <ModifyFieldWrapper\n                    originalValue={originalSpares[index].critical}\n                    currentValue={spare.critical}\n                    fieldName={`critical-${index}`}\n                    isModifyMode={isModifyMode}\n                    onFieldChange={(field, value) =>\n                      handleFieldChange(index, 'critical', value)\n                    }\n                  >\n                    <select\n                      value={spare.critical}\n                      onChange={e =>\n                        handleFieldChange(index, 'critical', e.target.value)\n                      }\n                      className='text-sm w-full px-2 py-1 border rounded'\n                    >\n                      <option value=''>Non-Critical</option>\n                      <option value='Critical'>Critical</option>\n                    </select>\n                  </ModifyFieldWrapper>\n                ) : (\n                  spare.critical && (\n                    <span className='px-3 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800 border border-red-300'>\n                      {spare.critical}\n                    </span>\n                  )\n                )}\n              </td>\n              <td className='py-3 px-3 text-gray-900'>\n                {isModifyMode ? (\n                  <ModifyFieldWrapper\n                    originalValue={originalSpares[index].rob}\n                    currentValue={spare.rob}\n                    fieldName={`rob-${index}`}\n                    isModifyMode={isModifyMode}\n                    onFieldChange={(field, value) =>\n                      handleFieldChange(index, 'rob', value)\n                    }\n                  >\n                    <input\n                      type='text'\n                      value={spare.rob}\n                      onChange={e =>\n                        handleFieldChange(index, 'rob', e.target.value)\n                      }\n                      className='text-sm w-[60px] px-2 py-1 border rounded'\n                    />\n                  </ModifyFieldWrapper>\n                ) : (\n                  spare.rob\n                )}\n              </td>\n              <td className='py-3 px-3 text-gray-900'>\n                {isModifyMode ? (\n                  <ModifyFieldWrapper\n                    originalValue={originalSpares[index].min}\n                    currentValue={spare.min}\n                    fieldName={`min-${index}`}\n                    isModifyMode={isModifyMode}\n                    onFieldChange={(field, value) =>\n                      handleFieldChange(index, 'min', value)\n                    }\n                  >\n                    <input\n                      type='text'\n                      value={spare.min}\n                      onChange={e =>\n                        handleFieldChange(index, 'min', e.target.value)\n                      }\n                      className='text-sm w-[60px] px-2 py-1 border rounded'\n                    />\n                  </ModifyFieldWrapper>\n                ) : (\n                  spare.min\n                )}\n              </td>\n              <td className='py-3 px-3'>\n                <span className='px-3 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800'>\n                  {spare.stock}\n                </span>\n              </td>\n              <td className='py-3 px-3 text-gray-900'>\n                {isModifyMode ? (\n                  <ModifyFieldWrapper\n                    originalValue={originalSpares[index].location}\n                    currentValue={spare.location}\n                    fieldName={`location-${index}`}\n                    isModifyMode={isModifyMode}\n                    onFieldChange={(field, value) =>\n                      handleFieldChange(index, 'location', value)\n                    }\n                  >\n                    <input\n                      type='text'\n                      value={spare.location}\n                      onChange={e =>\n                        handleFieldChange(index, 'location', e.target.value)\n                      }\n                      className='text-sm w-full px-2 py-1 border rounded'\n                    />\n                  </ModifyFieldWrapper>\n                ) : (\n                  spare.location\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst DrawingsAndManualsSection: React.FC = () => {\n  const documents = [\n    { name: 'Equipment Drawing', icon: FileText },\n    { name: 'Installation Guide', icon: FileText },\n    { name: 'Maintenance Manual', icon: FileText },\n    { name: 'Trouble shooting Guide', icon: FileText },\n  ];\n\n  return (\n    <div className='grid grid-cols-2 gap-4'>\n      {documents.map((doc, index) => (\n        <div\n          key={index}\n          className='flex items-center gap-3 p-3 hover:bg-gray-50 cursor-pointer rounded-md'\n        >\n          <doc.icon className='h-5 w-5 text-gray-600' />\n          <span className='text-sm text-gray-700'>{doc.name}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst ClassificationRegulatorySection: React.FC = () => {\n  const { isChangeRequestMode } = useChangeRequest();\n  const { isModifyMode } = useModifyMode();\n\n  const [classData, setClassData] = useState({\n    classificationSociety: 'DNV',\n    certificateNo: 'CERT-ME-2025-01',\n    lastClassSurvey: '15-Mar-2023',\n    nextClassSurvey: '15-Mar-2025',\n  });\n\n  const [originalClassData] = useState(classData);\n\n  const handleFieldChange = (field: string, value: string) => {\n    setClassData(prev => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  return (\n    <div className='space-y-4'>\n      {/* First row */}\n      <div className='grid grid-cols-4 gap-4'>\n        <div>\n          <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n            Classification Society\n          </label>\n          {isModifyMode ? (\n            <ModifyFieldWrapper\n              originalValue={originalClassData.classificationSociety}\n              currentValue={classData.classificationSociety}\n              fieldName='classificationSociety'\n              isModifyMode={isModifyMode}\n              onFieldChange={(field, value) =>\n                handleFieldChange('classificationSociety', value)\n              }\n            >\n              <input\n                type='text'\n                value={classData.classificationSociety}\n                onChange={e =>\n                  handleFieldChange('classificationSociety', e.target.value)\n                }\n                className='text-sm w-full px-2 py-1 border rounded'\n              />\n            </ModifyFieldWrapper>\n          ) : (\n            <div className='text-sm text-gray-900'>\n              {classData.classificationSociety}\n            </div>\n          )}\n        </div>\n        <div>\n          <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n            Certificate No.\n          </label>\n          {isModifyMode ? (\n            <ModifyFieldWrapper\n              originalValue={originalClassData.certificateNo}\n              currentValue={classData.certificateNo}\n              fieldName='certificateNo'\n              isModifyMode={isModifyMode}\n              onFieldChange={(field, value) =>\n                handleFieldChange('certificateNo', value)\n              }\n            >\n              <input\n                type='text'\n                value={classData.certificateNo}\n                onChange={e =>\n                  handleFieldChange('certificateNo', e.target.value)\n                }\n                className='text-sm w-full px-2 py-1 border rounded'\n              />\n            </ModifyFieldWrapper>\n          ) : (\n            <div className='text-sm text-gray-900'>\n              {classData.certificateNo}\n            </div>\n          )}\n        </div>\n        <div>\n          <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n            Last Class Survey\n          </label>\n          {isModifyMode ? (\n            <ModifyFieldWrapper\n              originalValue={originalClassData.lastClassSurvey}\n              currentValue={classData.lastClassSurvey}\n              fieldName='lastClassSurvey'\n              isModifyMode={isModifyMode}\n              onFieldChange={(field, value) =>\n                handleFieldChange('lastClassSurvey', value)\n              }\n            >\n              <input\n                type='text'\n                value={classData.lastClassSurvey}\n                onChange={e =>\n                  handleFieldChange('lastClassSurvey', e.target.value)\n                }\n                className='text-sm w-full px-2 py-1 border rounded'\n              />\n            </ModifyFieldWrapper>\n          ) : (\n            <div className='text-sm text-gray-900'>\n              {classData.lastClassSurvey}\n            </div>\n          )}\n        </div>\n        <div>\n          <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n            Next Class Survey\n          </label>\n          {isModifyMode ? (\n            <ModifyFieldWrapper\n              originalValue={originalClassData.nextClassSurvey}\n              currentValue={classData.nextClassSurvey}\n              fieldName='nextClassSurvey'\n              isModifyMode={isModifyMode}\n              onFieldChange={(field, value) =>\n                handleFieldChange('nextClassSurvey', value)\n              }\n            >\n              <input\n                type='text'\n                value={classData.nextClassSurvey}\n                onChange={e =>\n                  handleFieldChange('nextClassSurvey', e.target.value)\n                }\n                className='text-sm w-full px-2 py-1 border rounded'\n              />\n            </ModifyFieldWrapper>\n          ) : (\n            <div className='text-sm text-gray-900'>\n              {classData.nextClassSurvey}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Second row */}\n      <div className='grid grid-cols-4 gap-4'>\n        <div>\n          <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n            Survey Type\n          </label>\n          <div className='text-sm text-gray-900'>Annual</div>\n        </div>\n        <div>\n          <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n            Class Requirements\n          </label>\n          <div className='text-sm text-gray-900'>SOLAS, MARPOL, MLC</div>\n        </div>\n        <div>\n          <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n            Class Code\n          </label>\n          <div className='text-sm text-gray-900'>DNV-ME-001</div>\n        </div>\n        <div>\n          <label className=\"text-xs font-medium ${isChangeRequestMode ? 'text-white' : 'text-[#8798ad]'} block mb-1\">\n            Information\n          </label>\n          <div className='text-sm text-gray-900'>Details</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst RequisitionsSection: React.FC = () => {\n  const requisitions = [\n    {\n      reqId: 'RQ-ME-001',\n      reqDate: '15-May-2025',\n      titleDescription: 'Main Engine Cylinder Head Gasket - Urgent Replacement',\n      requestedDate: '20-May-2025',\n      status: 'Approved',\n      remarks: 'High priority - main engine showing compression loss',\n    },\n    {\n      reqId: 'RQ-ME-002',\n      reqDate: '10-May-2025',\n      titleDescription: 'Fuel Injection Pump Service Kit',\n      requestedDate: '25-May-2025',\n      status: 'Ordered',\n      remarks: 'Preventive maintenance - scheduled overhaul',\n    },\n    {\n      reqId: 'RQ-ME-003',\n      reqDate: '08-May-2025',\n      titleDescription: 'Turbocharger Bearing Set',\n      requestedDate: '30-May-2025',\n      status: 'Open',\n      remarks: 'Vibration monitoring shows wear indication',\n    },\n  ];\n\n  return (\n    <div className='overflow-x-auto'>\n      <table className='w-full text-sm'>\n        <thead>\n          <tr className='border-b border-gray-200'>\n            <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n              Req. ID\n            </th>\n            <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n              Req. Date\n            </th>\n            <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n              Title / Description\n            </th>\n            <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n              Requested Date\n            </th>\n            <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n              Status\n            </th>\n            <th className='text-left py-2 px-3 font-medium text-[#8798ad]'>\n              Remarks\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {requisitions.map((req, index) => (\n            <tr key={index} className='border-b border-gray-100'>\n              <td className='py-3 px-3 text-gray-900'>{req.reqId}</td>\n              <td className='py-3 px-3 text-gray-900'>{req.reqDate}</td>\n              <td className='py-3 px-3 text-gray-900'>\n                {req.titleDescription}\n              </td>\n              <td className='py-3 px-3 text-gray-900'>{req.requestedDate}</td>\n              <td className='py-3 px-3'>\n                <span\n                  className={`px-3 py-1 rounded-full text-xs font-medium ${\n                    req.status === 'Approved'\n                      ? 'bg-green-100 text-green-800'\n                      : req.status === 'Ordered'\n                        ? 'bg-blue-100 text-blue-800'\n                        : req.status === 'Open'\n                          ? 'bg-yellow-100 text-yellow-800'\n                          : 'bg-gray-100 text-gray-800'\n                  }`}\n                >\n                  {req.status}\n                </span>\n              </td>\n              <td className='py-3 px-3 text-gray-900'>{req.remarks}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst Components: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedComponent, setSelectedComponent] =\n    useState<ComponentNode | null>(null);\n  const [expandedNodes, setExpandedNodes] = useState<Set<string>>(\n    new Set(['6', '6.1', '6.1.1'])\n  );\n  const [expandedSections, setExpandedSections] = useState<Set<string>>(\n    new Set(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'])\n  );\n  const [isComponentFormOpen, setIsComponentFormOpen] = useState(false);\n  const [showReviewDrawer, setShowReviewDrawer] = useState(false);\n  const [showModifySubmitFooter, setShowModifySubmitFooter] = useState(false);\n  const [modifiedComponentData, setModifiedComponentData] = useState<any>(null);\n  const [originalComponentData, setOriginalComponentData] = useState<any>(null);\n\n  // Preview changes mode state\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [changeRequestData, setChangeRequestData] = useState<any>(null);\n  const [previewChanges, setPreviewChanges] = useState<any[]>([]);\n\n  const { isChangeRequestMode, exitChangeRequestMode } = useChangeRequest();\n  const {\n    isChangeMode,\n    changeRequestTitle,\n    changeRequestCategory,\n    setOriginalSnapshot,\n    collectDiff,\n    getDiffs,\n    reset,\n  } = useChangeMode();\n  const [location, setLocation] = useLocation();\n  const { toast } = useToast();\n\n  // Helper function to find component by ID\n  const findComponentById = (id: string): ComponentNode | null => {\n    const searchInTree = (nodes: ComponentNode[]): ComponentNode | null => {\n      for (const node of nodes) {\n        if (node.id === id || node.code === id) {\n          return node;\n        }\n        if (node.children) {\n          const found = searchInTree(node.children);\n          if (found) return found;\n        }\n      }\n      return null;\n    };\n    return searchInTree(dummyComponents);\n  };\n\n  // Check for modify mode from URL parameter\n  const urlParams = new URLSearchParams(window.location.search);\n  const isModifyMode = urlParams.get('modify') === '1';\n\n  // Check for preview changes mode and load change request data\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const previewMode = params.get('previewChanges') === '1';\n    const changeRequestId = params.get('changeRequestId');\n    const targetId = params.get('targetId');\n\n    if (previewMode && changeRequestId) {\n      setIsPreviewMode(true);\n\n      // Fetch the change request data\n      fetch(`/api/change-requests/${changeRequestId}`)\n        .then(res => res.json())\n        .then(data => {\n          setChangeRequestData(data);\n          if (data.proposedChangesJson) {\n            setPreviewChanges(\n              Array.isArray(data.proposedChangesJson)\n                ? data.proposedChangesJson\n                : []\n            );\n          }\n\n          // Auto-select the target component if provided\n          if (targetId && data.targetType === 'component') {\n            const component = findComponentById(targetId);\n            if (component) {\n              setSelectedComponent(component);\n              // Expand the path to show the component\n              const expandPath = (componentCode: string) => {\n                const parts = componentCode.split('.');\n                const newExpanded = new Set(expandedNodes);\n                for (let i = 0; i < parts.length - 1; i++) {\n                  newExpanded.add(parts.slice(0, i + 1).join('.'));\n                }\n                setExpandedNodes(newExpanded);\n              };\n              expandPath(component.code);\n            }\n          }\n        })\n        .catch(err => {\n          console.error('Failed to load change request data:', err);\n          toast({\n            title: 'Error',\n            description: 'Failed to load change request data',\n            variant: 'destructive',\n          });\n        });\n    } else {\n      setIsPreviewMode(false);\n      setChangeRequestData(null);\n      setPreviewChanges([]);\n    }\n  }, [location]);\n\n  // Handle change mode - capture original snapshot when component is selected\n  useEffect(() => {\n    if (isChangeMode && selectedComponent) {\n      // Set the original snapshot for change tracking\n      const snapshot = {\n        id: selectedComponent.id,\n        displayKey: selectedComponent.code,\n        displayName: selectedComponent.name,\n        displayPath: `${selectedComponent.code} ${selectedComponent.name}`,\n        componentCode: selectedComponent.code,\n        name: selectedComponent.name,\n        maker: 'MAN B&W', // These would come from actual data\n        model: '6S60MC-C',\n        serialNo: 'MB2020001',\n        category: getComponentCategory(selectedComponent.code),\n        deptCategory: 'Engineering',\n        location: 'Engine Room',\n        critical: 'Yes',\n        classItem: 'Yes',\n        commissionedDate: '01-Jan-2020',\n      };\n      setOriginalSnapshot(snapshot);\n    }\n  }, [isChangeMode, selectedComponent]);\n\n  // Initialize modify mode from URL parameter\n  useEffect(() => {\n    if (isModifyMode) {\n      setShowModifySubmitFooter(true);\n      // Apply modify mode styles to the body\n      document.body.classList.add('modify-mode');\n    }\n    return () => {\n      document.body.classList.remove('modify-mode');\n    };\n  }, [isModifyMode]);\n\n  // Check if we should open the Add/Edit Component form OR select a specific component\n  useEffect(() => {\n    const shouldOpenForm = sessionStorage.getItem('openComponentForm');\n    const targetComponentCode = sessionStorage.getItem('targetComponentCode');\n\n    if (shouldOpenForm === 'true') {\n      setIsComponentFormOpen(true);\n      sessionStorage.removeItem('openComponentForm');\n    }\n\n    // If we have a target component code from ModifyPMS, find and select it\n    if (targetComponentCode) {\n      const findComponent = (nodes: ComponentNode[]): ComponentNode | null => {\n        for (const node of nodes) {\n          if (node.code === targetComponentCode) {\n            return node;\n          }\n          if (node.children) {\n            const found = findComponent(node.children);\n            if (found) return found;\n          }\n        }\n        return null;\n      };\n\n      const targetComponent = findComponent(dummyComponents);\n      if (targetComponent) {\n        setSelectedComponent(targetComponent);\n        // Expand parent nodes to show the selected component\n        const expandParents = (code: string) => {\n          const parts = code.split('.');\n          const parentsToExpand: string[] = [];\n          for (let i = 1; i <= parts.length; i++) {\n            parentsToExpand.push(parts.slice(0, i).join('.'));\n          }\n          setExpandedNodes(new Set(parentsToExpand));\n        };\n        expandParents(targetComponentCode);\n      }\n      sessionStorage.removeItem('targetComponentCode');\n    }\n  }, []);\n\n  const handleBackToModifyPMS = () => {\n    exitChangeRequestMode();\n    reset();\n    setLocation('/pms/modify-pms');\n  };\n\n  const handleCancelChangeMode = () => {\n    reset();\n    setLocation('/pms/modify-pms');\n  };\n\n  const toggleNode = (nodeId: string) => {\n    setExpandedNodes(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(nodeId)) {\n        newSet.delete(nodeId);\n      } else {\n        newSet.add(nodeId);\n      }\n      return newSet;\n    });\n  };\n\n  const toggleSection = (sectionId: string) => {\n    setExpandedSections(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(sectionId)) {\n        newSet.delete(sectionId);\n      } else {\n        newSet.add(sectionId);\n      }\n      return newSet;\n    });\n  };\n\n  const renderComponentTree = (nodes: ComponentNode[], level: number = 0) => {\n    return nodes.map(node => {\n      const hasChildren = node.children && node.children.length > 0;\n      const isExpanded = expandedNodes.has(node.id);\n      const isSelected = selectedComponent?.id === node.id;\n\n      return (\n        <div key={node.id}>\n          <div\n            className={`flex items-center px-3 py-2 cursor-pointer hover:bg-gray-50 border-b border-gray-100 ${\n              isSelected ? 'bg-blue-50' : ''\n            }`}\n            style={{ paddingLeft: `${level * 20 + 12}px` }}\n            onClick={() => {\n              setSelectedComponent(node);\n              // Automatically open CR form when in change request mode\n              if (isChangeRequestMode) {\n                setIsComponentFormOpen(true);\n              }\n            }}\n          >\n            <button\n              className='mr-2 flex-shrink-0'\n              onClick={e => {\n                e.stopPropagation();\n                if (hasChildren) {\n                  toggleNode(node.id);\n                }\n              }}\n            >\n              {hasChildren ? (\n                isExpanded ? (\n                  <ChevronDown className='h-4 w-4 text-gray-600' />\n                ) : (\n                  <ChevronRight className='h-4 w-4 text-gray-600' />\n                )\n              ) : (\n                <ChevronRight className='h-4 w-4 text-gray-400' />\n              )}\n            </button>\n            <span className='text-sm text-gray-700'>\n              {node.code} {node.name}\n            </span>\n          </div>\n          {hasChildren && isExpanded && (\n            <div>{renderComponentTree(node.children!, level + 1)}</div>\n          )}\n        </div>\n      );\n    });\n  };\n\n  const formSections = [\n    { id: 'A', title: 'Component Information' },\n    { id: 'B', title: 'Running Hours & Condition Monitoring' },\n    { id: 'C', title: 'Work Orders' },\n    { id: 'D', title: 'Maintenance History' },\n    { id: 'E', title: 'Spares' },\n    { id: 'F', title: 'Drawings & Manuals' },\n    { id: 'G', title: 'Classification & Regulatory Data' },\n    { id: 'H', title: 'Requisitions' },\n  ];\n\n  // Build proposed changes from tracked modifications\n  const buildProposedChanges = () => {\n    const changes: any[] = [];\n\n    // Use Change Mode Context diffs which properly track all field changes\n    const diffs = getDiffs();\n\n    if (diffs.length > 0) {\n      diffs.forEach(diff => {\n        changes.push({\n          field: diff.path,\n          oldValue: diff.oldVal || '',\n          newValue: diff.newVal || '',\n        });\n      });\n    }\n\n    return changes;\n  };\n\n  // Handle Submit for modify mode\n  const handleModifySubmit = async () => {\n    if (!selectedComponent) {\n      toast({\n        title: 'Please select a component',\n        description: 'You must select a component to modify before submitting',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    // Get component details for the snapshot\n    const componentDetails = getComponentMockData(selectedComponent.code);\n\n    // Build the proposed changes from actual modifications\n    const proposedChanges = buildProposedChanges();\n\n    if (proposedChanges.length === 0) {\n      toast({\n        title: 'No changes detected',\n        description: 'Please make some modifications before submitting',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    // Create proper change request structure matching the schema\n    const changeRequest = {\n      vesselId: 'V001', // Required field\n      category: 'components', // Required field\n      title: `Modify Component: ${selectedComponent.code} ${selectedComponent.name}`, // Required field\n      reason: 'Component modification request', // Required field\n      requestedByUserId: 'current_user', // Required field\n      targetType: 'component',\n      targetId: selectedComponent.id,\n      snapshotBeforeJson: {\n        displayKey: selectedComponent.code,\n        displayName: selectedComponent.name,\n        displayPath: `${selectedComponent.code} ${selectedComponent.name}`,\n        fields: {\n          id: selectedComponent.id,\n          code: selectedComponent.code,\n          name: selectedComponent.name,\n          maker: componentDetails.maker,\n          model: componentDetails.model,\n          serialNo: componentDetails.serialNo,\n          department: componentDetails.department,\n          location: componentDetails.location,\n          critical: componentDetails.critical,\n          classItem: componentDetails.classItem,\n          commissionedDate: componentDetails.commissionedDate,\n          installationDate: componentDetails.installationDate,\n          rating: componentDetails.rating,\n          conditionBased: componentDetails.conditionBased,\n          noOfUnits: componentDetails.noOfUnits,\n          eqptSystemDept: componentDetails.eqptSystemDept,\n          parentComponent: componentDetails.parentComponent,\n          dimensionsSize: componentDetails.dimensionsSize,\n          notes: componentDetails.notes,\n        },\n      },\n      proposedChangesJson: proposedChanges, // Now populated with actual changes\n      status: 'submitted', // Submit directly as submitted for review\n    };\n\n    try {\n      const response = await fetch('/api/change-requests', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(changeRequest),\n      });\n\n      if (response.ok) {\n        toast({\n          title: 'Change request created',\n          description:\n            'Your change request has been created as a draft. Navigate to Modify PMS to complete it.',\n        });\n        // Navigate back to Modify PMS\n        setLocation('/pms/modify-pms');\n      } else {\n        const errorData = await response.json();\n        console.error('API Error:', errorData);\n        throw new Error(errorData.error || 'Failed to submit change request');\n      }\n    } catch (error) {\n      console.error('Submission error:', error);\n      toast({\n        title: 'Submission failed',\n        description:\n          (error as Error).message ||\n          'Failed to submit change request. Please try again.',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  return (\n    <div\n      className={`h-full p-6 ${isModifyMode ? '' : isChangeMode ? 'bg-orange-50' : isChangeRequestMode ? 'bg-[#52baf3]' : 'bg-[#fafafa]'}`}\n    >\n      {/* Change Mode Banner */}\n      {isChangeMode && (\n        <div className='mb-4 p-4 bg-amber-50 border-b-2 border-amber-200'>\n          <div className='flex items-center justify-between'>\n            <div className='flex items-center gap-3'>\n              <div>\n                <h3 className='font-semibold text-amber-900'>\n                  You are proposing changes to this record\n                </h3>\n                <p className='text-sm text-amber-700'>\n                  {changeRequestTitle\n                    ? `Change Request: ${changeRequestTitle}`\n                    : 'Edited fields will be tracked and submitted for approval'}\n                </p>\n              </div>\n            </div>\n            <div className='flex gap-2'>\n              <Button variant='outline' onClick={handleCancelChangeMode}>\n                Cancel\n              </Button>\n              <Button\n                className='bg-amber-600 hover:bg-amber-700 text-white'\n                onClick={() => setShowReviewDrawer(true)}\n                disabled={getDiffs().length === 0}\n              >\n                Review & Submit\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Header with SubModule Title */}\n      <div className='mb-6'>\n        <div className='flex items-center justify-between mb-4'>\n          <div className='flex items-center gap-4'>\n            {isChangeRequestMode && (\n              <Button\n                variant='ghost'\n                onClick={handleBackToModifyPMS}\n                className='text-white hover:bg-white/20'\n              >\n                <ArrowLeft className='h-4 w-4 mr-2' />\n                Back to Modify PMS\n              </Button>\n            )}\n            <h1\n              className={`text-2xl font-semibold ${isChangeRequestMode ? 'text-white' : 'text-gray-800'}`}\n            >\n              Components{' '}\n              {isChangeMode\n                ? '- Edit Mode'\n                : isChangeRequestMode\n                  ? '- Change Request Mode'\n                  : ''}\n            </h1>\n          </div>\n          {!isChangeRequestMode && !isChangeMode && (\n            <Button\n              className='bg-[#52baf3] hover:bg-[#40a8e0] text-white'\n              onClick={() => setIsComponentFormOpen(true)}\n            >\n              + Add / Edit Component\n            </Button>\n          )}\n        </div>\n\n        {/* Filters Row */}\n        <div className='flex gap-4 mb-4'>\n          <div className='flex items-center gap-2'>\n            <span\n              className={`text-sm font-medium ${isChangeRequestMode ? 'text-white' : 'text-gray-600'}`}\n            >\n              Vessel:\n            </span>\n            <Select defaultValue='all'>\n              <SelectTrigger\n                className={`w-[150px] ${isChangeRequestMode ? 'border-white bg-white/10 text-white' : ''}`}\n              >\n                <SelectValue placeholder='Select vessel' />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value='all'>All Vessels</SelectItem>\n                <SelectItem value='vessel1'>Vessel 1</SelectItem>\n                <SelectItem value='vessel2'>Vessel 2</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div className='flex items-center gap-2'>\n            <span\n              className={`text-sm font-medium ${isChangeRequestMode ? 'text-white' : 'text-gray-600'}`}\n            >\n              Critical Item:\n            </span>\n            <Select defaultValue='all'>\n              <SelectTrigger\n                className={`w-[140px] ${isChangeRequestMode ? 'border-white bg-white/10 text-white' : ''}`}\n              >\n                <SelectValue placeholder='All Items' />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value='all'>All Items</SelectItem>\n                <SelectItem value='critical'>Critical Only</SelectItem>\n                <SelectItem value='non-critical'>Non-Critical</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div className='flex items-center gap-2 flex-1'>\n            <Input\n              placeholder='Search Components...'\n              value={searchTerm}\n              onChange={e => setSearchTerm(e.target.value)}\n              className={`max-w-md ${isChangeRequestMode ? 'border-white bg-white/10 text-white placeholder:text-white/70' : ''}`}\n            />\n          </div>\n        </div>\n      </div>\n      {/* Main Content Area */}\n      <div className='flex gap-6 h-[calc(100vh-200px)]'>\n        {/* Left Panel - Component Tree (30%) */}\n        <div className='w-[30%]'>\n          <div className='bg-white rounded-lg shadow-sm h-full flex flex-col'>\n            <div className='flex-1 overflow-auto'>\n              <div className='bg-[#52baf3] text-white px-4 py-2 font-semibold text-sm'>\n                COMPONENTS\n              </div>\n              <div>{renderComponentTree(dummyComponents)}</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Right Panel - Component Details Form (70%) */}\n        <div className='w-[70%]'>\n          {selectedComponent ? (\n            <div className='bg-white rounded-lg shadow-sm h-full flex flex-col'>\n              <div className='p-4 border-b-2 border-[#52baf3] flex-shrink-0'>\n                <h3 className='text-lg font-semibold text-[#15569e]'>\n                  {selectedComponent.code} {selectedComponent.name}\n                </h3>\n\n                {/* Preview Mode Banner */}\n                {isPreviewMode && changeRequestData && (\n                  <div className='mt-3 p-3 bg-blue-50 border border-blue-200 rounded-lg'>\n                    <div className='flex items-center gap-3'>\n                      <div className='w-2 h-2 bg-blue-500 rounded-full animate-pulse'></div>\n                      <div className='flex-1'>\n                        <h4 className='font-medium text-blue-900 text-sm'>\n                          Viewing Change Request Preview\n                        </h4>\n                        <p className='text-xs text-blue-700'>\n                          {changeRequestData.title} - Changed fields are\n                          highlighted in{' '}\n                          <span className='text-red-600 font-medium'>red</span>\n                        </p>\n                      </div>\n                      <Button\n                        variant='outline'\n                        size='sm'\n                        onClick={() => setLocation('/pms/modify-pms')}\n                        className='text-blue-700 border-blue-300 text-xs px-2 py-1 h-7'\n                      >\n                        <ArrowLeft className='w-3 h-3 mr-1' />\n                        Back\n                      </Button>\n                    </div>\n                  </div>\n                )}\n              </div>\n              <div className='flex-1 overflow-auto p-4'>\n                <div className='space-y-2'>\n                  {formSections.map(section => {\n                    const isExpanded = expandedSections.has(section.id);\n\n                    return (\n                      <Card\n                        key={section.id}\n                        className='rounded-sm border border-gray-200'\n                      >\n                        <CardHeader\n                          className='py-3 cursor-pointer hover:bg-gray-50'\n                          onClick={() => toggleSection(section.id)}\n                        >\n                          <div className='flex items-center justify-between'>\n                            <CardTitle className='text-sm font-medium text-[#16569e]'>\n                              {section.id}. {section.title}\n                            </CardTitle>\n                            {isExpanded ? (\n                              <ChevronDown className='h-4 w-4' />\n                            ) : (\n                              <ChevronRight className='h-4 w-4' />\n                            )}\n                          </div>\n                        </CardHeader>\n                        {isExpanded && (\n                          <CardContent className='pt-4 border-t border-gray-100'>\n                            {section.id === 'A' ? (\n                              <ComponentInformationSection\n                                isExpanded={isExpanded}\n                                selectedComponent={selectedComponent}\n                                isModifyMode={isModifyMode || isPreviewMode}\n                                isPreviewMode={isPreviewMode}\n                                previewChanges={previewChanges}\n                                onDataChange={data => {\n                                  // Update modified component data for change tracking\n                                  if (isModifyMode) {\n                                    setModifiedComponentData(data);\n                                  }\n                                  if (!originalComponentData && data) {\n                                    setOriginalComponentData(\n                                      JSON.parse(JSON.stringify(data))\n                                    );\n                                  }\n                                }}\n                              />\n                            ) : section.id === 'B' ? (\n                              <RunningHoursConditionSection />\n                            ) : section.id === 'C' ? (\n                              <WorkOrdersSection\n                                componentCode={selectedComponent?.code || ''}\n                                componentName={selectedComponent?.name || ''}\n                              />\n                            ) : section.id === 'D' ? (\n                              <MaintenanceHistorySection />\n                            ) : section.id === 'E' ? (\n                              <SparesSection />\n                            ) : section.id === 'F' ? (\n                              <DrawingsAndManualsSection />\n                            ) : section.id === 'G' ? (\n                              <ClassificationRegulatorySection />\n                            ) : section.id === 'H' ? (\n                              <RequisitionsSection />\n                            ) : (\n                              <p className='text-sm text-gray-500'>\n                                {section.title} content will be added here\n                              </p>\n                            )}\n                          </CardContent>\n                        )}\n                      </Card>\n                    );\n                  })}\n                </div>\n\n                {/* Submit Changes Button - Only shown in modify mode */}\n                {isModifyMode && modifiedComponentData && (\n                  <div className='mt-6 pb-4'>\n                    <button\n                      onClick={() => {\n                        // Create change request with modified data\n                        const changedFields: any = {};\n                        if (originalComponentData && modifiedComponentData) {\n                          Object.keys(modifiedComponentData).forEach(key => {\n                            if (\n                              modifiedComponentData[key] !==\n                              originalComponentData[key]\n                            ) {\n                              changedFields[key] = {\n                                old: originalComponentData[key],\n                                new: modifiedComponentData[key],\n                              };\n                            }\n                          });\n                        }\n\n                        if (Object.keys(changedFields).length > 0) {\n                          // Show review drawer with changes\n                          setShowReviewDrawer(true);\n                        } else {\n                          toast({\n                            title: 'No Changes',\n                            description: 'No fields have been modified',\n                          });\n                        }\n                      }}\n                      className='w-full bg-[#15569e] text-white py-3 px-4 rounded-lg font-medium hover:bg-[#0d3d6e] transition-colors'\n                      disabled={!modifiedComponentData}\n                    >\n                      Submit Changes\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div className='bg-white rounded-lg shadow-sm h-full flex items-center justify-center'>\n              <p className='text-gray-500'>\n                Select a component to view details\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Component Register Form */}\n      {/* Use CR form when in change request mode, regular form otherwise */}\n      {isChangeRequestMode ? (\n        <ComponentRegisterFormCR\n          isOpen={isComponentFormOpen}\n          onClose={() => {\n            setIsComponentFormOpen(false);\n            if (isChangeRequestMode) {\n              exitChangeRequestMode();\n              reset();\n              setLocation('/pms/modify-pms');\n            }\n          }}\n          selectedComponent={selectedComponent}\n        />\n      ) : (\n        <ComponentRegisterForm\n          isOpen={isComponentFormOpen}\n          onClose={() => {\n            setIsComponentFormOpen(false);\n            // If in change mode and closing without submitting, go back to ModifyPMS\n            if (isChangeMode) {\n              exitChangeRequestMode();\n              reset();\n              setLocation('/pms/modify-pms');\n            }\n          }}\n          onSubmit={async componentData => {\n            console.log('Component data submitted:', componentData);\n\n            // If in change mode, create a change request\n            if (isChangeMode) {\n              try {\n                // Create the change request with proper structure\n                const changeRequest = {\n                  category: 'components',\n                  title:\n                    changeRequestTitle ||\n                    `New Component: ${componentData.componentName}`,\n                  reason: `Adding new component ${componentData.componentName} with code ${componentData.componentCode}`,\n                  targetType: 'component',\n                  targetId: componentData.componentCode,\n                  snapshotBeforeJson: {\n                    displayKey: componentData.componentCode,\n                    displayName: componentData.componentName,\n                    displayPath: `${componentData.componentCode} ${componentData.componentName}`,\n                    fields: {\n                      componentCode: componentData.componentCode,\n                      componentName: componentData.componentName,\n                      maker: componentData.maker || '',\n                      model: componentData.model || '',\n                      serialNo: componentData.serialNo || '',\n                      category: componentData.equipmentCategory || '',\n                      location: componentData.location || '',\n                      critical: componentData.critical || 'No',\n                      classItem: componentData.classItem || 'No',\n                    },\n                  },\n                  proposedChangesJson: [\n                    {\n                      field: 'New Component',\n                      oldValue: null,\n                      newValue: componentData.componentName,\n                      description: `Create new component ${componentData.componentCode} - ${componentData.componentName}`,\n                    },\n                  ],\n                  status: 'submitted',\n                  vesselId: 'MV Test Vessel',\n                  requestedByUserId: 'current_user',\n                };\n\n                // Submit to API\n                const response = await fetch('/api/change-requests', {\n                  method: 'POST',\n                  headers: { 'Content-Type': 'application/json' },\n                  body: JSON.stringify(changeRequest),\n                });\n\n                if (response.ok) {\n                  const result = await response.json();\n                  toast({\n                    title: 'Success',\n                    description: `Change request CR${String(result.id).padStart(4, '0')} created and submitted successfully`,\n                  });\n\n                  // Exit change mode and navigate back to ModifyPMS\n                  exitChangeRequestMode();\n                  reset();\n                  setLocation('/pms/modify-pms');\n                } else {\n                  throw new Error('Failed to create change request');\n                }\n              } catch (error) {\n                console.error('Error creating change request:', error);\n                toast({\n                  title: 'Error',\n                  description: 'Failed to create change request',\n                  variant: 'destructive',\n                });\n              }\n            } else {\n              // Normal mode - just close the form\n              toast({\n                title: 'Success',\n                description: 'Component saved successfully',\n              });\n              setIsComponentFormOpen(false);\n            }\n          }}\n        />\n      )}\n\n      {/* Review Changes Drawer */}\n      {(isChangeMode || isModifyMode) && selectedComponent && (\n        <ReviewChangesDrawer\n          isOpen={showReviewDrawer}\n          onClose={() => setShowReviewDrawer(false)}\n          targetType='component'\n          targetId={selectedComponent.id}\n        />\n      )}\n\n      {/* Sticky Footer for Modify Mode */}\n      {isModifyMode && showModifySubmitFooter && (\n        <div className='fixed bottom-0 left-0 right-0 bg-white border-t-2 border-gray-200 shadow-lg z-50'>\n          <div className='container mx-auto px-6 py-4'>\n            <div className='flex items-center justify-between'>\n              <div className='flex items-center gap-3'>\n                <span className='text-sm font-medium text-gray-700'>\n                  {selectedComponent\n                    ? `Selected: ${selectedComponent.code} ${selectedComponent.name}`\n                    : 'Select a component to modify'}\n                </span>\n                {selectedComponent && (\n                  <span className='text-xs text-gray-500'>\n                    • Make your changes then click Submit\n                  </span>\n                )}\n              </div>\n              <div className='flex gap-3'>\n                <Button\n                  variant='outline'\n                  onClick={() => {\n                    setShowModifySubmitFooter(false);\n                    setLocation('/pms/modify-pms');\n                  }}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  className='bg-[#52BAF3] hover:bg-[#40a8e0] text-white'\n                  onClick={handleModifySubmit}\n                  disabled={!selectedComponent}\n                >\n                  Submit Change Request\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Components;\n"]}