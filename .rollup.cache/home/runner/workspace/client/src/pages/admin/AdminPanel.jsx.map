{"version":3,"file":"AdminPanel.jsx","sourceRoot":"","sources":["AdminPanel.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Card } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { useToast } from '@/hooks/use-toast';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport {\n  Download,\n  Upload,\n  FileSpreadsheet,\n  AlertCircle,\n  CheckCircle,\n  AlertTriangle,\n  FileDown,\n  FileText,\n} from 'lucide-react';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { apiRequest, queryClient } from '@/lib/queryClient';\nimport Alerts from './Alerts';\nimport Forms from '@/components/admin/Forms';\n\ninterface Template {\n  id: string;\n  name: string;\n  type: 'components' | 'spares' | 'stores';\n}\n\ninterface DryRunResult {\n  fileToken: string;\n  columns: string[];\n  summary: {\n    ok: number;\n    warnings: number;\n    errors: number;\n  };\n  rows: Array<{\n    row: number;\n    status: 'ok' | 'warning' | 'error';\n    errors: string[];\n    normalized: Record<string, any>;\n  }>;\n  errorReportUrl?: string;\n}\n\ninterface ImportHistory {\n  id: string;\n  date: string;\n  user: string;\n  mode: string;\n  created: number;\n  updated: number;\n  skipped: number;\n  archived?: number;\n}\n\nexport default function BulkImport() {\n  const { toast } = useToast();\n  const [selectedTemplate, setSelectedTemplate] = useState<Template | null>(\n    null\n  );\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [importMode, setImportMode] = useState<'add' | 'update' | 'upsert'>(\n    'add'\n  );\n  const [archiveMissing, setArchiveMissing] = useState(false);\n  const [dryRunResult, setDryRunResult] = useState<DryRunResult | null>(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isImporting, setIsImporting] = useState(false);\n\n  const templates: Template[] = [\n    { id: '1', name: 'Machinery Components', type: 'components' },\n    { id: '2', name: 'Stores', type: 'spares' },\n    { id: '3', name: 'Spares', type: 'stores' },\n    { id: '4', name: 'Template 4', type: 'components' },\n    { id: '5', name: 'Template 5', type: 'components' },\n    { id: '6', name: 'Template 6', type: 'components' },\n  ];\n\n  // Fetch import history\n  const { data: history, isLoading: historyLoading } = useQuery({\n    queryKey: ['/api/bulk/history', selectedTemplate?.type],\n    queryFn: async () => {\n      if (!selectedTemplate) return { items: [], total: 0 };\n      const response = await fetch(\n        `/api/bulk/history?type=${selectedTemplate.type}`\n      );\n      if (!response.ok) throw new Error('Failed to fetch history');\n      return response.json();\n    },\n    enabled: !!selectedTemplate,\n  });\n\n  // Download template\n  const handleDownloadTemplate = async () => {\n    if (!selectedTemplate) return;\n\n    try {\n      const response = await fetch(\n        `/api/bulk/template?type=${selectedTemplate.type}`\n      );\n      if (!response.ok) throw new Error('Failed to download template');\n\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${selectedTemplate.type}_template.xlsx`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n\n      toast({\n        title: 'Template Downloaded',\n        description: `${selectedTemplate.name} template has been downloaded.`,\n      });\n    } catch (error) {\n      toast({\n        title: 'Download Failed',\n        description: 'Failed to download template. Please try again.',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  // Handle file drop\n  const handleFileDrop = useCallback(\n    (e: React.DragEvent<HTMLDivElement>) => {\n      e.preventDefault();\n      const file = e.dataTransfer.files[0];\n      if (file && isValidFile(file)) {\n        setSelectedFile(file);\n        handleDryRun(file);\n      } else {\n        toast({\n          title: 'Invalid File',\n          description: 'Please upload a .xlsx, .xls, or .csv file',\n          variant: 'destructive',\n        });\n      }\n    },\n    [selectedTemplate, importMode, archiveMissing]\n  );\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file && isValidFile(file)) {\n      setSelectedFile(file);\n      handleDryRun(file);\n    } else {\n      toast({\n        title: 'Invalid File',\n        description: 'Please upload a .xlsx, .xls, or .csv file',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const isValidFile = (file: File) => {\n    const validExtensions = ['.xlsx', '.xls', '.csv'];\n    const fileName = file.name.toLowerCase();\n    return validExtensions.some(ext => fileName.endsWith(ext));\n  };\n\n  // Dry run validation\n  const handleDryRun = async (file: File) => {\n    if (!selectedTemplate) return;\n\n    setIsUploading(true);\n    setDryRunResult(null);\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('type', selectedTemplate.type);\n    formData.append('mode', importMode);\n    formData.append('archiveMissing', archiveMissing.toString());\n\n    try {\n      const response = await fetch('/api/bulk/dry-run', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Validation failed');\n      }\n\n      const result = await response.json();\n      setDryRunResult(result);\n\n      if (result.summary.errors > 0) {\n        toast({\n          title: 'Validation Complete',\n          description: `Found ${result.summary.errors} error(s). Please fix them before importing.`,\n          variant: 'destructive',\n        });\n      } else if (result.summary.warnings > 0) {\n        toast({\n          title: 'Validation Complete',\n          description: `File is valid with ${result.summary.warnings} warning(s).`,\n        });\n      } else {\n        toast({\n          title: 'Validation Complete',\n          description: 'File is valid and ready to import.',\n        });\n      }\n    } catch (error: any) {\n      toast({\n        title: 'Validation Failed',\n        description: error.message || 'Failed to validate file',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  // Perform import\n  const handleImport = async () => {\n    if (!dryRunResult || !selectedTemplate) return;\n\n    setIsImporting(true);\n\n    try {\n      const response = await apiRequest('POST', '/api/bulk/import', {\n        fileToken: dryRunResult.fileToken,\n        type: selectedTemplate.type,\n        mode: importMode,\n        archiveMissing,\n        vesselId: 'vessel-001', // TODO: Get from context\n      });\n\n      const result = await response.json();\n\n      toast({\n        title: 'Import Successful',\n        description: `Created: ${result.created}, Updated: ${result.updated}, Skipped: ${result.skipped}${result.archived ? `, Archived: ${result.archived}` : ''}`,\n      });\n\n      // Clear state and refresh history\n      setSelectedFile(null);\n      setDryRunResult(null);\n      queryClient.invalidateQueries({ queryKey: ['/api/bulk/history'] });\n    } catch (error: any) {\n      toast({\n        title: 'Import Failed',\n        description: error.message || 'Failed to import data',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsImporting(false);\n    }\n  };\n\n  // Download history file\n  const handleDownloadHistoryFile = async (\n    historyId: string,\n    fileType: 'file' | 'errors' | 'result-map'\n  ) => {\n    try {\n      const response = await fetch(\n        `/api/bulk/history/${historyId}/${fileType}`\n      );\n      if (!response.ok) throw new Error('Download failed');\n\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${fileType}.${fileType === 'file' ? 'xlsx' : 'csv'}`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n    } catch (error) {\n      toast({\n        title: 'Download Failed',\n        description: 'Failed to download file',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const [activeTab, setActiveTab] = useState<\n    'bulk-import' | 'alerts' | 'forms' | 'admin4'\n  >('bulk-import');\n\n  return (\n    <div className='p-6'>\n      {/* Header */}\n      <div className='mb-6'>\n        <h1 className='text-3xl font-bold'>Bulk Data Import</h1>\n        <div className='mt-4 flex gap-2'>\n          <Button\n            variant={activeTab === 'bulk-import' ? 'default' : 'outline'}\n            className={\n              activeTab === 'bulk-import' ? 'bg-blue-600 hover:bg-blue-700' : ''\n            }\n            onClick={() => setActiveTab('bulk-import')}\n          >\n            Bulk Data Imp\n          </Button>\n          <Button\n            variant={activeTab === 'alerts' ? 'default' : 'outline'}\n            className={\n              activeTab === 'alerts' ? 'bg-blue-600 hover:bg-blue-700' : ''\n            }\n            onClick={() => setActiveTab('alerts')}\n          >\n            Alerts\n          </Button>\n          <Button\n            variant={activeTab === 'forms' ? 'default' : 'outline'}\n            className={\n              activeTab === 'forms' ? 'bg-blue-600 hover:bg-blue-700' : ''\n            }\n            onClick={() => setActiveTab('forms')}\n          >\n            Forms\n          </Button>\n          <Button\n            variant={activeTab === 'admin4' ? 'default' : 'outline'}\n            className={\n              activeTab === 'admin4' ? 'bg-blue-600 hover:bg-blue-700' : ''\n            }\n            onClick={() => setActiveTab('admin4')}\n          >\n            Admin 4\n          </Button>\n        </div>\n      </div>\n\n      {/* Tab Content */}\n      {activeTab === 'bulk-import' ? (\n        <div className='grid grid-cols-12 gap-6'>\n          {/* Left Column - Templates */}\n          <div className='col-span-3'>\n            <div className='bg-[#52baf3] text-white p-0 rounded-lg overflow-hidden'>\n              <div className='bg-[#40a6e0] px-4 py-3'>\n                <h2 className='text-lg font-semibold text-white'>TEMPLATES</h2>\n              </div>\n              <div className='p-4 space-y-2'>\n                {templates.map((template, index) => (\n                  <button\n                    key={template.id}\n                    onClick={() => {\n                      setSelectedTemplate(template);\n                      setSelectedFile(null);\n                      setDryRunResult(null);\n                    }}\n                    className={`w-full text-left px-3 py-2 rounded-md transition-colors ${\n                      selectedTemplate?.id === template.id\n                        ? 'bg-white bg-opacity-20 text-white font-medium'\n                        : 'hover:bg-white hover:bg-opacity-10 text-white'\n                    }`}\n                  >\n                    {index + 1}. {template.name}\n                  </button>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Right Column - Detail */}\n          <div className='col-span-9'>\n            {selectedTemplate ? (\n              <Card className='p-6'>\n                {/* Template Header */}\n                <div className='flex justify-between items-center mb-6'>\n                  <h2 className='text-xl font-semibold'>\n                    {templates.findIndex(t => t.id === selectedTemplate.id) + 1}\n                    . {selectedTemplate.name}\n                  </h2>\n                  <Button onClick={handleDownloadTemplate} variant='outline'>\n                    <Download className='h-4 w-4 mr-2' />\n                    Download Template\n                  </Button>\n                </div>\n\n                {/* File Upload */}\n                <div\n                  className='border-2 border-dashed border-gray-300 rounded-lg p-8 text-center mb-6'\n                  onDrop={handleFileDrop}\n                  onDragOver={e => e.preventDefault()}\n                >\n                  <Upload className='h-12 w-12 mx-auto mb-4 text-gray-400' />\n                  <p className='text-gray-600 mb-2'>\n                    Drag and drop your completed template file here, or click to\n                    browse\n                  </p>\n                  <p className='text-sm text-gray-500 mb-4'>\n                    Supported formats: .csv, .xls, .xlsx\n                  </p>\n                  <label htmlFor='file-upload'>\n                    <Input\n                      id='file-upload'\n                      type='file'\n                      accept='.csv,.xls,.xlsx'\n                      onChange={handleFileSelect}\n                      className='hidden'\n                    />\n                    <Button variant='outline' asChild>\n                      <span>Choose Files</span>\n                    </Button>\n                  </label>\n                  {selectedFile && (\n                    <p className='mt-4 text-sm font-medium'>\n                      {selectedFile.name}\n                    </p>\n                  )}\n                </div>\n\n                {/* Options */}\n                <div className='grid grid-cols-2 gap-4 mb-6'>\n                  <div>\n                    <Label>Import Mode</Label>\n                    <Select\n                      value={importMode}\n                      onValueChange={(v: any) => setImportMode(v)}\n                    >\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value='add'>Add New</SelectItem>\n                        <SelectItem value='update'>Update Existing</SelectItem>\n                        <SelectItem value='upsert'>\n                          Upsert (Add or Update)\n                        </SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  {(importMode === 'update' || importMode === 'upsert') && (\n                    <div>\n                      <Label className='flex items-center gap-2'>\n                        <input\n                          type='checkbox'\n                          checked={archiveMissing}\n                          onChange={e => setArchiveMissing(e.target.checked)}\n                          className='rounded'\n                        />\n                        Archive Missing Records\n                      </Label>\n                      <p className='text-sm text-gray-500 mt-1'>\n                        Archive records not present in the file\n                      </p>\n                    </div>\n                  )}\n                </div>\n\n                <p className='text-sm text-gray-500 mb-6'>\n                  Date format: Accepted DD-MMM-YYYY, DD-MM-YYYY, or ISO\n                  (YYYY-MM-DD)\n                </p>\n\n                {/* Dry Run Preview */}\n                {isUploading && (\n                  <div className='text-center py-8'>\n                    <div className='animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4'></div>\n                    <p className='text-gray-600'>Validating file...</p>\n                  </div>\n                )}\n\n                {dryRunResult && (\n                  <div className='mb-6'>\n                    <h3 className='font-semibold mb-4'>Dry-Run Preview</h3>\n\n                    {/* Summary Pills */}\n                    <div className='flex gap-4 mb-4'>\n                      <Badge variant='outline' className='px-3 py-1'>\n                        <CheckCircle className='h-4 w-4 mr-1 text-green-600' />\n                        OK: {dryRunResult.summary.ok}\n                      </Badge>\n                      <Badge variant='outline' className='px-3 py-1'>\n                        <AlertTriangle className='h-4 w-4 mr-1 text-yellow-600' />\n                        Warnings: {dryRunResult.summary.warnings}\n                      </Badge>\n                      <Badge variant='outline' className='px-3 py-1'>\n                        <AlertCircle className='h-4 w-4 mr-1 text-red-600' />\n                        Errors: {dryRunResult.summary.errors}\n                      </Badge>\n                    </div>\n\n                    {/* Preview Table */}\n                    <div className='border rounded-lg overflow-hidden mb-4'>\n                      <Table>\n                        <TableHeader>\n                          <TableRow>\n                            <TableHead className='w-16'>Row</TableHead>\n                            <TableHead className='w-24'>Status</TableHead>\n                            {dryRunResult.columns.slice(0, 3).map(col => (\n                              <TableHead key={col}>{col}</TableHead>\n                            ))}\n                            <TableHead>Error(s)</TableHead>\n                          </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                          {dryRunResult.rows.slice(0, 20).map(row => (\n                            <TableRow key={row.row}>\n                              <TableCell>{row.row}</TableCell>\n                              <TableCell>\n                                <Badge\n                                  variant={\n                                    row.status === 'ok'\n                                      ? 'default'\n                                      : row.status === 'warning'\n                                        ? 'secondary'\n                                        : 'destructive'\n                                  }\n                                  className={\n                                    row.status === 'ok'\n                                      ? 'bg-green-100 text-green-800'\n                                      : row.status === 'warning'\n                                        ? 'bg-yellow-100 text-yellow-800'\n                                        : 'bg-red-100 text-red-800'\n                                  }\n                                >\n                                  {row.status.toUpperCase()}\n                                </Badge>\n                              </TableCell>\n                              {dryRunResult.columns.slice(0, 3).map(col => (\n                                <TableCell\n                                  key={col}\n                                  className='max-w-xs truncate'\n                                >\n                                  {row.normalized[col] || '-'}\n                                </TableCell>\n                              ))}\n                              <TableCell className='text-sm text-red-600'>\n                                {row.errors.join('; ')}\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </div>\n\n                    {/* Action Buttons */}\n                    <div className='flex justify-between'>\n                      {dryRunResult.errorReportUrl && (\n                        <Button variant='outline' asChild>\n                          <a href={dryRunResult.errorReportUrl} download>\n                            <FileDown className='h-4 w-4 mr-2' />\n                            Download Error Report\n                          </a>\n                        </Button>\n                      )}\n                      <Button\n                        onClick={handleImport}\n                        disabled={\n                          dryRunResult.summary.errors > 0 || isImporting\n                        }\n                        className='ml-auto bg-blue-600 hover:bg-blue-700'\n                      >\n                        {isImporting ? 'Importing...' : 'Import'}\n                      </Button>\n                    </div>\n                  </div>\n                )}\n\n                {/* Update History */}\n                <div>\n                  <h3 className='font-semibold mb-4'>Update History</h3>\n                  <div className='border rounded-lg overflow-hidden'>\n                    <Table>\n                      <TableHeader>\n                        <TableRow>\n                          <TableHead>Date</TableHead>\n                          <TableHead>User</TableHead>\n                          <TableHead>Mode</TableHead>\n                          <TableHead>Created</TableHead>\n                          <TableHead>Updated</TableHead>\n                          <TableHead>Skipped</TableHead>\n                          {importMode !== 'add' && (\n                            <TableHead>Archived</TableHead>\n                          )}\n                          <TableHead>Actions</TableHead>\n                        </TableRow>\n                      </TableHeader>\n                      <TableBody>\n                        {history?.items?.map((item: ImportHistory) => (\n                          <TableRow key={item.id}>\n                            <TableCell>\n                              {new Date(item.date).toLocaleDateString()}\n                            </TableCell>\n                            <TableCell>{item.user}</TableCell>\n                            <TableCell>{item.mode}</TableCell>\n                            <TableCell>{item.created}</TableCell>\n                            <TableCell>{item.updated}</TableCell>\n                            <TableCell>{item.skipped}</TableCell>\n                            {importMode !== 'add' && (\n                              <TableCell>{item.archived || 0}</TableCell>\n                            )}\n                            <TableCell>\n                              <div className='flex gap-2'>\n                                <Button\n                                  size='sm'\n                                  variant='ghost'\n                                  onClick={() =>\n                                    handleDownloadHistoryFile(item.id, 'file')\n                                  }\n                                >\n                                  <FileDown className='h-4 w-4' />\n                                </Button>\n                              </div>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                        {(!history?.items || history.items.length === 0) && (\n                          <TableRow>\n                            <TableCell\n                              colSpan={8}\n                              className='text-center text-gray-500'\n                            >\n                              No import history available\n                            </TableCell>\n                          </TableRow>\n                        )}\n                      </TableBody>\n                    </Table>\n                  </div>\n                </div>\n              </Card>\n            ) : (\n              <Card className='p-12 text-center'>\n                <FileSpreadsheet className='h-16 w-16 mx-auto mb-4 text-gray-400' />\n                <p className='text-gray-600'>\n                  Select a template from the left to begin\n                </p>\n              </Card>\n            )}\n          </div>\n        </div>\n      ) : activeTab === 'alerts' ? (\n        <Alerts />\n      ) : activeTab === 'forms' ? (\n        <Forms />\n      ) : activeTab === 'admin4' ? (\n        <div className='p-6'>\n          <Card className='p-6'>\n            <h2 className='text-2xl font-semibold mb-4'>Admin 4</h2>\n            <p className='text-gray-600'>\n              Admin 4 functionality will be implemented here.\n            </p>\n          </Card>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n"]}