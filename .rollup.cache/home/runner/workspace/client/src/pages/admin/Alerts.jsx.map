{"version":3,"file":"Alerts.jsx","sourceRoot":"","sources":["Alerts.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { queryClient } from '@/lib/queryClient';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Button } from '@/components/ui/button';\nimport { useToast } from '@/hooks/use-toast';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Label } from '@/components/ui/label';\nimport { Switch } from '@/components/ui/switch';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Input } from '@/components/ui/input';\nimport {\n  Bell,\n  Mail,\n  AlertCircle,\n  Clock,\n  Package,\n  Shield,\n  HardDrive,\n} from 'lucide-react';\nimport AlertPolicyDrawer from '@/components/alerts/AlertPolicyDrawer';\nimport AlertHistory from '@/components/alerts/AlertHistory';\n\ninterface AlertPolicy {\n  id: number;\n  alertType: string;\n  enabled: boolean;\n  priority: string;\n  emailEnabled: boolean;\n  inAppEnabled: boolean;\n  thresholds: string;\n  scopeFilters: string;\n  recipients: string;\n}\n\ninterface AlertConfig {\n  vesselId: string;\n  quietHoursEnabled: boolean;\n  quietHoursStart: string | null;\n  quietHoursEnd: string | null;\n  escalationEnabled: boolean;\n  escalationHours: number;\n  escalationRecipients: string;\n}\n\nconst alertTypeInfo = {\n  maintenance_due: {\n    label: 'Maintenance Due',\n    description: 'Alerts for upcoming maintenance tasks',\n    icon: Clock,\n    color: 'text-blue-600',\n  },\n  critical_inventory: {\n    label: 'Critical Inventory',\n    description: 'Alerts for low stock on critical items',\n    icon: Package,\n    color: 'text-red-600',\n  },\n  running_hours: {\n    label: 'Running Hours Threshold',\n    description: 'Alerts when components reach RH thresholds',\n    icon: AlertCircle,\n    color: 'text-orange-600',\n  },\n  certificate_expiration: {\n    label: 'Certificate Expiration',\n    description: 'Alerts for upcoming certificate expirations',\n    icon: Shield,\n    color: 'text-purple-600',\n  },\n  system_backup: {\n    label: 'System Backup',\n    description: 'Alerts for backup status and failures',\n    icon: HardDrive,\n    color: 'text-gray-600',\n  },\n};\n\nexport default function Alerts() {\n  const { toast } = useToast();\n  const [selectedPolicy, setSelectedPolicy] = useState<AlertPolicy | null>(\n    null\n  );\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [localPolicies, setLocalPolicies] = useState<AlertPolicy[]>([]);\n  const [localConfig, setLocalConfig] = useState<AlertConfig | null>(null);\n\n  // Fetch alert policies\n  const { data: policies, isLoading: policiesLoading } = useQuery({\n    queryKey: ['/api/alerts/policies'],\n    queryFn: async () => {\n      const response = await window.fetch('/api/alerts/policies');\n      if (!response.ok) throw new Error('Failed to fetch policies');\n      const data = await response.json();\n      setLocalPolicies(data);\n      return data;\n    },\n  });\n\n  // Fetch alert configuration\n  const { data: config, isLoading: configLoading } = useQuery({\n    queryKey: ['/api/alerts/config/V001'],\n    queryFn: async () => {\n      const response = await window.fetch('/api/alerts/config/V001');\n      if (!response.ok) throw new Error('Failed to fetch config');\n      const data = await response.json();\n      setLocalConfig(data);\n      return data;\n    },\n  });\n\n  // Batch update policies mutation\n  const updatePoliciesMutation = useMutation({\n    mutationFn: async (policies: AlertPolicy[]) => {\n      const response = await window.fetch('/api/alerts/policies/batch-update', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ policies }),\n      });\n      if (!response.ok) throw new Error('Failed to update policies');\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/alerts/policies'] });\n      toast({\n        title: 'Alert Configuration Saved',\n        description: 'Alert policies have been updated successfully.',\n      });\n    },\n    onError: () => {\n      toast({\n        title: 'Update Failed',\n        description: 'Failed to update alert policies. Please try again.',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Update config mutation\n  const updateConfigMutation = useMutation({\n    mutationFn: async (config: AlertConfig) => {\n      const response = await window.fetch('/api/alerts/config', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(config),\n      });\n      if (!response.ok) throw new Error('Failed to update config');\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/alerts/config/V001'] });\n      toast({\n        title: 'Configuration Saved',\n        description: 'Alert configuration has been updated successfully.',\n      });\n    },\n    onError: () => {\n      toast({\n        title: 'Update Failed',\n        description: 'Failed to update alert configuration. Please try again.',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const handlePolicyToggle = (\n    policyId: number,\n    field: 'enabled' | 'emailEnabled' | 'inAppEnabled',\n    value: boolean\n  ) => {\n    setLocalPolicies(prev =>\n      prev.map(p => (p.id === policyId ? { ...p, [field]: value } : p))\n    );\n  };\n\n  const handlePriorityChange = (policyId: number, priority: string) => {\n    setLocalPolicies(prev =>\n      prev.map(p => (p.id === policyId ? { ...p, priority } : p))\n    );\n  };\n\n  const handleSaveConfiguration = () => {\n    updatePoliciesMutation.mutate(localPolicies);\n  };\n\n  const handlePolicyClick = (policy: AlertPolicy) => {\n    setSelectedPolicy(policy);\n    setDrawerOpen(true);\n  };\n\n  const handlePolicyUpdate = (updatedPolicy: AlertPolicy) => {\n    setLocalPolicies(prev =>\n      prev.map(p => (p.id === updatedPolicy.id ? updatedPolicy : p))\n    );\n    setDrawerOpen(false);\n  };\n\n  const handleConfigUpdate = () => {\n    if (localConfig) {\n      updateConfigMutation.mutate(localConfig);\n    }\n  };\n\n  if (policiesLoading || configLoading) {\n    return <div className='p-6'>Loading alert configuration...</div>;\n  }\n\n  return (\n    <div className='p-6 space-y-6'>\n      <div className='bg-white rounded-lg shadow-sm'>\n        <div className='px-6 py-4 border-b'>\n          <h1 className='text-2xl font-semibold'>Alert Configuration</h1>\n          <p className='text-sm text-gray-600 mt-1'>\n            Configure alert policies and notification preferences\n          </p>\n        </div>\n\n        <Tabs defaultValue='policies' className='w-full'>\n          <TabsList className='w-full justify-start px-6 py-0 h-12 bg-transparent border-b'>\n            <TabsTrigger\n              value='policies'\n              className='data-[state=active]:border-b-2 data-[state=active]:border-blue-500'\n            >\n              Policies\n            </TabsTrigger>\n            <TabsTrigger\n              value='history'\n              className='data-[state=active]:border-b-2 data-[state=active]:border-blue-500'\n            >\n              History\n            </TabsTrigger>\n          </TabsList>\n\n          <TabsContent value='policies' className='p-6 space-y-6'>\n            {/* Policies Table */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Alert Policies</CardTitle>\n                <CardDescription>\n                  Configure which alerts are enabled and how they are delivered\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className='overflow-x-auto'>\n                  <table className='w-full'>\n                    <thead>\n                      <tr className='border-b'>\n                        <th className='text-left py-3 px-4'>Alert Type</th>\n                        <th className='text-left py-3 px-4'>Description</th>\n                        <th className='text-center py-3 px-4'>Email</th>\n                        <th className='text-center py-3 px-4'>In-App</th>\n                        <th className='text-center py-3 px-4'>Priority</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {localPolicies.map(policy => {\n                        const info =\n                          alertTypeInfo[\n                            policy.alertType as keyof typeof alertTypeInfo\n                          ];\n                        const Icon = info?.icon || Bell;\n\n                        return (\n                          <tr\n                            key={policy.id}\n                            className='border-b hover:bg-gray-50'\n                          >\n                            <td className='py-3 px-4'>\n                              <button\n                                onClick={() => handlePolicyClick(policy)}\n                                className='flex items-center gap-2 text-blue-600 hover:text-blue-700 font-medium'\n                              >\n                                <Icon className={`h-4 w-4 ${info?.color}`} />\n                                {info?.label || policy.alertType}\n                              </button>\n                            </td>\n                            <td className='py-3 px-4 text-sm text-gray-600'>\n                              {info?.description}\n                            </td>\n                            <td className='py-3 px-4 text-center'>\n                              <Switch\n                                checked={policy.emailEnabled}\n                                onCheckedChange={checked =>\n                                  handlePolicyToggle(\n                                    policy.id,\n                                    'emailEnabled',\n                                    checked\n                                  )\n                                }\n                                disabled={!policy.enabled}\n                              />\n                            </td>\n                            <td className='py-3 px-4 text-center'>\n                              <Switch\n                                checked={policy.inAppEnabled}\n                                onCheckedChange={checked =>\n                                  handlePolicyToggle(\n                                    policy.id,\n                                    'inAppEnabled',\n                                    checked\n                                  )\n                                }\n                                disabled={!policy.enabled}\n                              />\n                            </td>\n                            <td className='py-3 px-4'>\n                              <Select\n                                value={policy.priority || 'medium'}\n                                onValueChange={value =>\n                                  handlePriorityChange(policy.id, value)\n                                }\n                                disabled={!policy.enabled}\n                              >\n                                <SelectTrigger className='w-32'>\n                                  <SelectValue />\n                                </SelectTrigger>\n                                <SelectContent>\n                                  <SelectItem value='low'>Low</SelectItem>\n                                  <SelectItem value='medium'>Medium</SelectItem>\n                                  <SelectItem value='high'>High</SelectItem>\n                                </SelectContent>\n                              </Select>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </div>\n\n                <div className='mt-4 flex justify-end'>\n                  <Button\n                    onClick={handleSaveConfiguration}\n                    disabled={updatePoliciesMutation.isPending}\n                  >\n                    {updatePoliciesMutation.isPending\n                      ? 'Saving...'\n                      : 'Save Alert Configuration'}\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Quiet Hours & Escalation */}\n            <div className='grid grid-cols-1 md:grid-cols-2 gap-6'>\n              <Card>\n                <CardHeader>\n                  <CardTitle>Quiet Hours</CardTitle>\n                  <CardDescription>\n                    Configure when non-critical alerts should be held\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className='space-y-4'>\n                  <div className='flex items-center justify-between'>\n                    <Label htmlFor='quiet-hours'>Enable Quiet Hours</Label>\n                    <Switch\n                      id='quiet-hours'\n                      checked={localConfig?.quietHoursEnabled || false}\n                      onCheckedChange={checked =>\n                        setLocalConfig(prev =>\n                          prev ? { ...prev, quietHoursEnabled: checked } : null\n                        )\n                      }\n                    />\n                  </div>\n\n                  {localConfig?.quietHoursEnabled && (\n                    <div className='grid grid-cols-2 gap-4'>\n                      <div>\n                        <Label htmlFor='quiet-start'>Start Time</Label>\n                        <Input\n                          id='quiet-start'\n                          type='time'\n                          value={localConfig?.quietHoursStart || '22:00'}\n                          onChange={e =>\n                            setLocalConfig(prev =>\n                              prev\n                                ? { ...prev, quietHoursStart: e.target.value }\n                                : null\n                            )\n                          }\n                          className='mt-1'\n                        />\n                      </div>\n                      <div>\n                        <Label htmlFor='quiet-end'>End Time</Label>\n                        <Input\n                          id='quiet-end'\n                          type='time'\n                          value={localConfig?.quietHoursEnd || '06:00'}\n                          onChange={e =>\n                            setLocalConfig(prev =>\n                              prev\n                                ? { ...prev, quietHoursEnd: e.target.value }\n                                : null\n                            )\n                          }\n                          className='mt-1'\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  <p className='text-sm text-gray-600'>\n                    During quiet hours, only High priority alerts bypass. Others\n                    are queued for daily digest.\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle>Escalation</CardTitle>\n                  <CardDescription>\n                    Configure alert escalation for unacknowledged high priority\n                    alerts\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className='space-y-4'>\n                  <div className='flex items-center justify-between'>\n                    <Label htmlFor='escalation'>Enable Escalation</Label>\n                    <Switch\n                      id='escalation'\n                      checked={localConfig?.escalationEnabled || false}\n                      onCheckedChange={checked =>\n                        setLocalConfig(prev =>\n                          prev ? { ...prev, escalationEnabled: checked } : null\n                        )\n                      }\n                    />\n                  </div>\n\n                  {localConfig?.escalationEnabled && (\n                    <div>\n                      <Label htmlFor='escalation-hours'>\n                        Escalate after (hours)\n                      </Label>\n                      <Input\n                        id='escalation-hours'\n                        type='number'\n                        min={1}\n                        max={24}\n                        value={localConfig?.escalationHours || 4}\n                        onChange={e =>\n                          setLocalConfig(prev =>\n                            prev\n                              ? {\n                                  ...prev,\n                                  escalationHours: parseInt(e.target.value),\n                                }\n                              : null\n                          )\n                        }\n                        className='mt-1 w-24'\n                      />\n                    </div>\n                  )}\n\n                  <p className='text-sm text-gray-600'>\n                    If High alerts are not acknowledged within specified hours,\n                    escalate to Tech Superintendent & Office via email.\n                  </p>\n\n                  <Button\n                    onClick={handleConfigUpdate}\n                    disabled={updateConfigMutation.isPending}\n                    className='w-full'\n                  >\n                    {updateConfigMutation.isPending\n                      ? 'Saving...'\n                      : 'Save Configuration'}\n                  </Button>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          <TabsContent value='history' className='p-6'>\n            <AlertHistory />\n          </TabsContent>\n        </Tabs>\n      </div>\n\n      {/* Policy Drawer */}\n      {selectedPolicy && (\n        <AlertPolicyDrawer\n          policy={selectedPolicy}\n          open={drawerOpen}\n          onOpenChange={setDrawerOpen}\n          onSave={handlePolicyUpdate}\n        />\n      )}\n    </div>\n  );\n}\n"]}