{"version":3,"file":"AuthContext.jsx","sourceRoot":"","sources":["AuthContext.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  ReactNode,\n} from 'react';\nimport {\n  AuthenticatedUser,\n  LoginRequest,\n  UserRole,\n  Permission,\n} from '../../../shared/types/auth';\n\ninterface AuthContextType {\n  user: AuthenticatedUser | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (credentials: LoginRequest) => Promise<void>;\n  logout: () => void;\n  hasPermission: (permission: Permission) => boolean;\n  hasRole: (role: UserRole) => boolean;\n  hasAnyPermission: (permissions: Permission[]) => boolean;\n  token: string | null;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider = ({ children }: AuthProviderProps) => {\n  const [user, setUser] = useState<AuthenticatedUser | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for stored token on app startup\n    const storedToken = localStorage.getItem('auth_token');\n    const storedUser = localStorage.getItem('auth_user');\n\n    if (storedToken && storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser) as AuthenticatedUser;\n        setUser(parsedUser);\n      } catch (error) {\n        console.error('Failed to parse stored user:', error);\n        localStorage.removeItem('auth_token');\n        localStorage.removeItem('auth_user');\n      }\n    }\n\n    setIsLoading(false);\n  }, []);\n\n  const login = async (credentials: LoginRequest) => {\n    setIsLoading(true);\n    try {\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credentials),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Login failed');\n      }\n\n      const { user: authenticatedUser } = await response.json();\n      setUser(authenticatedUser);\n\n      // Store token and user data\n      localStorage.setItem('auth_token', authenticatedUser.token);\n      localStorage.setItem('auth_user', JSON.stringify(authenticatedUser));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('auth_user');\n  };\n\n  const hasPermission = (permission: Permission): boolean => {\n    return user?.permissions.includes(permission) ?? false;\n  };\n\n  const hasRole = (role: UserRole): boolean => {\n    return user?.role === role;\n  };\n\n  const hasAnyPermission = (permissions: Permission[]): boolean => {\n    return permissions.some(permission => hasPermission(permission));\n  };\n\n  const contextValue: AuthContextType = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    logout,\n    hasPermission,\n    hasRole,\n    hasAnyPermission,\n    token: user?.token || null,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Higher-order component for route protection\nexport const withAuth = <P extends object>(\n  WrappedComponent: React.ComponentType<P>,\n  requiredPermissions?: Permission[],\n  requiredRoles?: UserRole[]\n) => {\n  return function AuthenticatedComponent(props: P) {\n    const { isAuthenticated, hasAnyPermission, hasRole, isLoading, user } =\n      useAuth();\n\n    if (isLoading) {\n      return (\n        <div className='flex items-center justify-center min-h-screen'>\n          <div className='text-lg'>Loading...</div>\n        </div>\n      );\n    }\n\n    if (!isAuthenticated) {\n      return (\n        <div className='flex items-center justify-center min-h-screen'>\n          <div className='text-lg text-red-600'>\n            Please log in to access this page.\n          </div>\n        </div>\n      );\n    }\n\n    if (requiredPermissions && !hasAnyPermission(requiredPermissions)) {\n      return (\n        <div className='flex items-center justify-center min-h-screen'>\n          <div className='text-lg text-red-600'>\n            You don't have permission to access this page.\n          </div>\n        </div>\n      );\n    }\n\n    if (requiredRoles && !requiredRoles.some(role => hasRole(role))) {\n      return (\n        <div className='flex items-center justify-center min-h-screen'>\n          <div className='text-lg text-red-600'>\n            Your role doesn't have access to this page.\n          </div>\n        </div>\n      );\n    }\n\n    return <WrappedComponent {...props} />;\n  };\n};\n"]}